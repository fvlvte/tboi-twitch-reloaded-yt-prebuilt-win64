{"version":3,"sources":["webpack:///./src/components/InputField.vue?08a9","webpack:///./src/libs/streamEvents.js","webpack:///./src/screens/Channels.vue?db20","webpack:///./src/screens/Channels.vue","webpack:///./src/components/InputField.vue","webpack:///src/components/InputField.vue","webpack:///./src/components/InputField.vue?c147","webpack:///./src/components/InputField.vue?ba49","webpack:///src/screens/Channels.vue","webpack:///./src/screens/Channels.vue?e96a","webpack:///./src/screens/Channels.vue?9ffd","webpack:///./src/libs/youtubeConnect.js","webpack:///./src/libs/twitchConnect.js"],"names":["TextMessage","constructor","userId","userName","text","source","this","trim","DonateMessage","amount","type","Subscriber","Follower","render","_vm","_c","_self","staticClass","_v","_s","_f","$store","state","locale","ref","attrs","model","value","twitchChannel","callback","$$v","expression","youtubeUrl","on","connect","staticRenderFns","placeholder","domProps","val","$event","$emit","target","name","props","methods","getImgUrl","component","components","InputField","BigButton","data","computed","local","mounted","YoutubeConnect","streamURLString","apikey","split","reverse","join","streamURL","URL","lastMessagesId","vuewersCount","channel","nextPageToken","consoleStyle","hostname","streamId","searchParams","get","pathname","substr","events","onMessage","onSub","onFollower","onSuperchat","onConnect","onDisconnect","onError","fetch","then","res","_updateChat","updTimer","setInterval","bind","catch","err","_signal","disconnect","clearInterval","updateViewers","json","items","forEach","msg","isSponsor","channelId","authorName","_log","authorDetails","displayName","msgContent","console","log","TwitchConnect","viewersCount","botname","server","lastFollowers","plannedDisconnect","onBits","window","location","protocol","includes","webSocket","WebSocket","onmessage","onerror","onclose","onClose","onopen","onOpen","startCheckNewFollowers","checkFollowersFrom","Date","now","waitUserId","_checkFollowers","updFollowersTimer","stopCheckNewFollowers","headers","stream","viewers","parsed","_parseMessage","command","tags","hasOwnProperty","bits","parseFloat","bitsType","bitsCount","Math","round","message","send","readyState","toLowerCase","close","follower","from_id","splice","push","followed_at","from_name","rawMessage","parsedMessage","original","username","tagIndex","indexOf","userIndex","commandIndex","channelIndex","messageIndex","slice","keyedTags","splitted","startsWith"],"mappings":"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","file":"js/channels-screen.fd4a6504.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InputField.vue?vue&type=style&index=0&id=4b09c508&prod&lang=scss&\"","/**\r\n * Basic text message from Twitch or Youtube chat\r\n */\r\nexport class TextMessage {\r\n\r\n  /**\r\n   *\r\n   * @param {Number|String} userId - Unique user id\r\n   * @param {String} userName - Displayed user name\r\n   * @param {String} text - Message text\r\n   * @param {String} source - Source of message, \"yt\" for YouTube, \"tw\" fro Twitch\r\n   */\r\n  constructor(userId, userName, text, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.text = text.trim();\r\n    this.source = source;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Bits message for Twitch\r\n * Superchat message for Youtube\r\n */\r\nexport class DonateMessage {\r\n\r\n  /**\r\n   *\r\n   * @param {Number|String} userId - Unique user id\r\n   * @param {String} userName - Displayed user name\r\n   * @param {Number} amount - Amount of bits\r\n   * @param {Number} type - Type of bits\r\n   * @param {String} source - Source of message, \"yt\" for YouTube, \"tw\" fro Twitch\r\n   */\r\n  constructor (userId, userName, amount, type, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.amount = amount;\r\n    this.type = type;\r\n    this.source = source;\r\n  }\r\n}\r\n\r\n/**\r\n * New subscriber on Twitch\r\n * New sponsor on YouTube\r\n */\r\nexport class Subscriber {\r\n\r\n  /**\r\n   *\r\n   * @param {Number|String} userId - Unique user id\r\n   * @param {String} userName - Displayed user name\r\n   * @param {String} source - Source of message, \"yt\" for YouTube, \"tw\" fro Twitch\r\n   */\r\n  constructor (userId, userName, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.source = source;\r\n  }\r\n}\r\n\r\n/**\r\n * New followers\r\n * Currently not using\r\n */\r\nexport class Follower {\r\n  constructor (userId, userName, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.source = source;\r\n  }\r\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Channels.vue?vue&type=style&index=0&id=55b139ca&prod&lang=scss&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"channelScreen\"},[_c('h1',[_vm._v(_vm._s(_vm._f(\"t\")(\"whoAreYou\",_vm.$store.state.locale)))]),_c('div',{staticClass:\"channels-description\"},[_vm._v(_vm._s(_vm._f(\"t\")(\"channelsDesc\",_vm.$store.state.locale)))]),_c('div',{staticClass:\"fields\"},[_c('div',{staticClass:\"field\"},[_c('div',{staticClass:\"sign twitch\"},[_vm._v(\"Twitch\")]),_c('InputField',{ref:\"twitchChannel\",attrs:{\"placeholder\":_vm._f(\"t\")('channelName',_vm.$store.state.locale)},model:{value:(_vm.twitchChannel),callback:function ($$v) {_vm.twitchChannel=$$v},expression:\"twitchChannel\"}})],1),_c('div',{staticClass:\"field\"},[_c('div',{staticClass:\"sign youtube\"},[_vm._v(\"YouTube\")]),_c('InputField',{attrs:{\"placeholder\":_vm._f(\"t\")('streamURL',_vm.$store.state.locale)},model:{value:(_vm.youtubeUrl),callback:function ($$v) {_vm.youtubeUrl=$$v},expression:\"youtubeUrl\"}})],1)]),_c('div',[_c('BigButton',{on:{\"onClick\":_vm.connect}},[_vm._v(_vm._s(_vm._f(\"t\")(\"play\",_vm.$store.state.locale))+\" >\")])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"inputField\"},[_c('input',{ref:\"inputField\",attrs:{\"type\":\"text\",\"placeholder\":_vm.placeholder},domProps:{\"value\":_vm.val},on:{\"input\":function($event){return _vm.$emit('input', $event.target.value)}}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"inputField\">\r\n    <input ref=\"inputField\" v-bind:value=\"val\" v-on:input=\"$emit('input', $event.target.value)\" type=\"text\" :placeholder=\"placeholder\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"InputField\",\r\n\r\n  props: {\r\n    placeholder: String,\r\n    val: String\r\n  },\r\n\r\n  methods: {\r\n    getImgUrl(img) {\r\n      var images = require.context('../assets/img/', false, /\\.png$/)\r\n      return images('./' + img + \".png\")\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.inputField {\r\n  background-image: url(\"../assets/img/inputBg.png\");\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: left;\r\n\r\n  height: 100px;\r\n  padding: 5px;\r\n\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  padding-left: 25px;\r\n\r\n  input {\r\n    max-width: 500px;\r\n    width: 95%;\r\n    outline: none;\r\n    border: none;\r\n    background: none;\r\n    font: 1.5rem TeamMeat;\r\n    border-bottom: 3px solid #333;\r\n    margin-bottom: 3.8%;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InputField.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InputField.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InputField.vue?vue&type=template&id=4b09c508&\"\nimport script from \"./InputField.vue?vue&type=script&lang=js&\"\nexport * from \"./InputField.vue?vue&type=script&lang=js&\"\nimport style0 from \"./InputField.vue?vue&type=style&index=0&id=4b09c508&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"channelScreen\">\r\n    <h1>{{\"whoAreYou\" | t($store.state.locale)}}</h1>\r\n    <div class=\"channels-description\">{{\"channelsDesc\" | t($store.state.locale)}}</div>\r\n    <div class=\"fields\">\r\n      <div class=\"field\">\r\n        <div class=\"sign twitch\">Twitch</div>\r\n        <InputField v-model=\"twitchChannel\" ref=\"twitchChannel\" :placeholder=\"'channelName' | t($store.state.locale)\"/>\r\n      </div>\r\n      <div class=\"field\">\r\n        <div class=\"sign youtube\">YouTube</div>\r\n        <InputField v-model=\"youtubeUrl\" :placeholder=\"'streamURL' | t($store.state.locale)\"/>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <BigButton @onClick=\"connect\">{{\"play\" | t($store.state.locale)}} ></BigButton>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport InputField from '../components/InputField.vue';\r\nimport BigButton from '../components/BigButton.vue';\r\n\r\nimport TwitchConnect from '../libs/twitchConnect.js';\r\nimport YoutubeConnect from '../libs/youtubeConnect.js'\r\n\r\nexport default {\r\n  name: 'channelScreen',\r\n  components: {\r\n    InputField, BigButton\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      twitchChannel: \"\",\r\n      youtubeUrl: \"\"\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    local () {\r\n      return this.$root.local;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n    connect () {\r\n\r\n      if (this.twitchChannel == '' && this.youtubeUrl == '') return;\r\n\r\n      if (this.twitchChannel != '') {\r\n        this.$services.twitch = new TwitchConnect(this.twitchChannel);\r\n        this.$services.twitch.connect();\r\n        this.$store.commit('setTwitchName', this.twitchChannel);\r\n        //this.$services.twitch.startCheckNewFollowers();\r\n      }\r\n\r\n      if (this.youtubeUrl != '') {\r\n        this.$services.youtube = new YoutubeConnect(this.youtubeUrl);\r\n        this.$services.youtube.connect();\r\n      }\r\n\r\n      this.$router.push('/settings');\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this.$refs.twitchChannel.$refs.inputField.value = this.$store.state.twitchName;\r\n    this.twitchChannel = this.$store.state.twitchName;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.channels-description {\r\n  font-size: 16px;\r\n  margin-top: -12px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.fields {\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n\r\n  .sign {\r\n    font-size: 1.8rem;\r\n    margin-right: 15px;\r\n  }\r\n\r\n  .field {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    flex-wrap: wrap;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Channels.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Channels.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Channels.vue?vue&type=template&id=55b139ca&\"\nimport script from \"./Channels.vue?vue&type=script&lang=js&\"\nexport * from \"./Channels.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Channels.vue?vue&type=style&index=0&id=55b139ca&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import {TextMessage, DonateMessage, Subscriber} from './streamEvents';\r\n\r\nexport default class YoutubeConnect {\r\n\r\n  /**\r\n   * Create new chat object for Youtube\r\n   * @param {String} streamURLString - URL for YouTube stream\r\n   */\r\n  constructor (streamURLString) {\r\n    this.apikey = \"wgnn-wBx-_VT5Nu996o8ylc-t786swbRBySazIA\".split('').reverse().join('');\r\n    this.streamURL = new URL(streamURLString);\r\n    this.lastMessagesId = [];\r\n    this.vuewersCount = 0;\r\n    this.channel = null;\r\n    this.nextPageToken = null;\r\n\r\n    this.consoleStyle = 'background-color: #FF0000; color: #FFFFFF; border-radius: 100px;padding: 1px 4px;';\r\n\r\n    if (this.streamURL.hostname == \"www.youtube.com\" || this.streamURL.hostname == \"youtube.com\") {\r\n      this.streamId = this.streamURL.searchParams.get('v');\r\n    }\r\n    else {\r\n      this.streamId = this.streamURL.pathname.substr(1);\r\n    }\r\n\r\n    this.events = {\r\n      onMessage: () => {},\r\n      onSub: () => {},\r\n      onFollower: () => {},\r\n      onSuperchat: () => {},\r\n\r\n      onConnect: () => {},\r\n      onDisconnect: () => {},\r\n      onError:  () => {}\r\n    }\r\n  }\r\n\r\n  connect () {\r\n    fetch(\r\n      \"http://localhost:22137/init?ytId=\" + this.streamId \r\n    )\r\n    .then(res => {\r\n      this._updateChat();\r\n      this.updTimer = setInterval(this._updateChat.bind(this), 5000);\r\n    })\r\n    .catch (err => {\r\n      this._signal('onError', err);\r\n    })\r\n  }\r\n\r\n  disconnect () {\r\n\r\n    clearInterval(this.updTimer);\r\n    this._signal('onDisconnect', null);\r\n\r\n  }\r\n\r\n  updateViewers() {\r\n\r\n    /*return fetch(\r\n      `https://www.googleapis.com/youtube/v3/videos?part=liveStreamingDetails&id=${this.streamId}&fields=items%2FliveStreamingDetails&key=${this.apikey}`\r\n      )\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.items?.length > 0) {\r\n          this.viewersCount = res.items[0].liveStreamingDetails.concurrentViewers\r\n        }\r\n      })*/\r\n\r\n  }\r\n\r\n  _updateChat () {\r\n    fetch(\r\n      \"http://localhost:22137/pop?ytId=\" + this.streamId\r\n    )\r\n    .then (res => {\r\n      return res.json();\r\n    })\r\n    .then (res => {\r\n      res.items.forEach(msg => {\r\n       \r\n        /*\r\n         { channelId: i.authorExternalChannelId || i.authorName.simpleText, authorName: i.authorName.simpleText, msgContent: '$$SYS_MEMBER$$' }\r\n        */\r\n\r\n        // Check if this is a basic message\r\n        if (!msg.isSponsor) {\r\n\r\n          this._signal('onMessage', new TextMessage(\r\n            msg.channelId,\r\n            msg.authorName,\r\n            msg.msgContent,\r\n            'yt'\r\n          ));\r\n          return;\r\n        }\r\n\r\n        // Check if message have superchat data (like bits for Twitch)\r\n       /* if (msg.snippet.type == 'superChatEvent') {\r\n          this._signal('onSuperchat', new DonateMessage(\r\n            msg.snippet.authorChannelId,\r\n            msg.authorDetails.displayName,\r\n            msg.snippet.superChatDetails.tier > 5 ? 5 : msg.snippet.superChatDetails.tier,\r\n            1,\r\n            'yt'\r\n          ));\r\n\r\n          this._log(\"Get donate from \" + msg.authorDetails.displayName + \" - \" + msg.snippet.superChatDetails.amountMicros);\r\n          return;\r\n        }\r\n\r\n        else if (msg.snippet.type == 'superStickerEvent') {\r\n          this._signal('onSuperchat', new DonateMessage(\r\n            msg.snippet.authorChannelId,\r\n            msg.authorDetails.displayName,\r\n            msg.snippet.superStickerDetails.tier > 5 ? 5 : msg.snippet.superStickerDetails.tier,\r\n            1,\r\n            'yt'\r\n          ));\r\n\r\n          this._log(\"Get donate from \" + msg.authorDetails.displayName + \" - \" + msg.snippet.superChatDetails.amountMicros);\r\n          return;\r\n        }*/\r\n\r\n        // Check if this is new subscriber\r\n        if (msg.isSponsor) {\r\n          this._signal('onSub', new Subscriber(\r\n            msg.channelId,\r\n            msg.authorName,\r\n            'yt'\r\n          ));\r\n\r\n          this._log(\"New subscriber \" + msg.authorDetails.displayName);\r\n          return;\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  _log (msg) {\r\n    console.log('%cYoutube%c ' + msg, this.consoleStyle, '');\r\n  }\r\n\r\n  _signal (name, data) {\r\n\r\n    this.events[name](data);\r\n\r\n  }\r\n}","import {TextMessage, DonateMessage, Subscriber, Follower} from './streamEvents';\r\n\r\nexport default class TwitchConnect {\r\n\r\n  /**\r\n   * Create new chat object for Twitch\r\n   * @param {String} channel - Streamer nickname\r\n   */\r\n  constructor (channel) {\r\n    this.channel = channel;\r\n    this.userId = null;\r\n    this.viewersCount = 0;\r\n\r\n    this.apikey = \"vtr91vw1dzji7piypq7r13itr6is2i\"; // API Key for Twitch API. Not very secret information\r\n    this.botname = \"justinfan666\";\r\n    this.server = \"irc-ws.chat.twitch.tv\";\r\n\r\n    this.consoleStyle = 'background-color: #6441A4; color: #FFFFFF; border-radius: 100px;padding: 1px 4px;';\r\n\r\n    this.lastFollowers = [];\r\n    this.plannedDisconnect = false;\r\n\r\n    this.events = {\r\n      onMessage: () => {},\r\n      onSub: () => {},\r\n      onFollower: () => {},\r\n      onBits: () => {},\r\n\r\n      onConnect: () => {},\r\n      onDisconnect: () => {},\r\n      onError: () => {}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to Twitch chat using websockets\r\n   */\r\n  connect () {\r\n    if (window.location.protocol.includes('https')) {\r\n      this.webSocket = new WebSocket('wss://' + this.server + ':443/', 'irc');\r\n    }\r\n    else {\r\n      this.webSocket = new WebSocket('ws://' + this.server + ':80/', 'irc');\r\n    }\r\n\r\n\r\n    this.webSocket.onmessage = this.onMessage.bind(this);\r\n    this.webSocket.onerror = this.onError.bind(this);\r\n    this.webSocket.onclose = this.onClose.bind(this);\r\n    this.webSocket.onopen = this.onOpen.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Lauching request for checking new followers.\r\n   * Not working, because requires backend implementation\r\n   */\r\n  startCheckNewFollowers () {\r\n    this.checkFollowersFrom = Date.now();\r\n\r\n    let waitUserId = setInterval((() => {\r\n      if (this.userId) {\r\n        clearInterval(waitUserId);\r\n        this._checkFollowers();\r\n        this.updFollowersTimer = setInterval(this._checkFollowers.bind(this), 3*60*1000);\r\n      }\r\n    }).bind(this), 500);\r\n  }\r\n\r\n  /**\r\n   * Disable followers checking\r\n   */\r\n  stopCheckNewFollowers () {\r\n    clearInterval(this.updFollowersTimer);\r\n  }\r\n\r\n  updateViewers () {\r\n\r\n    return fetch(`https://api.twitch.tv/helix/streams?user_login=${this.channel}`, {\r\n      headers: { 'Client-ID': this.apikey },\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.stream) {\r\n        this.viewersCount = res.stream.viewers\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * Calling whem new message received\r\n   * @param {String} msg - Raw message from Twitch\r\n   */\r\n  onMessage(msg) {\r\n    // Ignore incorrect messages\r\n    if (msg == null) return;\r\n\r\n    // Try to parse message\r\n    let parsed = this._parseMessage(msg.data);\r\n\r\n    //Ignore unparsed messages\r\n    if (parsed == null) return;\r\n\r\n    // Get PING, send PONG\r\n    if (parsed.command === \"PING\") {\r\n      this.webSocket.send(\"PONG :\" + parsed.message);\r\n      return;\r\n    }\r\n\r\n    // Get user id\r\n    if (parsed.command === \"ROOMSTATE\") {\r\n      this.userId = parsed.tags['room-id'];\r\n      return;\r\n    }\r\n\r\n    // Handle subscribers\r\n    if (parsed.command == \"USERNOTICE\" && (parsed.tags[\"msg-id\"].includes('sub') || parsed.tags[\"msg-id\"].includes('gift'))) {\r\n\r\n      // Gifted subs\r\n      if (parsed.tags.hasOwnProperty(\"msg-param-recipient-display-name\")) {\r\n        this._signal('onSub', new Subscriber(\r\n          parsed.tags[\"msg-param-recipient-id\"],\r\n          parsed.tags[\"msg-param-recipient-display-name\"],\r\n          'tw'\r\n        ));\r\n\r\n        this._log(\"New gifted subscriber \" + parsed.tags[\"msg-param-recipient-display-name\"]);\r\n      }\r\n\r\n      // Basic subs\r\n      else {\r\n        this._signal('onSub', new Subscriber(\r\n          parsed.tags[\"user-id\"],\r\n          parsed.tags[\"display-name\"],\r\n          'tw'\r\n        ));\r\n      }\r\n\r\n      this._log(\"New subscriber \" + parsed.tags[\"display-name\"]);\r\n    }\r\n\r\n    // Handle bits\r\n    else if (parsed.command == \"PRIVMSG\" && parsed.tags.hasOwnProperty('bits')) {\r\n\r\n      let bits = parseFloat(parsed.tags[\"bits\"]);\r\n      let bitsType = 1;\r\n      let bitsCount = bits > 10 ? 10 : bits;\r\n\r\n      if (bits < 10) return;\r\n\r\n      if (bits / 100 >= 1) {\r\n        bitsType = 2;\r\n        bitsCount = Math.round(bits / 100);\r\n      }\r\n\r\n      if (bits / 1000 >= 1) {\r\n        bitsType = 3;\r\n        bitsCount = Math.round(bits / 1000);\r\n      }\r\n\r\n      if (bits / 5000 >= 1) {\r\n        bitsType = 4;\r\n        bitsCount = Math.round(bits / 5000);\r\n      }\r\n\r\n      if (bits / 10000 >= 1) {\r\n        bitsType = 5;\r\n        bitsCount = Math.round(bits / 10000);\r\n      }\r\n\r\n      bitsCount = bitsCount > 10 ? 10 : bitsCount;\r\n\r\n      this._signal('onBits', new DonateMessage(\r\n        parsed.tags[\"user-id\"],\r\n        parsed.tags[\"display-name\"],\r\n        bitsCount,\r\n        bitsType,\r\n        'tw'\r\n      ));\r\n\r\n      this._log(\"Get donate from \" + parsed.tags[\"display-name\"] + \" - \" + parsed.tags[\"bits\"]);\r\n    }\r\n\r\n    // Handle default message\r\n    else if (parsed.command == \"PRIVMSG\") {\r\n      this._signal('onMessage', new TextMessage(\r\n        parsed.tags[\"user-id\"],\r\n        parsed.tags[\"display-name\"],\r\n        parsed.message,\r\n        'tw'\r\n      ));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called on error with websocket\r\n   * @param {String} msg\r\n   */\r\n  onError (msg) {\r\n    this._signal('onError', msg);\r\n    this._log(\"Error: \");\r\n    console.log(msg);\r\n  }\r\n\r\n  /**\r\n   * Called on disconnect from websocket\r\n   */\r\n  onClose () {\r\n    if (this.plannedDisconnect) {\r\n      this._signal('onDisconnect');\r\n    }\r\n    else {\r\n      this.connect();\r\n    }\r\n\r\n    this._log(\"Disconnect from websocket\");\r\n  }\r\n\r\n  /**\r\n   * Called when connection with chat established\r\n   */\r\n  onOpen () {\r\n    if (this.webSocket !== null && this.webSocket.readyState === 1) {\r\n      this._log(\"Connected to websocket\");\r\n\r\n      this.webSocket.send('CAP REQ :twitch.tv/tags twitch.tv/commands twitch.tv/membership');\r\n      this.webSocket.send('NICK ' + this.botname);\r\n      this.webSocket.send('JOIN #' + this.channel.toLowerCase());\r\n\r\n      this._signal('onConnect');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close current connection with Twitch chat\r\n   */\r\n  close () {\r\n    this.plannedDisconnect = true;\r\n    if(this.webSocket){\r\n      this.webSocket.close();\r\n    }\r\n  }\r\n\r\n  _signal (name, data) {\r\n    this.events[name](data);\r\n  }\r\n\r\n  _checkFollowers () {\r\n    fetch (\"https://api.twitch.tv/helix/users/follows?first=100&to_id=\" + this.userId, {\r\n      headers: {\r\n        'Client-ID': this.apikey\r\n      }\r\n    })\r\n    .then (res => res.json())\r\n    .then (res => {\r\n      res.data.forEach(follower => {\r\n        // If follower exists, skip it\r\n        if (this.lastFollowers.includes(follower.from_id)) return;\r\n\r\n        // Check array size and clear it if need\r\n        if (this.lastFollowers > 1000)\r\n          this.lastFollowers = this.lastFollowers.splice(100, 900);\r\n\r\n        // Add new follower to readed\r\n        this.lastFollowers.push(follower.from_id);\r\n\r\n        if (new Date(follower.followed_at) < this.checkFollowersFrom) return;\r\n\r\n        this._signal('onFollower', new Follower(\r\n          follower.from_id,\r\n          follower.from_name,\r\n          'tw'\r\n        ));\r\n\r\n        this._log(\"New follower \" + follower.from_name);\r\n      })\r\n    })\r\n  }\r\n\r\n  _log (msg) {\r\n    console.log('%cTwitch%c ' + msg, this.consoleStyle, '');\r\n  }\r\n\r\n  _parseMessage(rawMessage) {\r\n    let parsedMessage = {\r\n        message: null,\r\n        tags: null,\r\n        command: null,\r\n        original: rawMessage,\r\n        channel: null,\r\n        username: null\r\n    };\r\n\r\n    if(rawMessage[0] === '@') {\r\n        let tagIndex = rawMessage.indexOf(' '),\r\n        userIndex = rawMessage.indexOf(' ', tagIndex + 1),\r\n        commandIndex = rawMessage.indexOf(' ', userIndex + 1),\r\n        channelIndex = rawMessage.indexOf(' ', commandIndex + 1),\r\n        messageIndex = rawMessage.indexOf(':', channelIndex + 1);\r\n\r\n        // Parse tags to key-value dictionary\r\n        let tags = rawMessage.slice(0, tagIndex) != null ? rawMessage.slice(0, tagIndex).substr(1).split(\";\") : [];\r\n        let keyedTags = {};\r\n\r\n        tags.forEach(val => {\r\n          let splitted = val.split('=');\r\n          keyedTags[splitted[0]] = splitted[1];\r\n        });\r\n\r\n        parsedMessage.tags = keyedTags;\r\n\r\n        parsedMessage.username = rawMessage.slice(tagIndex + 2, rawMessage.indexOf('!'));\r\n        parsedMessage.command = rawMessage.slice(userIndex + 1, commandIndex);\r\n        parsedMessage.channel = rawMessage.slice(commandIndex + 1, channelIndex);\r\n        parsedMessage.message = rawMessage.slice(messageIndex + 1);\r\n    }\r\n    else if (rawMessage.startsWith(\"PING\")) {\r\n        parsedMessage.command = \"PING\";\r\n        parsedMessage.message = rawMessage.split(\":\")[1];\r\n    }\r\n\r\n    return parsedMessage;\r\n  }\r\n}"],"sourceRoot":""}