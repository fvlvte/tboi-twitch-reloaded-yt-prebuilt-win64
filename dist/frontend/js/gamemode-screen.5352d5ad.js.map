{"version":3,"sources":["webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/error-stack-clear.js","webpack:///./src/screens/Gamemode.vue?dd86","webpack:///./node_modules/core-js/internals/function-apply.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./src/screens/Gamemode.vue","webpack:///./src/isaac/enums/Colors.js","webpack:///./src/isaac/enums/Gamemodes.js","webpack:///./src/isaac/helperFuncs.js","webpack:///./src/isaac/data/streamers.js","webpack:///./src/isaac/classes/Polls/Base/BasicPoll.js","webpack:///./src/isaac/data/ignorableItems.js","webpack:///./src/isaac/classes/Polls/Base/GraphicPoll.js","webpack:///./src/isaac/classes/Polls/Graphic/ItemsPoll.js","webpack:///./src/isaac/classes/Polls/Base/DefaultPoll.js","webpack:///./src/isaac/classes/Polls/Text/EventsPoll.js","webpack:///./src/isaac/classes/Polls/Graphic/TrinketsPoll.js","webpack:///./src/isaac/classes/Polls/Bar/PocketsPoll.js","webpack:///./src/isaac/classes/Message.js","webpack:///./src/isaac/classes/SpecialTriggers.js","webpack:///./src/isaac/classes/SpecialMessageHandler.js","webpack:///./src/isaac/Isaac.js","webpack:///src/screens/Gamemode.vue","webpack:///./src/screens/Gamemode.vue?a63d","webpack:///./src/screens/Gamemode.vue?2c67","webpack:///./node_modules/core-js/internals/to-string.js","webpack:///./src/libs/streamEvents.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./src/isaac/models/ITMRText.js","webpack:///./node_modules/core-js/internals/install-error-cause.js","webpack:///./node_modules/core-js/internals/proxy-accessor.js","webpack:///./node_modules/core-js/internals/error-stack-installable.js","webpack:///./src/libs/youtubeConnect.js","webpack:///./src/isaac/isaacConnect.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/modules/es.error.cause.js","webpack:///./src/isaac/models/ITMRColor.js","webpack:///./src/libs/twitchConnect.js","webpack:///./node_modules/core-js/internals/normalize-string-argument.js","webpack:///./node_modules/core-js/internals/wrap-error-constructor-with-cause.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./src/plugins/locale/translateFunction.js"],"names":["wellKnownSymbol","TO_STRING_TAG","test","module","exports","String","uncurryThis","$Error","Error","replace","TEST","arg","stack","V8_OR_CHAKRA_STACK_ENTRY","IS_V8_OR_CHAKRA_STACK","dropEntries","prepareStackTrace","NATIVE_BIND","FunctionPrototype","Function","prototype","apply","call","Reflect","bind","arguments","isCallable","$String","$TypeError","TypeError","argument","render","_vm","this","_c","_self","staticClass","_v","_s","_f","$store","state","locale","on","$event","start","attrs","getImgUrl","staticRenderFns","white","ITMRColor","lightGray","gray","darkGray","black","red","yellow","ITMR_GAMEMODES","EASY","NORMAL","CRAZY","getRandomElementsFromArr","arr","n","result","Array","len","length","taken","RangeError","x","Math","floor","random","weightedRandom","options","i","weights","weight","randString","characters","charactersLength","charAt","getNormalName","name","titleCase","str","splitStr","toLowerCase","split","toUpperCase","substring","join","twitch","youtube","trinket","BasicPoll","constructor","Isaac","ready","pollEnd","freezed","text","firstline","ITMRText","settings","textpos","l1","Colors","secondline","l2","handleMessage","msg","prepare","update","unfreeze","freeze","GraphicPoll","pollTime","delayTime","super","votes","allVotesCount","users","variants","isFirstUpdate","X","Y","services","itmr","sendToGame","m","d","f1","gfx","f2","f3","isPaused","setPostfix","t","lang","runNextAction","pollTexts","getPollText","setText","endPoll","prepareNextAction","texts","setPos","push","forEach","setBlink","handleMessaage","voteFor","source","userId","num","user","specialTriggers","triggers","russianHackers","enabled","shuffle","getWinner","indexOf","max","getPercents","variant","hideVotes","round","ItemsPoll","items","lists","action","then","res","setReady","out","playerItems","gamemode","filter","playerItem","ignorableItems","some","ignItem","find","item","id","e","console","log","chances","removeItems","itemsToRemove","map","itemId","currentItemPool","special","winner","remove","DefaultPoll","EventsPoll","preparedEvents","events","event","desc","specialTrigger","msgTrigger","selectedEvent","activate","setColor","TrinketsPoll","trinkets","PocketsPoll","positiveVotes","pollType","fillerVotes","playerType","types","title","sectors","barType","getFirstlineModifier","min","value","pickupType","substr","positive","ceil","Message","time","textsForRemove","SpecialTriggers","modifier","stopAll","key","Object","entries","SpecialMessageHandler","movePlayer","viewersAttack","heavyRain","sended","message","showInChat","resetSended","disableAll","object","activeUsers","ticksCount","chatWindow","timer","currentAction","nextAction","freezedActions","specialMessageHandler","onMessage","onSub","onSubscriber","onBits","onDonate","onSuperchat","onReconnect","sendSettings","addHandler","paused","acceptPoll","skipPoll","enable","_log","clearInterval","clearAll","setInterval","tick","loadData","streamers","streamer","channel","checkOutput","keys","isConnected","changeTextPos","pos","userName","closed","postMessage","chatMessage","type","subscriber","subsAndBits","subs","immediateAction","subtime","donate","bits","superchat","amount","selectedPoll","other","timings","vote","delay","pop","setPrefix","giveGift","active","passive","familiars","components","BigButton","mounted","methods","component","classof","TextMessage","trim","DonateMessage","Subscriber","Follower","isObject","setPrototypeOf","$this","dummy","Wrapper","NewTarget","NewTargetPrototype","color","blink","size","isCenter","postfix","prefix","vector","removeBlink","setSize","setCenter","center","obj","equals","curText","createNonEnumerableProperty","O","cause","defineProperty","f","Target","Source","configurable","get","set","it","fails","createPropertyDescriptor","error","YoutubeConnect","streamURLString","apikey","reverse","streamURL","URL","lastMessagesId","vuewersCount","nextPageToken","consoleStyle","hostname","streamId","searchParams","pathname","onFollower","onConnect","onDisconnect","onError","connect","fetch","_updateChat","updTimer","catch","err","_signal","disconnect","updateViewers","json","isSponsor","channelId","authorName","authorDetails","displayName","msgContent","data","IsaacConnect","port","stats","success","errors","handlers","checkOutputTimer","searchServerTimer","search","method","body","stopSearch","testConnect","Promise","all","high","repeat","resolve","reject","_send","com","c","func","removeHandler","JSON","stringify","anObject","aPossiblePrototype","setter","CORRECT_SETTER","getOwnPropertyDescriptor","proto","__proto__","undefined","$","global","wrapErrorConstructorWithCause","WEB_ASSEMBLY","WebAssembly","FORCED","exportGlobalErrorCauseWrapper","ERROR_NAME","wrapper","arity","forced","exportWebAssemblyErrorCauseWrapper","target","stat","init","r","g","b","a","TwitchConnect","viewersCount","botname","server","lastFollowers","plannedDisconnect","window","location","protocol","includes","webSocket","WebSocket","onmessage","onerror","onclose","onClose","onopen","onOpen","startCheckNewFollowers","checkFollowersFrom","Date","now","waitUserId","_checkFollowers","updFollowersTimer","stopCheckNewFollowers","headers","stream","viewers","parsed","_parseMessage","command","tags","hasOwnProperty","parseFloat","bitsType","bitsCount","send","readyState","close","follower","from_id","splice","followed_at","from_name","rawMessage","parsedMessage","original","username","tagIndex","userIndex","commandIndex","channelIndex","messageIndex","slice","keyedTags","val","splitted","startsWith","toString","$default","getBuiltIn","hasOwn","isPrototypeOf","copyConstructorProperties","proxyAccessor","inheritIfRequired","normalizeStringArgument","installErrorCause","clearErrorStack","ERROR_STACK_INSTALLABLE","DESCRIPTORS","IS_PURE","FULL_NAME","IS_AGGREGATE_ERROR","STACK_TRACE_LIMIT","OPTIONS_POSITION","path","OriginalError","OriginalErrorPrototype","BaseError","WrappedError","TO_STRING_TAG_SUPPORT","classofRaw","$Object","CORRECT_ARGUMENTS","tryGet","tag","callee","l_Ru","strings","l_En"],"mappings":"sGAAA,IAAIA,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAChCE,EAAO,GAEXA,EAAKD,GAAiB,IAEtBE,EAAOC,QAA2B,eAAjBC,OAAOH,I,uBCPxB,IAAII,EAAc,EAAQ,QAEtBC,EAASC,MACTC,EAAUH,EAAY,GAAGG,SAEzBC,EAAO,SAAWC,GAAO,OAAON,OAAOE,EAAOI,GAAKC,OAA5C,CAAuD,UAC9DC,EAA2B,uBAC3BC,EAAwBD,EAAyBX,KAAKQ,GAE1DP,EAAOC,QAAU,SAAUQ,EAAOG,GAChC,GAAID,GAAyC,iBAATF,IAAsBL,EAAOS,kBAC/D,MAAOD,IAAeH,EAAQH,EAAQG,EAAOC,EAA0B,IACvE,OAAOD,I,oCCZX,W,uBCAA,IAAIK,EAAc,EAAQ,QAEtBC,EAAoBC,SAASC,UAC7BC,EAAQH,EAAkBG,MAC1BC,EAAOJ,EAAkBI,KAG7BnB,EAAOC,QAA4B,iBAAXmB,SAAuBA,QAAQF,QAAUJ,EAAcK,EAAKE,KAAKH,GAAS,WAChG,OAAOC,EAAKD,MAAMA,EAAOI,c,gDCR3B,IAAIC,EAAa,EAAQ,QAErBC,EAAUtB,OACVuB,EAAaC,UAEjB1B,EAAOC,QAAU,SAAU0B,GACzB,GAAuB,iBAAZA,GAAwBJ,EAAWI,GAAW,OAAOA,EAChE,MAAMF,EAAW,aAAeD,EAAQG,GAAY,qB,2CCPtD,IAAIC,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,WAAWA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIa,MAAM,MAAM,CAACX,EAAG,KAAK,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,OAAOA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,IAAI,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,WAAWA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,MAAM,CAACY,MAAM,CAAC,IAAMd,EAAIe,UAAU,gBAAgBb,EAAG,MAAM,CAACE,YAAY,kBAAkBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIa,MAAM,MAAM,CAACX,EAAG,KAAK,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,UAAUA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,IAAI,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,cAAcA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,MAAM,CAACY,MAAM,CAAC,IAAMd,EAAIe,UAAU,mBAAmBb,EAAG,MAAM,CAACE,YAAY,kBAAkBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIa,MAAM,MAAM,CAACX,EAAG,KAAK,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,QAAQA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,IAAI,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,IAAPP,CAAY,YAAYA,EAAIQ,OAAOC,MAAMC,YAAYR,EAAG,MAAM,CAACY,MAAM,CAAC,IAAMd,EAAIe,UAAU,sBAEjkCC,EAAkB,G,gDCDP,GAEbC,MAAO,IAAIC,OAAU,IAAI,IAAI,IAAI,GACjCC,UAAW,IAAID,OAAU,IAAK,IAAK,IAAK,GACxCE,KAAM,IAAIF,OAAU,IAAK,IAAK,IAAK,GACnCG,SAAU,IAAIH,OAAU,GAAI,GAAI,GAAI,GACpCI,MAAO,IAAIJ,OAAU,EAAE,EAAE,EAAE,GAE3BK,IAAK,IAAIL,OAAU,IAAI,EAAE,EAAE,GAC3BM,OAAQ,IAAIN,OAAU,IAAK,IAAK,EAAG,ICP9B,MAAMO,EAAiB,CAC5BC,KAAM,EACNC,OAAQ,EACRC,MAAO,G,0BCDF,SAASC,EAA0BC,EAAKC,GAC7C,IAAIC,EAAS,IAAIC,MAAMF,GACnBG,EAAMJ,EAAIK,OACVC,EAAQ,IAAIH,MAAMC,GACtB,GAAIH,EAAIG,EACJ,MAAM,IAAIG,WAAW,gEACzB,MAAON,IAAK,CACR,IAAIO,EAAIC,KAAKC,MAAMD,KAAKE,SAAWP,GACnCF,EAAOD,GAAKD,EAAIQ,KAAKF,EAAQA,EAAME,GAAKA,GACxCF,EAAME,KAAOJ,KAAOE,EAAQA,EAAMF,GAAOA,EAE7C,OAAOF,EAOF,SAASU,EAAeC,GAC7B,IAAIC,EAEAC,EAAU,GAEd,IAAKD,EAAI,EAAGA,EAAID,EAAQR,OAAQS,IAC9BC,EAAQD,GAAKD,EAAQC,GAAGE,QAAUD,EAAQD,EAAI,IAAM,GAEtD,IAAIH,EAASF,KAAKE,SAAWI,EAAQA,EAAQV,OAAS,GAEtD,IAAKS,EAAI,EAAGA,EAAIC,EAAQV,OAAQS,IAC9B,GAAIC,EAAQD,GAAKH,EACf,MAEJ,OAAOE,EAAQC,GAQV,SAASG,EAAWZ,GAIzB,IAHA,IAAIH,EAAS,GACTgB,EAAa,iEACbC,EAAmBD,EAAWb,OACzBS,EAAI,EAAGA,EAAIT,EAAQS,IAC1BZ,GAAUgB,EAAWE,OAAOX,KAAKC,MAAMD,KAAKE,SAAWQ,IAEzD,OAAOjB,EAQF,SAASmB,EAAcC,GAC5B,OAAOC,EAAUD,EAAK3E,QAAQ,KAAM,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,IAAK,KAAKA,QAAQ,QAAS,UAAWA,QAAQ,QAAS,WAQvH,SAAS4E,EAAUC,GAExB,IADA,IAAIC,EAAWD,EAAIE,cAAcC,MAAM,KAC9Bb,EAAI,EAAGA,EAAIW,EAASpB,OAAQS,IACnCW,EAASX,GAAKW,EAASX,GAAGM,OAAO,GAAGQ,cAAgBH,EAASX,GAAGe,UAAU,GAE5E,OAAOJ,EAASK,KAAK,KCvER,OAEb,CACER,KAAM,UACNS,OAAQ,UACRC,QAAS,2BACTC,QAAS,eAGX,CACEX,KAAM,QACNS,OAAQ,cACRC,QAAS,2BACTC,QAAS,aAGX,CACEX,KAAM,QACNS,OAAQ,QACRC,QAAS,2BACTC,QAAS,gBAGX,CACEX,KAAM,eACNS,OAAQ,eACRC,QAAS,2BACTC,QAAS,oBAGX,CACEX,KAAM,SACNS,OAAQ,YACRC,QAAS,2BACTC,QAAS,8BAGX,CACEX,KAAM,UACNS,OAAQ,KACRC,QAAS,2BACTC,QAAS,kBAGX,CACEX,KAAM,kBACNS,OAAQ,aACRC,QAAS,2BACTC,QAAS,iBAGX,CACEX,KAAM,cACNS,OAAQ,mBACRC,QAAS,KACTC,QAAS,gBAGX,CACEX,KAAM,gBACNS,OAAQ,eACRC,QAAS,2BACTC,QAAS,kBAGX,CACEX,KAAM,aACNS,OAAQ,SACRC,QAAS,2BACTC,QAAS,aAGX,CACEX,KAAM,aACNS,OAAQ,aACRC,QAAS,KACTC,QAAS,cAGX,CACEX,KAAM,OACNS,OAAQ,cACRC,QAAS,2BACTC,QAAS,wBAGX,CACEX,KAAM,eACNS,OAAQ,eACRC,QAAS,KACTC,QAAS,a,wCC9EE,MAAMC,EAMnBC,YAAaC,GAEXjE,KAAKiE,MAAQA,EACbjE,KAAKkE,OAAQ,EACblE,KAAKmE,SAAU,EACfnE,KAAKoE,SAAU,EAEfpE,KAAKqE,KAAO,CACVC,UAAW,IAAIC,OACZ,KAAIzB,EAAW,OAChB,GACAmB,EAAMO,SAASC,QAAQC,GACvBC,EAAOpD,QAGTqD,WAAY,IAAIL,OACb,KAAIzB,EAAW,OAChB,GACAmB,EAAMO,SAASC,QAAQI,KAW7BC,cAAcC,GACZ,OAAO,EAMTC,WAOAC,SACMjF,KAAKoE,SACPpE,KAAKkF,WAOTC,SACEnF,KAAKoE,SAAU,EAMjBc,WACElF,KAAKoE,SAAU,GCjFJ,OAEb,qBACA,qBACA,oBACA,oBACA,sBACA,uBACA,oBACA,sBACA,sBACA,kBACA,cAGA,0BACA,wBACA,aACA,eACA,c,UCLa,MAAMgB,UAAoBrB,EAOvCC,YAAYC,EAAOoB,EAAUC,GAC3BC,MAAMtB,GAGNjE,KAAKwF,MAAQ,CAAC,EAAG,EAAG,GAGpBxF,KAAKyF,cAAgB,EAGrBzF,KAAK0F,MAAQ,GAGb1F,KAAK2F,SAAW,GAGhB3F,KAAKqF,SAAWA,EAGhBrF,KAAKsF,UAAYA,EAGjBtF,KAAK4F,eAAgB,EAGrB5F,KAAKqE,KAAKO,WAAa,CACrB,IAAIL,OACD,KAAIzB,EAAW,QAChB,GACAmB,EAAMO,SAASC,QAAQI,IAGzB,IAAIN,OACD,KAAIzB,EAAW,QAChB,GACA,CAAE+C,EAAG5B,EAAMO,SAASC,QAAQI,GAAGgB,EAAI,GAAIC,EAAG7B,EAAMO,SAASC,QAAQI,GAAGiB,IAGtE,IAAIvB,OACD,KAAIzB,EAAW,QAChB,GACA,CAAE+C,EAAG5B,EAAMO,SAASC,QAAQI,GAAGgB,EAAI,IAAKC,EAAG7B,EAAMO,SAASC,QAAQI,GAAGiB,KAQ3Eb,SAI0B,UAmCE,KAtC1BM,MAAMN,SAGFjF,KAAK4F,iBACP5F,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,gBACHC,EAAG,CACDC,GAAoB,QAAlB,EAAEpG,KAAK2F,SAAS,UAAE,aAAhB,EAAkBU,IACtBC,GAAoB,QAAlB,EAAEtG,KAAK2F,SAAS,UAAE,aAAhB,EAAkBU,IACtBE,GAAoB,QAAlB,EAAEvG,KAAK2F,SAAS,UAAE,aAAhB,EAAkBU,OAI1BrG,KAAK4F,eAAgB,GAGvB,GAAK5F,KAAKmE,QAsBJnE,KAAKsF,UAAY,GACdtF,KAAKiE,MAAMuC,UACdxG,KAAKsF,YAEuB,QAA9B,KAAAtF,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKsF,YAAYoB,eAAE,IAAK1G,KAAKiE,MAAM0C,YAIzE3G,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CAAEnG,KAAKqE,KAAKC,UAAUnB,QAG3BnD,KAAKqE,KAAKC,UAAY,KACtBtE,KAAKqE,KAAKO,WAAa,KAEvB5E,KAAKiE,MAAM2C,sBApCb,GAAI5G,KAAKqF,SAAW,EAAG,SAEhBrF,KAAKiE,MAAMuC,UAChBxG,KAAKqF,WAEyB,QAA9B,KAAArF,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKqF,WAAWqB,eAAE,IAAK1G,KAAKiE,MAAM0C,UAExE,IAAIE,EAAY7G,KAAK8G,cACrB,IAAK,IAAInE,EAAI,EAAGA,EAAIkE,EAAU3E,OAAQS,IAAM,SACX,QAA/B,KAAA3C,KAAKqE,KAAKO,WAAWjC,IAAGoE,eAAO,OAA/B,SAAkCF,EAAUlE,UAI9C3C,KAAKmE,SAAU,EACfnE,KAAKgH,UACLhH,KAAKiE,MAAMgD,oBAyBf,IAAIC,EAAQ,GAE4C,MAK9B,gBALtBlH,KAAKqE,KAAKC,WAAatE,KAAKqE,KAAKC,UAAUU,UAC1B,QAAnB,EAAAhF,KAAKqE,KAAKC,iBAAS,OAAnB,EAAqB6C,OAAOnH,KAAKiE,MAAMO,SAASC,QAAQC,IACxDwC,EAAME,KAAKpH,KAAKqE,KAAKC,UAAUU,YAG7BhF,KAAKqE,KAAKO,aACkB,QAA9B,KAAA5E,KAAKqE,KAAKO,WAAW,IAAGuC,cAAM,OAA9B,SAAiCnH,KAAKiE,MAAMO,SAASC,QAAQI,IAC/B,QAA9B,KAAA7E,KAAKqE,KAAKO,WAAW,IAAGuC,cAAM,OAA9B,SAAiC,CAAEtB,EAAG7F,KAAKiE,MAAMO,SAASC,QAAQI,GAAGgB,EAAI,GAAIC,EAAG9F,KAAKiE,MAAMO,SAASC,QAAQI,GAAGiB,IACjF,QAA9B,KAAA9F,KAAKqE,KAAKO,WAAW,IAAGuC,cAAM,OAA9B,SAAiC,CAAEtB,EAAG7F,KAAKiE,MAAMO,SAASC,QAAQI,GAAGgB,EAAI,IAAKC,EAAG9F,KAAKiE,MAAMO,SAASC,QAAQI,GAAGiB,IAEpF,QAA5B,KAAA9F,KAAKqE,KAAKO,YAAWyC,eAAO,OAA5B,SAA+BhD,IAC7B6C,EAAME,KAAK/C,EAAKW,cAIhBkC,EAAMhF,OAAS,GACjBlC,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,UACHC,EAAGe,IAQTF,UAGEhH,KAAKqE,KAAKC,UAAUgD,SAAS3C,EAAO3D,OAEpChB,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,qBAGLlG,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDnG,KAAKqE,KAAKO,WAAW,GAAGzB,KACxBnD,KAAKqE,KAAKO,WAAW,GAAGzB,KACxBnD,KAAKqE,KAAKO,WAAW,GAAGzB,QAI5BnD,KAAKqE,KAAKO,WAAa,KASzB2C,eAAexC,GAGb,MACc,MAAZA,EAAIV,MACQ,KAAZU,EAAIV,MACJU,EAAIV,KAAKZ,eAAiBzD,KAAK2F,SAAS,GAAGxC,KAAKM,eAEhDzD,KAAKwH,QAAQ,EAAI,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAC7B,GAKK,MAAZ3C,EAAIV,MACQ,KAAZU,EAAIV,MACJU,EAAIV,KAAKZ,eAAiBzD,KAAK2F,SAAS,GAAGxC,KAAKM,eAEhDzD,KAAKwH,QAAQ,EAAI,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAC7B,GAKK,MAAZ3C,EAAIV,MACQ,KAAZU,EAAIV,MACJU,EAAIV,KAAKZ,eAAiBzD,KAAK2F,SAAS,GAAGxC,KAAKM,gBAEhDzD,KAAKwH,QAAQ,EAAI,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAC7B,GAWXF,QAAQG,EAAKC,GACP5H,KAAKmE,UAGLnE,KAAKiE,MAAM4D,gBAAgBC,SAASC,eAAeC,UACrDL,EAAM3H,KAAKiE,MAAM4D,gBAAgBC,SAASC,eAAeE,QAAQN,IAInC,qBAArB3H,KAAK0F,MAAMkC,IAAyBD,GAAO3H,KAAK0F,MAAMkC,IAG/D5H,KAAKwF,MAAMxF,KAAK0F,MAAMkC,MAGtB5H,KAAKwF,MAAMmC,KAGX3H,KAAK0F,MAAMkC,GAAQD,GAIgB,qBAArB3H,KAAK0F,MAAMkC,KACzB5H,KAAKwF,MAAMmC,KACX3H,KAAK0F,MAAMkC,GAAQD,EACnB3H,KAAKyF,kBAQTyC,YACE,OAAKlI,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAA6B,GAAtBxF,KAAKyF,cACtEzF,KAAK2F,SAASrD,KAAKC,MAAMD,KAAKE,SAAWxC,KAAK2F,SAASzD,SAGvDlC,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,GAAKxF,KAAKwF,MAAM,GAC7DlD,KAAKE,SAAW,GAAKxC,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GAGtD3F,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,GAAKxF,KAAKwF,MAAM,GAC7DlD,KAAKE,SAAW,GAAKxC,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GAGtD3F,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,GAAKxF,KAAKwF,MAAM,GAC7DlD,KAAKE,SAAW,GAAKxC,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GAGxD3F,KAAK2F,SAAS3F,KAAKwF,MAAM2C,QAAQ7F,KAAK8F,OAAOpI,KAAKwF,SAQ3D6C,YAAYC,GACV,OAAItI,KAAKiE,MAAMO,SAAS+D,UACf,IAGoB,GAAtBvI,KAAKyF,cAAqB,EAAInD,KAAKkG,MAAMxI,KAAKwF,MAAM8C,GAAWtI,KAAKyF,cAAgB,KAO7FqB,cAEE,MAAO,CACJ,iBAAgB9G,KAAKqI,YAAY,MACjC,iBAAgBrI,KAAKqI,YAAY,MACjC,iBAAgBrI,KAAKqI,YAAY,OAKtClD,SAEEI,MAAMJ,SACDnF,KAAKmE,QAmBRnE,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CAACnG,KAAKqE,KAAKC,UAAUnB,SAnB1BnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,qBAGLlG,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDnG,KAAKqE,KAAKC,UAAUnB,KACpBnD,KAAKqE,KAAKO,WAAW,GAAGzB,KACxBnD,KAAKqE,KAAKO,WAAW,GAAGzB,KACxBnD,KAAKqE,KAAKO,WAAW,GAAGzB,SAgBhC+B,WAGqB,WAFnBK,MAAML,WAEDlF,KAAKmE,UAERnE,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,gBACHC,EAAG,CACDC,GAAoB,QAAlB,EAAEpG,KAAK2F,SAAS,UAAE,aAAhB,EAAkBU,IACtBC,GAAoB,QAAlB,EAAEtG,KAAK2F,SAAS,UAAE,aAAhB,EAAkBU,IACtBE,GAAoB,QAAlB,EAAEvG,KAAK2F,SAAS,UAAE,aAAhB,EAAkBU,QC/UjB,MAAMoC,UAAkBrD,EAKrCpB,YAAaC,EAAOoB,EAAUC,GAE5BC,MAAMtB,EAAOoB,EAAUC,GAGvBtF,KAAK0I,MAAQ1I,KAAKiE,MAAM0E,MAAMD,MAG9B1I,KAAK4I,OAAS,GAGd5I,KAAKkE,OAAQ,EAIfc,UACEhF,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,mBAEJ2C,KAAKC,GAAO9I,KAAK+I,SAASD,EAAIE,MAGjCD,SAAUE,GAER,IAC6B,GAAvBjJ,KAAKiE,MAAMiF,WACbD,EAAcA,EAAYE,OACxBC,IAAeC,EAAeC,KAAKC,IAAO,aAAIH,IAA2D,QAAjD,EAAIpJ,KAAK0I,MAAMc,KAAKC,GAAQA,EAAKtG,MAAQoG,UAAQ,aAA7C,EAA+CG,QAG/G,MAAOC,GACPC,QAAQC,IAAI,8BAKd,GAAIvH,KAAKE,SAAWxC,KAAKiE,MAAMO,SAASsF,QAAQC,YAAY,IAAMd,EAAY/G,OAAS,EAAG,CAGxFlC,KAAK4I,OAAS,aAGd5I,KAAKqE,KAAKC,UAAUyC,QAAQL,eAAE,sBAAuB1G,KAAKiE,MAAM0C,OAGhE,IAAIqD,EAAgBpI,EAAyBqH,EAAa,GACvDgB,IAAIC,GACIlK,KAAK0I,MAAMc,KAAKC,GAAQA,EAAKC,IAAMQ,IAI9ClK,KAAK2F,SAAWqE,MAKb,CAGHhK,KAAK4I,OAAS,WAGd5I,KAAKqE,KAAKC,UAAUyC,QAAQL,eAAE,aAAc1G,KAAKiE,MAAM0C,OAGvD,IAAIwD,EAAkB,GAGpBA,EADyB,GAAvBnK,KAAKiE,MAAMiF,SACKlJ,KAAK0I,MAAMS,OAAOM,KACzBR,EAAYK,KAAKF,GAAcA,IAAkB,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MAAOD,EAAKW,SAAWf,EAAeC,KAAKC,GAAWA,GAAWE,EAAKtG,QAIlHnD,KAAK0I,MAAMS,OAAOM,IAC1BR,EAAYK,KAAKF,GAAcA,GAAcK,EAAKC,KAK9D1J,KAAK2F,SAAW/D,EAAyBuI,EAAiB,GAI5DnK,KAAKkE,OAAQ,EAIf8C,UACEzB,MAAMyB,UAEN,IAAIqD,EAASrK,KAAKkI,YAElB,OAAQlI,KAAK4I,QAEX,IAAK,WACH5I,KAAKqE,KAAKC,UAAUyC,QAAS,GAAEL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,SAASzD,EAAcmH,EAAOlH,SAC5FnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDmE,QAAQ,EACRb,KAAMY,EAAOX,MAEd,GACH,MAEF,IAAK,aACH1J,KAAKqE,KAAKC,UAAUyC,QAAS,GAAEL,eAAE,mBAAoB1G,KAAKiE,MAAM0C,SAASzD,EAAcmH,EAAOlH,SAC9FnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDmE,QAAQ,EACRb,KAAMY,EAAOX,MAEd,GACH,QCtHO,MAAMa,UAAoBxG,EAOvCC,YAAaC,EAAOoB,EAAUC,GAC5BC,MAAMtB,GAGNjE,KAAKwF,MAAQ,CAAC,EAAE,EAAE,GAGlBxF,KAAKyF,cAAgB,EAGrBzF,KAAK0F,MAAQ,GAGb1F,KAAK2F,SAAW,GAGhB3F,KAAKqF,SAAWA,EAGhBrF,KAAKsF,UAAYA,EAMnBL,SAoB4B,QAfD,SAJzBM,MAAMN,SAEDjF,KAAKmE,SAiBJnE,KAAKsF,UAAY,GACdtF,KAAKiE,MAAMuC,UACdxG,KAAKsF,YAEuB,QAA9B,KAAAtF,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKsF,YAAYoB,eAAE,IAAK1G,KAAKiE,MAAM0C,YAIzE3G,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDnG,KAAKqE,KAAKC,UAAUnB,KACpBnD,KAAKqE,KAAKO,WAAWzB,QAIzBnD,KAAKqE,KAAKC,UAAY,KACtBtE,KAAKqE,KAAKO,WAAa,KAEvB5E,KAAKiE,MAAM2C,iBAlCT5G,KAAKqF,SAAW,GACY,QAA9B,KAAArF,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKqF,WAAWqB,eAAE,IAAK1G,KAAKiE,MAAM0C,UAC5C,QAA5B,KAAA3G,KAAKqE,KAAKO,YAAWmC,eAAO,OAA5B,SAA+B/G,KAAK8G,eAE/B9G,KAAKiE,MAAMuC,UACdxG,KAAKqF,aAGPrF,KAAKmE,SAAU,EACfnE,KAAKgH,UACLhH,KAAKiE,MAAMgD,qBA4Bf,IAAIC,EAAQ,GAERlH,KAAKqE,KAAKC,WAAatE,KAAKqE,KAAKC,UAAUU,SAC7CkC,EAAME,KAAKpH,KAAKqE,KAAKC,UAAUU,WAG7BhF,KAAKqE,KAAKO,YAAc5E,KAAKqE,KAAKO,WAAWI,SAC/CkC,EAAME,KAAKpH,KAAKqE,KAAKO,WAAWI,WAG9BkC,EAAMhF,OAAS,GACjBlC,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,UACHC,EAAGe,IAQTF,UAAW,QAGThH,KAAKqE,KAAKC,UAAUgD,SAAS3C,EAAO3D,OACN,QAA9B,KAAAhB,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKsF,YAAYoB,eAAE,IAAK1G,KAAKiE,MAAM0C,UAS3EY,eAAgBxC,GACd,IAAI/E,KAAKmE,QAGT,MACc,MAAZY,EAAIV,MACQ,KAAZU,EAAIV,MACJU,EAAIV,KAAKZ,eAAiBzD,KAAK2F,SAAS,GAAGxC,KAAKM,eAEhDzD,KAAKwH,QAAQ,EAAI,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAC7B,GAKK,MAAZ3C,EAAIV,MACQ,KAAZU,EAAIV,MACJU,EAAIV,KAAKZ,eAAiBzD,KAAK2F,SAAS,GAAGxC,KAAKM,eAEhDzD,KAAKwH,QAAQ,EAAI,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAC7B,GAKK,MAAZ3C,EAAIV,MACQ,KAAZU,EAAIV,MACJU,EAAIV,KAAKZ,eAAiBzD,KAAK2F,SAAS,GAAGxC,KAAKM,gBAEhDzD,KAAKwH,QAAQ,EAAI,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAC7B,GAWXF,QAASG,EAAKC,GACR5H,KAAKmE,UAGLnE,KAAKiE,MAAM4D,gBAAgBC,SAASC,eAAeC,UACrDL,EAAM3H,KAAKiE,MAAM4D,gBAAgBC,SAASC,eAAeE,QAAQN,IAInC,qBAArB3H,KAAK0F,MAAMkC,IAAyBD,GAAO3H,KAAK0F,MAAMkC,IAG/D5H,KAAKwF,MAAMxF,KAAK0F,MAAMkC,MAGtB5H,KAAKwF,MAAMmC,KAGX3H,KAAK0F,MAAMkC,GAAQD,GAIgB,qBAArB3H,KAAK0F,MAAMkC,KACzB5H,KAAKwF,MAAMmC,KACX3H,KAAK0F,MAAMkC,GAAQD,EACnB3H,KAAKyF,kBAQTyC,YAEE,OAAKlI,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAOxF,KAAKwF,MAAM,IAA6B,GAAtBxF,KAAKyF,cACvEzF,KAAK2F,SAASrD,KAAKC,MAAMD,KAAKE,SAAWxC,KAAK2F,SAASzD,SAGvDlC,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,GAAKxF,KAAKwF,MAAM,GAC7DlD,KAAKE,SAAW,GAAKxC,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GAGtD3F,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,GAAKxF,KAAKwF,MAAM,GAC7DlD,KAAKE,SAAW,GAAKxC,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GAGtD3F,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,IAAMxF,KAAKwF,MAAM,GAAKxF,KAAKwF,MAAM,GAC7DlD,KAAKE,SAAW,GAAKxC,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GAGxD3F,KAAK2F,SAAS3F,KAAKwF,MAAM2C,QAAQ7F,KAAK8F,OAAOpI,KAAKwF,SAQ3D6C,YAAaC,GACX,OAAItI,KAAKiE,MAAMO,SAAS+D,UACf,IAGoB,GAAtBvI,KAAKyF,cAAqB,EAAInD,KAAKkG,MAAMxI,KAAKwF,MAAM8C,GAAStI,KAAKyF,cAAc,KAOzFqB,cAEE,IAAIzC,EAAQ,MAAKrE,KAAK2F,SAAS,GAAGxC,UAAUnD,KAAKqI,YAAY,QAI7D,OAHAhE,GAAS,MAAKrE,KAAK2F,SAAS,GAAGxC,UAAUnD,KAAKqI,YAAY,QAC1DhE,GAAS,MAAKrE,KAAK2F,SAAS,GAAGxC,UAAUnD,KAAKqI,YAAY,MAEnDhE,EAITc,SACEI,MAAMJ,SAGRD,WACEK,MAAML,YC/OK,MAAMsF,UAAmBD,EAKtCvG,YAAaC,EAAOoB,EAAUC,GAE5BC,MAAMtB,EAAOoB,EAAUC,GAGvB,IAAImF,EAAiBzK,KAAKiE,MAAM0E,MAAM+B,OAAOT,IAAIU,IACxC,CACLjB,GAAIiB,EAAMjB,GACVvG,KAAMwH,EAAMxH,KACZN,OAAQ8H,EAAM/H,QAAQqB,EAAMiF,UAC5B0B,KAAMD,EAAMC,KACZC,eAAgBF,EAAME,eACtBC,WAAYH,EAAMG,cAKtB,IAAI,IAAInI,EAAI,EAAGA,EAAI,EAAGA,IACpB8H,EAAiBA,EAAetB,OAAOwB,IAAU3K,KAAK2F,SAAS2D,KAAKyB,GAAiBA,EAAcrB,IAAMiB,EAAMjB,KAC/G1J,KAAK2F,SAASyB,KAAK3E,EAAegI,IAGpCzK,KAAKqE,KAAKC,UAAUyC,QAAQL,eAAE,cAAe1G,KAAKiE,MAAM0C,OACxD3G,KAAKqE,KAAKO,WAAWmC,QAAQ/G,KAAK8G,eAIpC7B,SAKE,GAHAM,MAAMN,SAGgB,GAAlBjF,KAAKsF,UAAgB,CACvB,IAAI+E,EAASrK,KAAKkI,YACdmC,EAAOQ,gBACT7K,KAAKiE,MAAM4D,gBAAgBmD,SAASX,EAAOQ,iBAMjD7D,UACEzB,MAAMyB,UACN,IAAIqD,EAASrK,KAAKkI,YAElBlI,KAAKqE,KAAKC,UAAUyC,QAAS,GAAEL,eAAE,gBAAiB1G,KAAKiE,MAAM0C,SAAS0D,EAAOlH,QAC7EnD,KAAKqE,KAAKO,WAAWmC,QAAQsD,EAAOO,MACpC5K,KAAKqE,KAAKO,WAAWqG,SAAStG,EAAOzD,WAErClB,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,cACHC,EAAG,CACDuD,GAAIW,EAAOX,MAEZ,GAILvE,SAEEI,MAAMJ,SAENnF,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDnG,KAAKqE,KAAKC,UAAUnB,KACpBnD,KAAKqE,KAAKO,WAAWzB,QAM3B+B,WACEK,MAAML,YC7EK,MAAMgG,UAAqB9F,EAKxCpB,YAAaC,EAAOoB,EAAUC,GAE5BC,MAAMtB,EAAOoB,EAAUC,GAGvBtF,KAAKmL,SAAWlH,EAAM0E,MAAMwC,SAG5BnL,KAAKqE,KAAKC,UAAUyC,QAAQL,eAAE,gBAAiB1G,KAAKiE,MAAM0C,OAG1D3G,KAAK2F,SAAW/D,EAAyB5B,KAAKmL,SAAU,GAI1DnE,UACEzB,MAAMyB,UAEN,IAAIqD,EAASrK,KAAKkI,YAElBlI,KAAKqE,KAAKC,UAAUyC,QAAS,GAAEL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,SAASzD,EAAcmH,EAAOlH,SAC5FnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,gBACHC,EAAG,CACDrC,QAASuG,EAAOX,MAEjB,IC7BQ,MAAM0B,UAAoBrH,EAOvCC,YAAYC,EAAOoB,EAAUC,GAC3BC,MAAMtB,GAGNjE,KAAKqL,cAAgB,EAGrBrL,KAAKyF,cAAgB,EAGrBzF,KAAKsL,SAAW,KAGhBtL,KAAK0F,MAAQ,GAGb1F,KAAKqF,SAAWA,EAGhBrF,KAAKsF,UAAYA,EAGjBtF,KAAK4F,eAAgB,EAGrB5F,KAAKkE,OAAQ,EAGblE,KAAKuL,aAAc,EAGnBvL,KAAKqE,KAAKO,WAAa,KAGzBI,UACEhF,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,kBAEJ2C,KAAKC,GAAO9I,KAAK+I,SAASD,EAAIE,MAGjCD,SAASyC,GAGP,IAAIC,EAAQ,CACV,CACEtI,KAAM,UACNuI,MAAOhF,eAAE,gBAAiB1G,KAAKiE,MAAM0C,MACrCgF,QAAS,CAAC,OAAQ,OAAQ,OAAQ,UAAW,UAAW,eAAgB,OAAQ,YAAa,WAAY,YAAa,eAExH,CACExI,KAAM,OACNuI,MAAOhF,eAAE,aAAc1G,KAAKiE,MAAM0C,MAClCgF,QAAS,CAAC,QAAS,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,SAExC,CACExI,KAAM,QACNuI,MAAOhF,eAAE,cAAe1G,KAAKiE,MAAM0C,MACnCgF,QAAS,CAAC,QAAS,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,SAGxC,CACExI,KAAM,QACNuI,MAAOhF,eAAE,cAAe1G,KAAKiE,MAAM0C,MACnCgF,QAAS,CAAC,QAAS,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,MAKxB,IAAdH,GAAkC,IAAdA,GACtBC,EAAMrE,KAAK,CACTjE,KAAM,SACNuI,MAAOhF,eAAE,eAAgB1G,KAAKiE,MAAM0C,MACpCgF,QAAS,CAAC,OAAQ,UAAW,WAAY,MAAO,OAAQ,OAAQ,QAAS,SAAU,OAAQ,YAAa,aAK5G3L,KAAKsL,SAAWG,EAAMnJ,KAAKC,MAAMD,KAAKE,SAAWiJ,EAAMvJ,SAEvDlC,KAAKkE,OAAQ,EAOfe,SA4C4B,SA1C1BM,MAAMN,SAGFjF,KAAK4F,gBACP5F,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,iBACHC,EAAG,CACDyF,QAAS5L,KAAKsL,SAASnI,KACvBuI,MAAQ,GAAE1L,KAAKiE,MAAM4D,gBAAgBgE,0BAA0B7L,KAAKsL,SAASI,UAAU1L,KAAKqF,WAAWqB,eAAE,IAAK1G,KAAKiE,MAAM0C,SACzHmF,IAAK,EACLC,MAAO,EACP3D,IAAK,EACLuD,QAAS3L,KAAKsL,SAASK,QAAQzJ,UAInClC,KAAK4F,eAAgB,GAGlB5F,KAAKmE,SAuBJnE,KAAKsF,UAAY,GACdtF,KAAKiE,MAAMuC,UACdxG,KAAKsF,YAEuB,QAA9B,KAAAtF,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKsF,YAAYoB,eAAE,IAAK1G,KAAKiE,MAAM0C,YAIzE3G,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDnG,KAAKqE,KAAKC,UAAUnB,QAIxBnD,KAAKqE,KAAKC,UAAY,KAEtBtE,KAAKiE,MAAM2C,iBAtCT5G,KAAKqF,SAAW,GAClBrF,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,iBACHC,EAAG,CACDuF,MAAQ,GAAE1L,KAAKiE,MAAM4D,gBAAgBgE,0BAA0B7L,KAAKsL,SAASI,UAAU1L,KAAKqF,WAAWqB,eAAE,IAAK1G,KAAKiE,MAAM0C,SACzHmF,IAAK,EACLC,MAAO/L,KAAKqL,cACZjD,IAAKpI,KAAKyF,iBAITzF,KAAKiE,MAAMuC,UACdxG,KAAKqF,aAGPrF,KAAKgH,UACLhH,KAAKiE,MAAMgD,qBA0Bf,IAAIC,EAAQ,GAERlH,KAAKqE,KAAKC,WAAatE,KAAKqE,KAAKC,UAAUU,SAAWhF,KAAKmE,SAC7D+C,EAAME,KAAKpH,KAAKqE,KAAKC,UAAUU,WAG7BkC,EAAMhF,OAAS,GACjBlC,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,UACHC,EAAGe,IAQTF,UAAU,QAERhH,KAAKmE,SAAU,EACfnE,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAAEC,EAAG,sBAEzClG,KAAKqE,KAAKC,UAAUgD,SAAS3C,EAAO3D,OACN,QAA9B,KAAAhB,KAAKqE,KAAKC,WAAUmC,kBAAU,OAA9B,SAAkC,KAAIzG,KAAKsF,YAAYoB,eAAE,IAAK1G,KAAKiE,MAAM0C,UAEzE,IAAI0D,EAASrK,KAAKkI,YAcM,QAGjB,IAmBY,IAMO,QA/B1B,GATAlI,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,gBACHC,EAAG,CACD6F,WAAYhM,KAAKsL,SAASnI,KAC1B4I,MAAO1B,KAKe,WAAtBrK,KAAKsL,SAASnI,MAA2C,UAAtBnD,KAAKsL,SAASnI,KAGrC,QAAVkH,EACyB,QAA3B,KAAArK,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA8BL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,OAKlC,QAA3B,KAAA3G,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SACG,GAAEL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,UAAUD,eAAE2D,EAAQrK,KAAKiE,MAAM0C,SAGzC,UAAtB3G,KAAKsL,SAASnI,KACduD,eAAE,QAAS1G,KAAKiE,MAAM0C,MACpB,WAUR,GAAc,GAAV0D,EACyB,QAA3B,KAAArK,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA8BL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,YAK7D,GAAc,QAAV0D,EACwB,QAAtBrK,KAAKsL,SAASnI,KACW,QAA3B,KAAAnD,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA+B,GAAEL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,UAAUD,eAAE,YAAa1G,KAAKiE,MAAM0C,SAEzE,QAA3B,KAAA3G,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA+B,GAAEL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,UAAUD,eAAE,aAAc1G,KAAKiE,MAAM0C,cAIpG,GAAc,QAAV0D,EAAkB,iBACC,QAAtBrK,KAAKsL,SAASnI,KACW,QAA3B,KAAAnD,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA+B,GAAEL,eAAE,mBAAoB1G,KAAKiE,MAAM0C,UAAUD,eAAE,WAAY1G,KAAKiE,MAAM0C,SACxE,SAAtB3G,KAAKsL,SAASnI,KACM,QAA3B,KAAAnD,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA+B,GAAEL,eAAE,mBAAoB1G,KAAKiE,MAAM0C,UAAUD,eAAE,YAAa1G,KAAKiE,MAAM0C,SACzE,SAAtB3G,KAAKsL,SAASnI,OACM,QAA3B,KAAAnD,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SAA+B,GAAEL,eAAE,mBAAoB1G,KAAKiE,MAAM0C,UAAUD,eAAE,YAAa1G,KAAKiE,MAAM0C,eAIrG,GAAI0D,EAAS,EAAG,SACQ,QAA3B,KAAArK,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SACG,GAAEL,eAAE,iBAAkB1G,KAAKiE,MAAM0C,UAAU0D,KAC1C3D,eACY,GAAV2D,IAA0B,GAAXA,EAAerK,KAAKsL,SAASnI,KAAKI,cAAc0I,OAAO,EAAGjM,KAAKsL,SAASnI,KAAKjB,OAAS,GAAKlC,KAAKsL,SAASnI,KAAKI,cAC7HvD,KAAKiE,MAAM0C,aAMd,SACwB,QAA3B,KAAA3G,KAAKqE,KAAKC,WAAUyC,eAAO,OAA3B,SACG,GAAEL,eAAE,mBAAoB1G,KAAKiE,MAAM0C,WAAW,EAAI0D,KAAU3D,eAAE1G,KAAKsL,SAASnI,KAAKI,cAAevD,KAAKiE,MAAM0C,UAWtHY,eAAexC,GAGb,MAC4B,QAA1BA,EAAIV,KAAKZ,eACiB,UAA1BsB,EAAIV,KAAKZ,eAETzD,KAAKwH,SAAQ,EAAO,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WAChC,GAKmB,QAA1B3C,EAAIV,KAAKZ,eACiB,UAA1BsB,EAAIV,KAAKZ,gBAETzD,KAAKwH,SAAQ,EAAQ,GAAEzC,EAAI0C,SAAS1C,EAAI2C,WACjC,GAWXF,QAAQ0E,EAAUtE,GACZ5H,KAAKmE,UAGLnE,KAAKiE,MAAM4D,gBAAgBC,SAASC,eAAeC,UACrDkE,GAAYA,GAIkB,qBAArBlM,KAAK0F,MAAMkC,IAAyBsE,GAAYlM,KAAK0F,MAAMkC,IAEhEsE,EACFlM,KAAKqL,gBAGLrL,KAAKqL,gBAIPrL,KAAK0F,MAAMkC,GAAQsE,GAIgB,qBAArBlM,KAAK0F,MAAMkC,KACrBsE,GACFlM,KAAKqL,gBAGPrL,KAAK0F,MAAMkC,GAAQsE,EACnBlM,KAAKyF,iBAGHzF,KAAKuL,cACPvL,KAAKqL,gBACLrL,KAAKyF,eAAiB,EACtBzF,KAAKuL,aAAc,IAQvBrD,YACE,OAA0B,GAAtBlI,KAAKqL,cACArL,KAAKsL,SAASK,QAAQ,GAGtB3L,KAAKsL,SAASK,QAAQrJ,KAAK6J,KAAKnM,KAAKqL,cAAgBrL,KAAKyF,cAAgBzF,KAAKsL,SAASK,QAAQzJ,QAAU,GAIrHiD,SACEI,MAAMJ,SAEDnF,KAAKmE,QAIRnE,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAG,CACDnG,KAAKqE,KAAKC,UAAUnB,QANxBnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAAEC,EAAG,sBAa7ChB,WACEK,MAAML,WAEDlF,KAAKmE,SACRnE,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,iBACHC,EAAG,CACDyF,QAAS5L,KAAKsL,SAASnI,KACvBuI,MAAQ,GAAE1L,KAAKiE,MAAM4D,gBAAgBgE,0BAA0B7L,KAAKsL,SAASI,UAAU1L,KAAKqF,WAAWqB,eAAE,IAAK1G,KAAKiE,MAAM0C,SACzHmF,IAAK,EACLC,MAAO,EACP3D,IAAK,EACLuD,QAAS3L,KAAKsL,SAASK,QAAQzJ,WC/X1B,MAAMkK,EASnBpI,YAAaC,EAAOK,EAAWM,EAAYyH,GAEzCrM,KAAKiE,MAAQA,EACbjE,KAAKsE,UAAYA,EACjBtE,KAAK4E,WAAaA,EAClB5E,KAAKqM,KAAOA,EAGZrM,KAAKiE,MAAMgD,oBAObhC,SAGE,GAFAjF,KAAKsE,UAAUmC,WAAY,KAAIzG,KAAKqM,OAAO3F,eAAE,IAAK1G,KAAKiE,MAAM0C,UAEzD3G,KAAKqM,KAAO,EAAG,CACjB,IAAInF,EAAQ,GAERlH,KAAKsE,WACP4C,EAAME,KAAKpH,KAAKsE,UAAUU,WAExBhF,KAAK4E,YACPsC,EAAME,KAAKpH,KAAK4E,WAAWI,WAE7BhF,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,UACHC,EAAGe,IAGAlH,KAAKiE,MAAMuC,UACdxG,KAAKqM,WAEJ,CAEH,IAAIC,EAAiB,GAEjBtM,KAAKsE,WACPgI,EAAelF,KAAKpH,KAAKsE,UAAUnB,MAGjCnD,KAAK4E,YACP0H,EAAelF,KAAKpH,KAAK4E,WAAWzB,MAGtCnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAGmG,IAGLtM,KAAKiE,MAAM2C,iBAQfzB,SACE,IAAImH,EAAiB,GAEjBtM,KAAKsE,WACPgI,EAAelF,KAAKpH,KAAKsE,UAAUnB,MAGjCnD,KAAK4E,YACP0H,EAAelF,KAAKpH,KAAK4E,WAAWzB,MAGtCnD,KAAKiE,MAAM8B,SAASC,KAAKC,WAAW,CAClCC,EAAG,aACHC,EAAGmG,KCrFM,MAAMC,EAEnBvI,cAEEhE,KAAK8H,SAAW,CAEdC,eAAgB,CACdC,SAAS,EACTC,QAAS,GACTuE,SAAU,cAOhBxB,SAAS7H,GAIP,OAFAnD,KAAK8H,SAAS3E,GAAM6E,SAAU,EAEtB7E,GAEN,IAAK,iBACHnD,KAAK8H,SAASC,eAAeE,QAAUrG,EAAyB,CAAC,EAAE,EAAE,GAAI,GACzE,OAMN6K,UACE,IAAK,MAAOC,EAAKX,KAAUY,OAAOC,QAAQ5M,KAAK8H,UAC7CiE,EAAM/D,SAAU,EAIpB6D,uBACE,IAAIW,EAAW,GACf,IAAK,MAAOE,EAAKX,KAAUY,OAAOC,QAAQ5M,KAAK8H,UAC7C0E,GAAYT,EAAM/D,QAAU+D,EAAMS,SAAW,GAG/C,OAAOA,GCzCI,MAAMK,EAMnB7I,YAAaC,GAEXjE,KAAKiE,MAAQA,EAEbjE,KAAKQ,MAAQ,CACXsM,YAAY,EACZC,eAAe,EACfC,WAAW,GAGbhN,KAAKiN,OAAS,EAShBnI,cAAeoI,GAEb,IAAIC,GAAa,EAEjB,GAAInN,KAAKQ,MAAMsM,WAAY,CACzB,IAAIhE,EAAM9I,KAAK8M,WAAWI,GACrBpE,IACHqE,GAAa,GAIjB,GAAInN,KAAKQ,MAAMuM,cAAe,CAC5B,IAAIjE,EAAM9I,KAAK+M,cAAcG,GACxBpE,IACHqE,GAAa,GAIjB,GAAInN,KAAKQ,MAAMwM,UAAW,CACxB,IAAIlE,EAAM9I,KAAKgN,UAAUE,GACpBpE,IACHqE,GAAa,GAIjB,OAAOA,EAITC,cACEpN,KAAKiN,OAAS,EAGhBI,aACErN,KAAKQ,MAAMsM,YAAa,EACxB9M,KAAKQ,MAAMuM,eAAgB,EAC3B/M,KAAKQ,MAAMwM,WAAY,EAQzBD,cAAcG,GAEZ,IAAI7I,EAAO6I,EAAQ7I,KAAKZ,cAExB,MAAY,UAARY,GAA4B,SAARA,GACtBrE,KAAKiG,WAAW,CAAEC,EAAG,gBAAiBC,EAAG,OAClC,GAEQ,SAAR9B,GAA2B,QAARA,IAC1BrE,KAAKiG,WAAW,CAAEC,EAAG,gBAAiBC,EAAG,OAClC,GAYX2G,WAAWI,GAET,IAAI7I,EAAO6I,EAAQ7I,KAAKZ,cAExB,MAAY,QAARY,GAA0B,SAARA,GACpBrE,KAAKiG,WAAW,CAAEC,EAAG,aAAcC,EAAG,OAC/B,GAEQ,SAAR9B,GAA2B,UAARA,GAC1BrE,KAAKiG,WAAW,CAAEC,EAAG,aAAcC,EAAG,OAC/B,GAEQ,MAAR9B,GAAwB,SAARA,GACvBrE,KAAKiG,WAAW,CAAEC,EAAG,aAAcC,EAAG,OAC/B,GAEQ,QAAR9B,GAA0B,QAARA,IACzBrE,KAAKiG,WAAW,CAAEC,EAAG,aAAcC,EAAG,OAC/B,GAOX6G,UAAUE,GACR,IAAI7I,EAAO6I,EAAQ7I,KAAKZ,cAExB,GAAY,KAARY,GAAuB,KAARA,EAEjB,OADArE,KAAKiG,WAAW,CAAEC,EAAG,WACd,EAIXD,WAAYqH,GAGNtN,KAAKiN,OAAS,IAGlBjN,KAAKiE,MAAM8B,SAASC,KAAKC,WAAWqH,GAAQ,EAAO,KCzGxC,MAAMrJ,EAYnBD,YAAa+B,EAAUvB,EAAUmC,EAAO,KAAMuC,EAAW1H,EAAeE,QAEtE1B,KAAK+F,SAAWA,EAChB/F,KAAKwE,SAAWA,EAChBxE,KAAK2G,KAAOA,EACZ3G,KAAKkJ,SAAWA,EAEhBlJ,KAAK2I,MAAQ,GACb3I,KAAKuN,YAAc,GACnBvN,KAAKwN,WAAa,EAGlBxN,KAAKyN,WAAa,KAGlBzN,KAAK0N,MAAQ,KAKb1N,KAAK2N,cAAgB,KAGrB3N,KAAK4N,WAAa,KAGlB5N,KAAK6N,eAAiB,GAGtB7N,KAAK6H,gBAAkB,IAAI0E,EAG3BvM,KAAK8N,sBAAwB,IAAIjB,EAAsB7M,MAGvDA,KAAKwG,UAAW,EAGZxG,KAAK+F,SAASnC,SAChB5D,KAAK+F,SAASnC,OAAO8G,OAAOqD,UAAY/N,KAAK+N,UAAUxO,KAAKS,MAC5DA,KAAK+F,SAASnC,OAAO8G,OAAOsD,MAAQhO,KAAKiO,aAAa1O,KAAKS,MAC3DA,KAAK+F,SAASnC,OAAO8G,OAAOwD,OAASlO,KAAKmO,SAAS5O,KAAKS,OAItDA,KAAK+F,SAASlC,UAChB7D,KAAK+F,SAASlC,QAAQ6G,OAAOqD,UAAY/N,KAAK+N,UAAUxO,KAAKS,MAC7DA,KAAK+F,SAASlC,QAAQ6G,OAAOsD,MAAQhO,KAAKiO,aAAa1O,KAAKS,MAC5DA,KAAK+F,SAASlC,QAAQ6G,OAAO0D,YAAcpO,KAAKmO,SAAS5O,KAAKS,OAIhEA,KAAK+F,SAASC,KAAK0E,OAAO2D,YAAc,KAAM,QAC5CrO,KAAKsO,eACL1E,QAAQC,KAA0C,KAApB,QAAlB,EAAA7J,KAAK2N,qBAAa,aAAlB,EAAoB/H,gBAC5B5F,KAAK2N,gBAAuD,KAApB,QAAlB,EAAA3N,KAAK2N,qBAAa,aAAlB,EAAoB/H,iBAC5C5F,KAAK2N,cAAc/H,eAAgB,IAKvC5F,KAAK+F,SAASC,KAAKuI,WAAW,kBAAmB,EAAEC,aACjDxO,KAAKwG,SAAWgI,IAGlBxO,KAAK+F,SAASC,KAAKuI,WAAW,aAAc,KAC1CvO,KAAKyO,eAGPzO,KAAK+F,SAASC,KAAKuI,WAAW,WAAY,KACxCvO,KAAK0O,aAGP1O,KAAK+F,SAASC,KAAKuI,WAAW,SAAU,KACtCvO,KAAKY,UAGPZ,KAAK+F,SAASC,KAAKuI,WAAW,uBAAwB,EAAEpL,OAAMwL,aAC5D3O,KAAK+F,SAASC,KAAK4I,KAAM,WAAUzL,YAAewL,KAClD3O,KAAK8N,sBAAsBtN,MAAM2C,GAAQwL,IAO7C/N,QACMZ,KAAK0N,QACPmB,cAAc7O,KAAK0N,OACnB1N,KAAK6N,eAAiB,GACtB7N,KAAK2N,cAAgB,KACrB3N,KAAK4N,WAAa,KAClB5N,KAAK6H,gBAAgB4E,UACrBzM,KAAK8N,sBAAsBT,cAI7BrN,KAAK+F,SAASC,KAAK8I,WAEnB9O,KAAK0N,MAAQqB,YAAY,IAAM/O,KAAKgP,OAAQ,KAG5ChP,KAAKsO,eACJzF,KAAM,KACL7I,KAAKiP,WACJpG,KAAK,KAGJ7I,KAAK2N,cAAgB,IAAIvB,EACvBpM,KACA,IAAIuE,OACF,gBACC,GAAEmC,eAAE,gBAAiB1G,KAAK2G,MAC3B3G,KAAKwE,SAASC,QAAQC,GACtBC,EAAOpD,QACN,KAAM,GAGXqI,QAAQC,IAAI7J,UAMhBkP,EAAU7H,QAAQ8H,IAAY,YAG1BA,EAASvL,UAAwB,QAAlB,EAAK5D,KAAK+F,gBAAQ,OAAQ,QAAR,EAAb,EAAenC,cAAM,WAAR,EAAb,EAAuBwL,QAAQ7L,gBAChD4L,EAAStL,WAAyB,QAAlB,EAAK7D,KAAK+F,gBAAQ,OAAS,QAAT,EAAb,EAAelC,eAAO,WAAT,EAAb,EAAwBuL,UAEhDpP,KAAK+F,SAASC,KAAKC,WAAW,CAC5BC,EAAG,OACHC,EAAG,CACDrC,QAASqL,EAASrL,WAEnB,KAUTkL,OAAQ,QAKN,GAJAhP,KAAKwN,aACLxN,KAAK+F,SAASC,KAAKqJ,cAGfrP,KAAKwN,WAAa,IAAM,EAAG,CAE7B,IAAI9H,EAAQiH,OAAO2C,KAAKtP,KAAKuN,aAE7BvN,KAAK+F,SAASC,KAAKC,WAAW,CAC5BC,EAAG,cACHC,EAAGT,EAAMxD,OAAS,GAChBN,EAAyB8D,EAAO,IAC9BA,IAIH1F,KAAK+F,SAASC,KAAKuJ,cAEC,QAAzB,KAAAvP,KAAK2N,eAAc1I,cAAM,OAAzB,WAOFuK,cAAcC,GAIZ,OAFA7F,QAAQC,IAAI7J,KAAKwE,SAASC,SAElBgL,GACN,IAAK,KACHzP,KAAKwE,SAASC,QAAQC,GAAGoB,GAAK,EAC9B9F,KAAKwE,SAASC,QAAQI,GAAGiB,GAAK,EAC9B,MAEF,IAAK,OACH9F,KAAKwE,SAASC,QAAQC,GAAGoB,GAAK,EAC9B9F,KAAKwE,SAASC,QAAQI,GAAGiB,GAAK,EAC9B,MAEF,IAAK,OACH9F,KAAKwE,SAASC,QAAQC,GAAGmB,GAAK,EAC9B7F,KAAKwE,SAASC,QAAQI,GAAGgB,GAAK,EAC9B,MAEF,IAAK,QACH7F,KAAKwE,SAASC,QAAQC,GAAGmB,GAAK,EAC9B7F,KAAKwE,SAASC,QAAQI,GAAGgB,GAAK,EAC9B,MAEF,IAAK,QACH7F,KAAKwE,SAASC,QAAU,CACtBC,GAAI,CAAEmB,EAAG,GAAIC,EAAG,KAChBjB,GAAI,CAAEgB,EAAG,GAAIC,EAAG,MAElB,MAUJ,OAPA9F,KAAK+F,SAASC,KAAKC,WAAW,CAC5BC,EAAG,UACHC,EAAGnG,KAAKwE,SAASC,UAChB,GAEHmF,QAAQC,IAAI7J,KAAKwE,SAASC,SAEnBzE,KAAKwE,SAASC,QAQvBsJ,UAAWhJ,GAAK,MAEd,IAAIoI,GAAa,EAMjB,GALKnN,KAAKuN,YAAYxI,EAAI2K,YACxB1P,KAAKuN,YAAYxI,EAAI2K,WAAY,GAIb,QAAtB,EAAI1P,KAAK2N,qBAAa,OAAlB,EAAoBpG,eAAgB,SACtC,IAAIuB,EAAwB,QAArB,EAAG9I,KAAK2N,qBAAa,OAAgB,QAAhB,EAAlB,EAAoBpG,sBAAc,WAAhB,EAAlB,SAAqCxC,IACnC,IAAR+D,IACFqE,GAAa,GAKjB,IAAIrE,EAAM9I,KAAK8N,sBAAsBhJ,cAAcC,GAOW,UANlD,IAAR+D,IACFqE,GAAa,GAKXnN,KAAKyN,aAAezN,KAAKyN,WAAWkC,QAAUxC,KAChDvD,QAAQC,IAAI,gBACe,QAA3B,KAAA7J,KAAKyN,YAAWmC,mBAAW,OAA3B,SAA8B,CAC5BC,YAAa,CACXC,KAAM,QACNlI,KAAM7C,EAAI2K,SACVrL,KAAMU,EAAIV,KACVoD,OAAQ1C,EAAI0C,SAEb,MAQPwG,aAAc8B,GAoBoC,QAlB3C/P,KAAKwE,SAASwL,YAAYC,OAG/BjQ,KAAKkQ,gBAAgB,IAAI9D,EAAQpM,KAAM,IAAIuE,OACxC,OAAMzB,EAAW,GACjB,GAAE4D,eAAE,SAAU1G,KAAK2G,WAAWoJ,EAAWL,WAC1C1P,KAAKwE,SAASC,QAAQC,GACtBC,EAAO3D,MACP2D,EAAOpD,QACN,KAAM,IAETvB,KAAK+F,SAASC,KAAKC,WAAW,CAC5BC,EAAG,mBACHC,EAAG,CAAChD,KAAM4M,EAAWL,SAAUrD,KAAMrM,KAAKwE,SAAS2L,WAKjDnQ,KAAKyN,aAAezN,KAAKyN,WAAWkC,SACX,QAA3B,KAAA3P,KAAKyN,YAAWmC,mBAAW,OAA3B,SAA8B,CAC5BC,YAAa,CACXC,KAAM,YACNlI,KAAMmI,EAAWL,SACjBjI,OAAQsI,EAAWtI,SAEpB,OASP0G,SAASiC,IAEFpQ,KAAKwE,SAASwL,YAAYK,MAAyB,MAAjBD,EAAO3I,UAEpCzH,KAAKwE,SAASwL,YAAYM,WAA8B,MAAjBF,EAAO3I,UAGxDzH,KAAKkQ,gBAAgB,IAAI9D,EAAQpM,KAAM,IAAIuE,OACxC,OAAMzB,EAAW,GACD,MAAjBsN,EAAO3I,OAAiBf,eAAE,UAAW1G,KAAK2G,MAAQD,eAAE,eAAgB1G,KAAK2G,MACzE3G,KAAKwE,SAASC,QAAQC,GACtBC,EAAO3D,MACP2D,EAAOpD,QACN,KAAM,IAETvB,KAAK+F,SAASC,KAAKC,WAAW,CAC5BC,EAAG,aACHC,EAAG,CAAEoK,OAAQH,EAAOG,OAAQT,KAAMM,EAAON,SAS7CI,gBAAgBtH,GAAQ,QAEG,QAAzB,KAAA5I,KAAK2N,eAAcxI,cAAM,OAAzB,UAEKnF,KAAK2N,yBAAyBvB,GACjCpM,KAAK6N,eAAezG,KAAKpH,KAAK2N,eAGhC3N,KAAK2N,cAAgB/E,EAOvB3B,oBAAoB,QAElB,GAAIjH,KAAK6N,eAAe3L,OAAS,EAC/B,OAGFlC,KAAK6H,gBAAgB4E,UAGrB,IAAI+D,EAAe/N,EAAe,CAChC,CAAEU,KAAM,QAASN,OAAQ7C,KAAKwE,SAASsF,QAAQY,QAC/C,CAAEvH,KAAM,OAAQN,OAAQ7C,KAAKwE,SAASsF,QAAQpB,OAC9C,CAAEvF,KAAM,UAAWN,OAAQ7C,KAAKwE,SAASsF,QAAQqB,UACjD,CAAEhI,KAAM,QAASN,OAAQ7C,KAAKwE,SAASsF,QAAQ2G,SAIjD,OAAQD,EAAarN,MACnB,IAAK,QACHnD,KAAK4N,WAAa,IAAIpD,EAAWxK,KAAMA,KAAKwE,SAASkM,QAAQC,KAAM3Q,KAAKwE,SAASkM,QAAQE,OACzF,MAEF,IAAK,OACH5Q,KAAK4N,WAAa,IAAInF,EAAUzI,KAAMA,KAAKwE,SAASkM,QAAQC,KAAM3Q,KAAKwE,SAASkM,QAAQE,OACxF,MAEF,IAAK,UACH5Q,KAAK4N,WAAa,IAAI1C,EAAalL,KAAMA,KAAKwE,SAASkM,QAAQC,KAAM3Q,KAAKwE,SAASkM,QAAQE,OAC3F,MAEF,IAAK,QACH5Q,KAAK4N,WAAa,IAAIxC,EAAYpL,KAAMA,KAAKwE,SAASkM,QAAQC,KAAM3Q,KAAKwE,SAASkM,QAAQE,OAC1F,MAGmB,QAAvB,KAAA5Q,KAAK4N,YAAW5I,eAAO,OAAvB,UAIF4B,gBAAgB,YAGV5G,KAAK6N,eAAe3L,OAAS,EAC/BlC,KAAK2N,cAAgB3N,KAAK6N,eAAegD,OAI3C7Q,KAAK2N,cAAgB3N,KAAK4N,WAC1B5N,KAAK4N,WAAa,KACA,QAAlB,EAAA5N,KAAK2N,qBAAa,OAAM,QAAN,EAAlB,EAAoBtJ,YAAI,OAAW,QAAX,EAAxB,EAA0BC,iBAAS,OAAW,QAAX,EAAnC,EAAqCwM,iBAAS,OAA9C,SAAiD9Q,KAAK6H,gBAAgBgE,yBAIxEkF,YAKArC,WAAY,QAEQ,QAAlB,EAAA1O,KAAK2N,qBAAa,OAAQ,QAAR,EAAlB,EAAoBxI,cAAM,OAA1B,UACAnF,KAAK2N,cAAgB,IAAIvB,EAAQpM,KAAM,IAAIuE,OACzC,WACAmC,eAAE,kBAAmB1G,KAAK2G,MAC1B3G,KAAKwE,SAASC,QAAQC,GACtBC,EAAOrD,IACPqD,EAAOpD,SAMXkN,aAEMzO,KAAK2N,eAAiB3N,KAAK2N,cAActI,WAC3CrF,KAAK2N,cAActI,SAAW,GAKlCiJ,eAEE,OAAOtO,KAAK+F,SAASC,KAAKC,WAAW,CACnCC,EAAG,WACHC,EAAG,CACD1B,QAASzE,KAAKwE,SAASC,QACvB0L,QAASnQ,KAAKwE,SAAS2L,QACvBxJ,KAAM3G,KAAK2G,QAEZ,GAKLsI,WASE,OAPAjP,KAAK2I,MAAQ,CACXD,MAAO,GACPyC,SAAU,GACVT,OAAQ,IAIH1K,KAAK+F,SAASC,KAAKC,WAAW,CACnCC,EAAG,aACF,GACF2C,KAAMC,IAEL9I,KAAK2I,MAAMD,MAAMtB,QAAQ0B,EAAIE,IAAIgI,QACjChR,KAAK2I,MAAMD,MAAMtB,QAAQ0B,EAAIE,IAAIiI,SACjCjR,KAAK2I,MAAMD,MAAMtB,QAAQ0B,EAAIE,IAAIkI,WACjClR,KAAK2I,MAAMwC,SAAS/D,QAAQ0B,EAAIE,IAAImC,UACpCnL,KAAK2I,MAAM+B,OAAOtD,QAAQ0B,EAAIE,IAAI0B,QAElCd,QAAQC,IAAIf,EAAIE,QC3cP,OACf7F,sBACAgO,YACAC,kBAGAC,UAEA,qBACA,wBAMAC,SACA1Q,SACA,6FACA,yBACA,8BCnDkV,I,wBCQ9U2Q,EAAY,eACd,EACAzR,EACAiB,GACA,EACA,KACA,KACA,MAIa,aAAAwQ,E,gCCnBf,IAAIC,EAAU,EAAQ,QAElB9R,EAAUtB,OAEdF,EAAOC,QAAU,SAAU0B,GACzB,GAA0B,WAAtB2R,EAAQ3R,GAAwB,MAAMD,UAAU,6CACpD,OAAOF,EAAQG,K,oCCNjB,wIAGO,MAAM4R,EASXzN,YAAY0D,EAAQgI,EAAUrL,EAAMoD,GAClCzH,KAAK0H,OAASA,EACd1H,KAAK0P,SAAWA,EAChB1P,KAAKqE,KAAOA,EAAKqN,OACjB1R,KAAKyH,OAASA,GASX,MAAMkK,EAUX3N,YAAa0D,EAAQgI,EAAUa,EAAQT,EAAMrI,GAC3CzH,KAAK0H,OAASA,EACd1H,KAAK0P,SAAWA,EAChB1P,KAAKuQ,OAASA,EACdvQ,KAAK8P,KAAOA,EACZ9P,KAAKyH,OAASA,GAQX,MAAMmK,EAQX5N,YAAa0D,EAAQgI,EAAUjI,GAC7BzH,KAAK0H,OAASA,EACd1H,KAAK0P,SAAWA,EAChB1P,KAAKyH,OAASA,GAQX,MAAMoK,EACX7N,YAAa0D,EAAQgI,EAAUjI,GAC7BzH,KAAK0H,OAASA,EACd1H,KAAK0P,SAAWA,EAChB1P,KAAKyH,OAASA,K,qBCvElB,IAAIhI,EAAa,EAAQ,QACrBqS,EAAW,EAAQ,QACnBC,EAAiB,EAAQ,QAG7B7T,EAAOC,QAAU,SAAU6T,EAAOC,EAAOC,GACvC,IAAIC,EAAWC,EAUf,OAPEL,GAEAtS,EAAW0S,EAAYF,EAAMjO,cAC7BmO,IAAcD,GACdJ,EAASM,EAAqBD,EAAUhT,YACxCiT,IAAuBF,EAAQ/S,WAC/B4S,EAAeC,EAAOI,GACjBJ,I,kCChBT,sDAGe,MAAMzN,EAanBP,YAAab,EAAM4I,EAAO0D,EAAM,KAAM4C,EAAQ,KAAMC,EAAQ,KAAMC,EAAO,KAAMC,EAAW,KAAMC,EAAU,KAAMC,EAAS,MAEvH1S,KAAKmD,KAAOA,EACZnD,KAAK+L,MAAQA,EACb/L,KAAKyP,IAAMA,EACXzP,KAAKqS,MAAQA,EACbrS,KAAKsS,MAAQA,EACbtS,KAAKuS,KAAOA,EACZvS,KAAKwS,SAAWA,EAChBxS,KAAKyS,QAAUA,EACfzS,KAAK0S,OAASA,EAQhBvL,OAAQwL,GACN3S,KAAKyP,IAAMkD,EAOb5L,QAAS1C,GACPrE,KAAK+L,MAAQ1H,EAOfoC,WAAYgM,GACVzS,KAAKyS,QAAUA,EAOjB3B,UAAU4B,GACR1S,KAAK0S,OAASA,EAOhBzH,SAAUoH,GACRrS,KAAKqS,MAAQA,EAOf/K,SAAU+K,GACRrS,KAAKsS,MAAQD,EAMfO,cACE5S,KAAKsS,MAAQ,KAOfO,QAASN,GACPvS,KAAKuS,KAAOA,EAOdO,UAAWC,GACT/S,KAAKwS,SAAWO,EAOlB/N,UAEE,IAAIgO,EAAM,GAUV,OATAA,EAAI,QAAUhT,KAAKmD,KACnB6P,EAAI,SAAWhT,KAAKyS,QAAW,GAAEzS,KAAK+L,SAAS/L,KAAKyS,UAAYzS,KAAK+L,MACrEiH,EAAI,SAAWhT,KAAK0S,OAAU,GAAE1S,KAAK0S,UAAUM,EAAI,WAAaA,EAAI,SAChEhT,KAAKyP,MAAKuD,EAAI,OAAShT,KAAKyP,KAC5BzP,KAAKqS,QAAOW,EAAI,SAAWhT,KAAKqS,OAChCrS,KAAKsS,QAAOU,EAAI,SAAWhT,KAAKsS,OAChCtS,KAAKuS,OAAMS,EAAI,QAAUhT,KAAKuS,MAC9BvS,KAAKwS,WAAUQ,EAAI,YAAchT,KAAKwS,UAEnCQ,EAQTC,OAAQ5O,GAEN,GAAY,MAARA,EAAc,OAAO,EACzB,IAAI6O,EAAUlT,KAAKgF,UAEnB,OAAc,OAAPkO,QAAO,IAAPA,OAAO,EAAPA,EAAS/P,QAAY,OAAJkB,QAAI,IAAJA,OAAI,EAAJA,EAAMlB,QACrB,OAAP+P,QAAO,IAAPA,OAAO,EAAPA,EAASnH,SAAa,OAAJ1H,QAAI,IAAJA,OAAI,EAAJA,EAAM0H,SACjB,OAAPmH,QAAO,IAAPA,OAAO,EAAPA,EAASzD,OAAW,OAAJpL,QAAI,IAAJA,OAAI,EAAJA,EAAMoL,OACf,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAASb,SAAa,OAAJhO,QAAI,IAAJA,OAAI,EAAJA,EAAMgO,SACjB,OAAPa,QAAO,IAAPA,OAAO,EAAPA,EAASZ,SAAa,OAAJjO,QAAI,IAAJA,OAAI,EAAJA,EAAMiO,SACjB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASX,QAAY,OAAJlO,QAAI,IAAJA,OAAI,EAAJA,EAAMkO,QAChB,OAAPW,QAAO,IAAPA,OAAO,EAAPA,EAAST,WAAe,OAAJpO,QAAI,IAAJA,OAAI,EAAJA,EAAMoO,WACnB,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAASR,UAAc,OAAJrO,QAAI,IAAJA,OAAI,EAAJA,EAAMqO,UAClB,OAAPQ,QAAO,IAAPA,OAAO,EAAPA,EAASV,YAAgB,OAAJnO,QAAI,IAAJA,OAAI,EAAJA,EAAMmO,a,0DC1IjC,IAAIV,EAAW,EAAQ,QACnBqB,EAA8B,EAAQ,QAI1CjV,EAAOC,QAAU,SAAUiV,EAAG1Q,GACxBoP,EAASpP,IAAY,UAAWA,GAClCyQ,EAA4BC,EAAG,QAAS1Q,EAAQ2Q,S,qBCPpD,IAAIC,EAAiB,EAAQ,QAAuCC,EAEpErV,EAAOC,QAAU,SAAUqV,EAAQC,EAAQ/G,GACzCA,KAAO8G,GAAUF,EAAeE,EAAQ9G,EAAK,CAC3CgH,cAAc,EACdC,IAAK,WAAc,OAAOF,EAAO/G,IACjCkH,IAAK,SAAUC,GAAMJ,EAAO/G,GAAOmH,O,qBCNvC,IAAIC,EAAQ,EAAQ,QAChBC,EAA2B,EAAQ,QAEvC7V,EAAOC,SAAW2V,GAAM,WACtB,IAAIE,EAAQzV,MAAM,KAClB,QAAM,UAAWyV,KAEjBrH,OAAO2G,eAAeU,EAAO,QAASD,EAAyB,EAAG,IAC3C,IAAhBC,EAAMrV,W,kCCRf,kDAEe,MAAMsV,EAMnBjQ,YAAakQ,GACXlU,KAAKmU,OAAS,0CAA0C3Q,MAAM,IAAI4Q,UAAUzQ,KAAK,IACjF3D,KAAKqU,UAAY,IAAIC,IAAIJ,GACzBlU,KAAKuU,eAAiB,GACtBvU,KAAKwU,aAAe,EACpBxU,KAAKoP,QAAU,KACfpP,KAAKyU,cAAgB,KAErBzU,KAAK0U,aAAe,oFAEW,mBAA3B1U,KAAKqU,UAAUM,UAA4D,eAA3B3U,KAAKqU,UAAUM,SACjE3U,KAAK4U,SAAW5U,KAAKqU,UAAUQ,aAAalB,IAAI,KAGhD3T,KAAK4U,SAAW5U,KAAKqU,UAAUS,SAAS7I,OAAO,GAGjDjM,KAAK0K,OAAS,CACZqD,UAAW,OACXC,MAAO,OACP+G,WAAY,OACZ3G,YAAa,OAEb4G,UAAW,OACXC,aAAc,OACdC,QAAU,QAIdC,UACEC,MACE,oCAAsCpV,KAAK4U,UAE5C/L,KAAKC,IACJ9I,KAAKqV,cACLrV,KAAKsV,SAAWvG,YAAY/O,KAAKqV,YAAY9V,KAAKS,MAAO,OAE1DuV,MAAOC,IACNxV,KAAKyV,QAAQ,UAAWD,KAI5BE,aAEE7G,cAAc7O,KAAKsV,UACnBtV,KAAKyV,QAAQ,eAAgB,MAI/BE,iBAcAN,cACED,MACE,mCAAqCpV,KAAK4U,UAE3C/L,KAAMC,GACEA,EAAI8M,QAEZ/M,KAAMC,IACLA,EAAIJ,MAAMrB,QAAQtC,IAOhB,GAAKA,EAAI8Q,UAuCT,OAAI9Q,EAAI8Q,WACN7V,KAAKyV,QAAQ,QAAS,IAAI7D,OACxB7M,EAAI+Q,UACJ/Q,EAAIgR,WACJ,YAGF/V,KAAK4O,KAAK,kBAAoB7J,EAAIiR,cAAcC,mBAPlD,EArCEjW,KAAKyV,QAAQ,YAAa,IAAIhE,OAC5B1M,EAAI+Q,UACJ/Q,EAAIgR,WACJhR,EAAImR,WACJ,WA+CVtH,KAAM7J,GACJ6E,QAAQC,IAAI,eAAiB9E,EAAK/E,KAAK0U,aAAc,IAGvDe,QAAStS,EAAMgT,GAEbnW,KAAK0K,OAAOvH,GAAMgT,M,kCCjJtB,8DAGe,MAAMC,EAEnBpS,YAAaqS,EAAO,KAAM1P,EAAO,MAE/B3G,KAAKsW,MAAQ,CACXC,QAAS,EACTC,OAAQ,GAGVxW,KAAKuP,aAAc,EAGnBvP,KAAK0K,OAAS,CACZsK,UAAW,OACX3G,YAAa,QAGfrO,KAAKqW,KAAOA,EACZrW,KAAK2G,KAAOA,EAGZ3G,KAAKyW,SAAW,GAGhBzW,KAAK0W,iBAAmB,KACxB1W,KAAK2W,kBAAoB5H,YAAY/O,KAAK4W,OAAOrX,KAAKS,MAAO,KAE7DA,KAAK0U,aAAe,oFAEpB1U,KAAK4O,KAAK,yBAMZgI,SACExB,MAAO,oBAAmBpV,KAAKqW,KAAQ,CACrCQ,OAAQ,OACRC,KAAO,uBAERjO,KAAMC,GAAOA,EAAI8M,QACjB/M,KAAMC,IACU,QAAXA,EAAIE,MACNhJ,KAAK4O,KAAK,qBACVC,cAAc7O,KAAK2W,mBACnB3W,KAAKmV,aAGRI,MAAOC,OAMVuB,aACElI,cAAc7O,KAAK2W,mBAMrBK,cACEjI,YAAY,KACVqG,MAAO,oBAAmBpV,KAAKqW,KAAQ,CACrCQ,OAAQ,OACRC,KAAO,uBAERjO,KAAMC,GAAOA,EAAI8M,QACjB/M,KAAMC,IACU,QAAXA,EAAIE,KACNhJ,KAAKsW,MAAMC,YAGdhB,MAAOC,IAAQxV,KAAKsW,MAAME,WAE3BxW,KAAK4O,KAAM,GAAE5O,KAAKsW,MAAMC,WAAWvW,KAAKsW,MAAME,YAAYlU,KAAKkG,MAAMxI,KAAKsW,MAAME,QAAQxW,KAAKsW,MAAMC,QAAUvW,KAAKsW,MAAME,QAAQ,IAAK,QACpI,KAMLrB,UACEnV,KAAKiG,WAAW,CACdC,EAAG,YAEJ2C,KAAMC,IACU,WAAXA,EAAIE,MACNhJ,KAAK4O,KAAK,kBAKV5O,KAAKuP,aAAc,EAGnBvP,KAAK8O,WAAWjG,KAAK,KAEnB7I,KAAKiG,WAAW,CACdC,EAAG,UACHC,EAAG,CAAC,IAAI5B,OAAS,gBAAiBmC,eAAE,gBAAiB1G,KAAK2G,OAAO3B,aAInEhF,KAAKyV,QAAQ,kBAWrB3G,WAEE,OAAOmI,QAAQC,IAAI,CAEjBlX,KAAKiG,WAAW,CAAEC,EAAG,qBAAsB,GAG3ClG,KAAKiG,WAAW,CAAEC,EAAG,sBAAuB,GAG5ClG,KAAKiG,WAAW,CACdC,EAAG,cACF,KAYPD,WAAYkQ,EAAMgB,GAAO,EAAOC,EAAS,GAEvC,OAAO,IAAIH,QAAQ,CAACI,EAASC,KAC3BtX,KAAKuX,MAAMpB,EAAMiB,EAAQD,GACxBtO,KAAMC,GAAOA,EAAI8M,QACjBL,MAAMC,IACL5L,QAAQoK,MAAMwB,GACd8B,EAAO9B,KAER3M,KACCC,IACE9I,KAAKuP,aAAc,EACnB8H,EAAQvO,KAGXyM,MAAMC,IACL5L,QAAQoK,MAAMwB,OASpBnG,cACE+F,MAAO,oBAAmBpV,KAAKqW,KAAQ,CACrCQ,OAAQ,OACRC,KAAO,sBAERjO,KAAMC,GAAOA,EAAI8M,QACjB/M,KAAMC,IACA9I,KAAKuP,cAER3F,QAAQC,IAAI,kBAEZ7J,KAAKiG,WAAW,CACdC,EAAG,aACHC,EAAG,CAAC,iBAGNnG,KAAKyV,QAAQ,gBAIfzV,KAAKuP,aAAc,EACnBzG,EAAIE,IAAI3B,QAAQmQ,IACVxX,KAAKyW,SAASe,EAAIC,GACpBzX,KAAKyW,SAASe,EAAIC,GAAGD,EAAIrR,GAGzBnG,KAAK4O,KAAM,yBAAwB4I,EAAIC,OAI5ClC,MAAMC,IACLxV,KAAKuP,aAAc,EACnBvP,KAAK4O,KAAK,mCAAoC,UASlDL,WAAYpL,EAAMuU,GAChB1X,KAAKyW,SAAStT,GAAQuU,EAOxBC,cAAexU,UACNnD,KAAKyW,SAAStT,GAQvBsS,QAAQtS,EAAMgT,EAAO,MACfnW,KAAK0K,OAAOvH,IACdnD,KAAK0K,OAAOvH,GAAMgT,GAStBvH,KAAM7J,EAAK+K,EAAO,OAChBlG,QAAQkG,GAAM,YAAc/K,EAAK/E,KAAK0U,aAAc,IAStD6C,MAAOpB,EAAMiB,EAAS,EAAGD,GAAO,GAC9B,OAAO/B,MAAO,oBAAmBpV,KAAKqW,KAAQ,CAC5CQ,OAAQ,OACRC,KAAO,KAAIc,KAAKC,UAAU1B,WACzBZ,MAAM,SAAUvB,GAKjB,GAHAhU,KAAKuP,aAAc,EACnBvP,KAAK4O,KAAK,gCAAiC,SAEvCwI,EAAS,IAAMD,EACjB,MAAMnD,EAER,GAAIoD,EAAS,GAAKD,EAChB,MAAMnD,EAER,OAAOhU,KAAKuX,MAAMpB,EAAMiB,EAAS,EAAGD,IACpC5X,KAAKS,U,qBCrQX,IAAI3B,EAAc,EAAQ,QACtByZ,EAAW,EAAQ,QACnBC,EAAqB,EAAQ,QAMjC7Z,EAAOC,QAAUwO,OAAOoF,iBAAmB,aAAe,GAAK,WAC7D,IAEIiG,EAFAC,GAAiB,EACjBha,EAAO,GAEX,IAEE+Z,EAAS3Z,EAAYsO,OAAOuL,yBAAyBvL,OAAOxN,UAAW,aAAayU,KACpFoE,EAAO/Z,EAAM,IACbga,EAAiBha,aAAgB+D,MACjC,MAAOgS,IACT,OAAO,SAAwBZ,EAAG+E,GAKhC,OAJAL,EAAS1E,GACT2E,EAAmBI,GACfF,EAAgBD,EAAO5E,EAAG+E,GACzB/E,EAAEgF,UAAYD,EACZ/E,GAfoD,QAiBzDiF,I,qBCzBN,IAAIC,EAAI,EAAQ,QACZC,EAAS,EAAQ,QACjBnZ,EAAQ,EAAQ,QAChBoZ,EAAgC,EAAQ,QAExCC,EAAe,cACfC,EAAcH,EAAOE,GAErBE,EAA4C,IAAnCpa,MAAM,IAAK,CAAE8U,MAAO,IAAKA,MAElCuF,EAAgC,SAAUC,EAAYC,GACxD,IAAI1F,EAAI,GACRA,EAAEyF,GAAcL,EAA8BK,EAAYC,EAASH,GACnEL,EAAE,CAAEC,QAAQ,EAAMvU,aAAa,EAAM+U,MAAO,EAAGC,OAAQL,GAAUvF,IAG/D6F,EAAqC,SAAUJ,EAAYC,GAC7D,GAAIJ,GAAeA,EAAYG,GAAa,CAC1C,IAAIzF,EAAI,GACRA,EAAEyF,GAAcL,EAA8BC,EAAe,IAAMI,EAAYC,EAASH,GACxFL,EAAE,CAAEY,OAAQT,EAAcU,MAAM,EAAMnV,aAAa,EAAM+U,MAAO,EAAGC,OAAQL,GAAUvF,KAKzFwF,EAA8B,SAAS,SAAUQ,GAC/C,OAAO,SAAelM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAE5DoZ,EAA8B,aAAa,SAAUQ,GACnD,OAAO,SAAmBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAEhEoZ,EAA8B,cAAc,SAAUQ,GACpD,OAAO,SAAoBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAEjEoZ,EAA8B,kBAAkB,SAAUQ,GACxD,OAAO,SAAwBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAErEoZ,EAA8B,eAAe,SAAUQ,GACrD,OAAO,SAAqBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAElEoZ,EAA8B,aAAa,SAAUQ,GACnD,OAAO,SAAmBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAEhEoZ,EAA8B,YAAY,SAAUQ,GAClD,OAAO,SAAkBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAE/DyZ,EAAmC,gBAAgB,SAAUG,GAC3D,OAAO,SAAsBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAEnEyZ,EAAmC,aAAa,SAAUG,GACxD,OAAO,SAAmBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,eAEhEyZ,EAAmC,gBAAgB,SAAUG,GAC3D,OAAO,SAAsBlM,GAAW,OAAO9N,EAAMga,EAAMpZ,KAAMR,gB,kCCtDnE,kCAAe,MAAMyB,EASnB+C,YAAYqV,EAAEC,EAAEC,EAAEC,GAChBxZ,KAAKqZ,EAAIA,EAAE,IACXrZ,KAAKsZ,EAAIA,EAAE,IACXtZ,KAAKuZ,EAAIA,EAAE,IACXvZ,KAAKwZ,EAAIA,K,8FCXE,MAAMC,EAMnBzV,YAAaoL,GACXpP,KAAKoP,QAAUA,EACfpP,KAAK0H,OAAS,KACd1H,KAAK0Z,aAAe,EAEpB1Z,KAAKmU,OAAS,iCACdnU,KAAK2Z,QAAU,eACf3Z,KAAK4Z,OAAS,wBAEd5Z,KAAK0U,aAAe,oFAEpB1U,KAAK6Z,cAAgB,GACrB7Z,KAAK8Z,mBAAoB,EAEzB9Z,KAAK0K,OAAS,CACZqD,UAAW,OACXC,MAAO,OACP+G,WAAY,OACZ7G,OAAQ,OAER8G,UAAW,OACXC,aAAc,OACdC,QAAS,QAObC,UACM4E,OAAOC,SAASC,SAASC,SAAS,SACpCla,KAAKma,UAAY,IAAIC,UAAU,SAAWpa,KAAK4Z,OAAS,QAAS,OAGjE5Z,KAAKma,UAAY,IAAIC,UAAU,QAAUpa,KAAK4Z,OAAS,OAAQ,OAIjE5Z,KAAKma,UAAUE,UAAYra,KAAK+N,UAAUxO,KAAKS,MAC/CA,KAAKma,UAAUG,QAAUta,KAAKkV,QAAQ3V,KAAKS,MAC3CA,KAAKma,UAAUI,QAAUva,KAAKwa,QAAQjb,KAAKS,MAC3CA,KAAKma,UAAUM,OAASza,KAAK0a,OAAOnb,KAAKS,MAO3C2a,yBACE3a,KAAK4a,mBAAqBC,KAAKC,MAE/B,IAAIC,EAAahM,aAAY,KACvB/O,KAAK0H,SACPmH,cAAckM,GACd/a,KAAKgb,kBACLhb,KAAKib,kBAAoBlM,YAAY/O,KAAKgb,gBAAgBzb,KAAKS,MAAO,SAEvET,KAAKS,MAAO,KAMjBkb,wBACErM,cAAc7O,KAAKib,mBAGrBtF,gBAEE,OAAOP,MAAO,kDAAiDpV,KAAKoP,QAAW,CAC7E+L,QAAS,CAAE,YAAanb,KAAKmU,UAE9BtL,KAAKC,GAAOA,EAAI8M,QAChB/M,KAAKC,IACAA,EAAIsS,SACNpb,KAAK0Z,aAAe5Q,EAAIsS,OAAOC,WAUrCtN,UAAUhJ,GAER,GAAW,MAAPA,EAAa,OAGjB,IAAIuW,EAAStb,KAAKub,cAAcxW,EAAIoR,MAGpC,GAAc,MAAVmF,EAGJ,GAAuB,SAAnBA,EAAOE,QAMX,GAAuB,cAAnBF,EAAOE,QAMX,GAAsB,cAAlBF,EAAOE,UAA4BF,EAAOG,KAAK,UAAUvB,SAAS,QAAUoB,EAAOG,KAAK,UAAUvB,SAAS,SAGzGoB,EAAOG,KAAKC,eAAe,qCAC7B1b,KAAKyV,QAAQ,QAAS,IAAI7D,OACxB0J,EAAOG,KAAK,0BACZH,EAAOG,KAAK,oCACZ,OAGFzb,KAAK4O,KAAK,yBAA2B0M,EAAOG,KAAK,sCAKjDzb,KAAKyV,QAAQ,QAAS,IAAI7D,OACxB0J,EAAOG,KAAK,WACZH,EAAOG,KAAK,gBACZ,OAIJzb,KAAK4O,KAAK,kBAAoB0M,EAAOG,KAAK,sBAIvC,GAAsB,WAAlBH,EAAOE,SAAwBF,EAAOG,KAAKC,eAAe,QAAS,CAE1E,IAAIrL,EAAOsL,WAAWL,EAAOG,KAAK,SAC9BG,EAAW,EACXC,EAAYxL,EAAO,GAAK,GAAKA,EAEjC,GAAIA,EAAO,GAAI,OAEXA,EAAO,KAAO,IAChBuL,EAAW,EACXC,EAAYvZ,KAAKkG,MAAM6H,EAAO,MAG5BA,EAAO,KAAQ,IACjBuL,EAAW,EACXC,EAAYvZ,KAAKkG,MAAM6H,EAAO,MAG5BA,EAAO,KAAQ,IACjBuL,EAAW,EACXC,EAAYvZ,KAAKkG,MAAM6H,EAAO,MAG5BA,EAAO,KAAS,IAClBuL,EAAW,EACXC,EAAYvZ,KAAKkG,MAAM6H,EAAO,MAGhCwL,EAAYA,EAAY,GAAK,GAAKA,EAElC7b,KAAKyV,QAAQ,SAAU,IAAI9D,OACzB2J,EAAOG,KAAK,WACZH,EAAOG,KAAK,gBACZI,EACAD,EACA,OAGF5b,KAAK4O,KAAK,mBAAqB0M,EAAOG,KAAK,gBAAkB,MAAQH,EAAOG,KAAK,aAIxD,WAAlBH,EAAOE,SACdxb,KAAKyV,QAAQ,YAAa,IAAIhE,OAC5B6J,EAAOG,KAAK,WACZH,EAAOG,KAAK,gBACZH,EAAOpO,QACP,YA9EFlN,KAAK0H,OAAS4T,EAAOG,KAAK,gBAN1Bzb,KAAKma,UAAU2B,KAAK,SAAWR,EAAOpO,SA6F1CgI,QAASnQ,GACP/E,KAAKyV,QAAQ,UAAW1Q,GACxB/E,KAAK4O,KAAK,WACVhF,QAAQC,IAAI9E,GAMdyV,UACMxa,KAAK8Z,kBACP9Z,KAAKyV,QAAQ,gBAGbzV,KAAKmV,UAGPnV,KAAK4O,KAAK,6BAMZ8L,SACyB,OAAnB1a,KAAKma,WAAoD,IAA9Bna,KAAKma,UAAU4B,aAC5C/b,KAAK4O,KAAK,0BAEV5O,KAAKma,UAAU2B,KAAK,mEACpB9b,KAAKma,UAAU2B,KAAK,QAAU9b,KAAK2Z,SACnC3Z,KAAKma,UAAU2B,KAAK,SAAW9b,KAAKoP,QAAQ7L,eAE5CvD,KAAKyV,QAAQ,cAOjBuG,QACEhc,KAAK8Z,mBAAoB,EACtB9Z,KAAKma,WACNna,KAAKma,UAAU6B,QAInBvG,QAAStS,EAAMgT,GACbnW,KAAK0K,OAAOvH,GAAMgT,GAGpB6E,kBACE5F,MAAO,6DAA+DpV,KAAK0H,OAAQ,CACjFyT,QAAS,CACP,YAAanb,KAAKmU,UAGrBtL,KAAMC,GAAOA,EAAI8M,QACjB/M,KAAMC,IACLA,EAAIqN,KAAK9O,QAAQ4U,IAEXjc,KAAK6Z,cAAcK,SAAS+B,EAASC,WAGrClc,KAAK6Z,cAAgB,MACvB7Z,KAAK6Z,cAAgB7Z,KAAK6Z,cAAcsC,OAAO,IAAK,MAGtDnc,KAAK6Z,cAAczS,KAAK6U,EAASC,SAE7B,IAAIrB,KAAKoB,EAASG,aAAepc,KAAK4a,qBAE1C5a,KAAKyV,QAAQ,aAAc,IAAI5D,OAC7BoK,EAASC,QACTD,EAASI,UACT,OAGFrc,KAAK4O,KAAK,gBAAkBqN,EAASI,iBAK3CzN,KAAM7J,GACJ6E,QAAQC,IAAI,cAAgB9E,EAAK/E,KAAK0U,aAAc,IAGtD6G,cAAce,GACZ,IAAIC,EAAgB,CAChBrP,QAAS,KACTuO,KAAM,KACND,QAAS,KACTgB,SAAUF,EACVlN,QAAS,KACTqN,SAAU,MAGd,GAAqB,MAAlBH,EAAW,GAAY,CACtB,IAAII,EAAWJ,EAAWnU,QAAQ,KAClCwU,EAAYL,EAAWnU,QAAQ,IAAKuU,EAAW,GAC/CE,EAAeN,EAAWnU,QAAQ,IAAKwU,EAAY,GACnDE,EAAeP,EAAWnU,QAAQ,IAAKyU,EAAe,GACtDE,EAAeR,EAAWnU,QAAQ,IAAK0U,EAAe,GAGlDpB,EAAwC,MAAjCa,EAAWS,MAAM,EAAGL,GAAoBJ,EAAWS,MAAM,EAAGL,GAAUzQ,OAAO,GAAGzI,MAAM,KAAO,GACpGwZ,EAAY,GAEhBvB,EAAKpU,QAAQ4V,IACX,IAAIC,EAAWD,EAAIzZ,MAAM,KACzBwZ,EAAUE,EAAS,IAAMA,EAAS,KAGpCX,EAAcd,KAAOuB,EAErBT,EAAcE,SAAWH,EAAWS,MAAML,EAAW,EAAGJ,EAAWnU,QAAQ,MAC3EoU,EAAcf,QAAUc,EAAWS,MAAMJ,EAAY,EAAGC,GACxDL,EAAcnN,QAAUkN,EAAWS,MAAMH,EAAe,EAAGC,GAC3DN,EAAcrP,QAAUoP,EAAWS,MAAMD,EAAe,QAEnDR,EAAWa,WAAW,UAC3BZ,EAAcf,QAAU,OACxBe,EAAcrP,QAAUoP,EAAW9Y,MAAM,KAAK,IAGlD,OAAO+Y,K,qBCjUX,IAAIa,EAAW,EAAQ,QAEvBlf,EAAOC,QAAU,SAAU0B,EAAUwd,GACnC,YAAoBhF,IAAbxY,EAAyBL,UAAU0C,OAAS,EAAI,GAAKmb,EAAWD,EAASvd,K,kCCFlF,IAAIyd,EAAa,EAAQ,QACrBC,EAAS,EAAQ,QACjBpK,EAA8B,EAAQ,QACtCqK,EAAgB,EAAQ,QACxBzL,EAAiB,EAAQ,QACzB0L,EAA4B,EAAQ,QACpCC,EAAgB,EAAQ,QACxBC,EAAoB,EAAQ,QAC5BC,EAA0B,EAAQ,QAClCC,EAAoB,EAAQ,QAC5BC,EAAkB,EAAQ,QAC1BC,EAA0B,EAAQ,QAClCC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAEtB/f,EAAOC,QAAU,SAAU+f,EAAWpF,EAASH,EAAQwF,GACrD,IAAIC,EAAoB,kBACpBC,EAAmBF,EAAqB,EAAI,EAC5CG,EAAOJ,EAAU1a,MAAM,KACvBqV,EAAayF,EAAKA,EAAKpc,OAAS,GAChCqc,EAAgBjB,EAAWle,MAAM,KAAMkf,GAE3C,GAAKC,EAAL,CAEA,IAAIC,EAAyBD,EAAcpf,UAK3C,IAFK8e,GAAWV,EAAOiB,EAAwB,iBAAiBA,EAAuBnL,OAElFsF,EAAQ,OAAO4F,EAEpB,IAAIE,EAAYnB,EAAW,SAEvBoB,EAAe5F,GAAQ,SAAUU,EAAGD,GACtC,IAAIrM,EAAU0Q,EAAwBO,EAAqB5E,EAAIC,OAAGnB,GAC9DtW,EAASoc,EAAqB,IAAII,EAAc/E,GAAK,IAAI+E,EAK7D,YAJgBlG,IAAZnL,GAAuBiG,EAA4BpR,EAAQ,UAAWmL,GACtE6Q,GAAyB5K,EAA4BpR,EAAQ,QAAS+b,EAAgB/b,EAAOpD,MAAO,IACpGqB,MAAQwd,EAAcgB,EAAwBxe,OAAO2d,EAAkB5b,EAAQ/B,KAAM0e,GACrFlf,UAAU0C,OAASmc,GAAkBR,EAAkB9b,EAAQvC,UAAU6e,IACtEtc,KAeT,GAZA2c,EAAavf,UAAYqf,EAEN,UAAf3F,EACE9G,EAAgBA,EAAe2M,EAAcD,GAC5ChB,EAA0BiB,EAAcD,EAAW,CAAEtb,MAAM,IACvD6a,GAAeI,KAAqBG,IAC7Cb,EAAcgB,EAAcH,EAAeH,GAC3CV,EAAcgB,EAAcH,EAAe,sBAG7Cd,EAA0BiB,EAAcH,IAEnCN,EAAS,IAERO,EAAuBrb,OAAS0V,GAClC1F,EAA4BqL,EAAwB,OAAQ3F,GAE9D2F,EAAuBxa,YAAc0a,EACrC,MAAO1K,IAET,OAAO0K,K,qBChET,IAAIC,EAAwB,EAAQ,QAChClf,EAAa,EAAQ,QACrBmf,EAAa,EAAQ,QACrB7gB,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAChC8gB,EAAUlS,OAGVmS,EAAuE,aAAnDF,EAAW,WAAc,OAAOpf,UAArB,IAG/Buf,EAAS,SAAUlL,EAAInH,GACzB,IACE,OAAOmH,EAAGnH,GACV,MAAOsH,MAIX9V,EAAOC,QAAUwgB,EAAwBC,EAAa,SAAU/K,GAC9D,IAAIT,EAAG4L,EAAKjd,EACZ,YAAcsW,IAAPxE,EAAmB,YAAqB,OAAPA,EAAc,OAEO,iBAAjDmL,EAAMD,EAAO3L,EAAIyL,EAAQhL,GAAK7V,IAA8BghB,EAEpEF,EAAoBF,EAAWxL,GAEH,WAA3BrR,EAAS6c,EAAWxL,KAAmB3T,EAAW2T,EAAE6L,QAAU,YAAcld,I,kCC3BnF,8DAGe,SAAS2E,EAAGuW,EAAKxc,GAC9B,MAAc,MAAVA,EACEye,OAAKC,QAAQlC,GACRiC,OAAKC,QAAQlC,GAEZ,IAAGA,KAGTmC,OAAKD,QAAQlC,GACRmC,OAAKD,QAAQlC,GAEZ,IAAGA","file":"js/gamemode-screen.5352d5ad.js","sourcesContent":["var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String($Error(arg).stack); })('zxcasd');\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gamemode.vue?vue&type=style&index=0&id=792c237c&prod&lang=scss&\"","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","var isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"gamemodeScreen\"},[_c('h1',[_vm._v(_vm._s(_vm._f(\"t\")(\"gamemode\",_vm.$store.state.locale)))]),_c('div',{staticClass:\"panel-container\"},[_c('div',{staticClass:\"panel hoverable\",on:{\"click\":function($event){return _vm.start(0)}}},[_c('h2',[_vm._v(_vm._s(_vm._f(\"t\")(\"easy\",_vm.$store.state.locale)))]),_c('p',[_vm._v(_vm._s(_vm._f(\"t\")(\"easyDesc\",_vm.$store.state.locale)))]),_c('img',{attrs:{\"src\":_vm.getImgUrl('easyImg')}})]),_c('div',{staticClass:\"panel hoverable\",on:{\"click\":function($event){return _vm.start(1)}}},[_c('h2',[_vm._v(_vm._s(_vm._f(\"t\")(\"default\",_vm.$store.state.locale)))]),_c('p',[_vm._v(_vm._s(_vm._f(\"t\")(\"defaultDesc\",_vm.$store.state.locale)))]),_c('img',{attrs:{\"src\":_vm.getImgUrl('defaultImg')}})]),_c('div',{staticClass:\"panel hoverable\",on:{\"click\":function($event){return _vm.start(2)}}},[_c('h2',[_vm._v(_vm._s(_vm._f(\"t\")(\"crazy\",_vm.$store.state.locale)))]),_c('p',[_vm._v(_vm._s(_vm._f(\"t\")(\"crazyDesc\",_vm.$store.state.locale)))]),_c('img',{attrs:{\"src\":_vm.getImgUrl('crazyImg')}})])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import ITMRColor from '../models/ITMRColor'\r\nexport default {\r\n\r\n  white: new ITMRColor(255,255,255,1),\r\n  lightGray: new ITMRColor(192, 192, 192, 1),\r\n  gray: new ITMRColor(128, 128, 128, 1),\r\n  darkGray: new ITMRColor(64, 64, 64, 1),\r\n  black: new ITMRColor(0,0,0,1),\r\n\r\n  red: new ITMRColor(255,0,0,1),\r\n  yellow: new ITMRColor(255, 215, 0, 1)\r\n\r\n}","/**\r\n * Isaac Twitch mod gamemodes enumeration\r\n */\r\nexport const ITMR_GAMEMODES = {\r\n  EASY: 0,\r\n  NORMAL: 1,\r\n  CRAZY: 2\r\n}","/**\r\n * Return N random elements from array\r\n * @param {Array} arr - Array for random selection\r\n * @param {Number} n - Count of random elements\r\n */\r\nexport function getRandomElementsFromArr (arr, n) {\r\n  let result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n  if (n > len)\r\n      throw new RangeError(\"getRandomElementsFromArr: more elements taken than available\");\r\n  while (n--) {\r\n      let x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Return random element from array based on weight\r\n * @param {Array} options - Array of objects with weight field\r\n */\r\nexport function weightedRandom(options) {\r\n  let i;\r\n\r\n  let weights = [];\r\n\r\n  for (i = 0; i < options.length; i++)\r\n    weights[i] = options[i].weight + (weights[i - 1] || 0);\r\n\r\n  let random = Math.random() * weights[weights.length - 1];\r\n\r\n  for (i = 0; i < weights.length; i++)\r\n    if (weights[i] > random)\r\n      break;\r\n\r\n  return options[i];\r\n}\r\n\r\n/**\r\n * Generate random string\r\n * @param {Number} length - Length of generated string\r\n * @returns {String} - Random string\r\n */\r\nexport function randString(length) {\r\n  var result = '';\r\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts #ITEM_NAME to Item Name\r\n * @param {String} name - Original name\r\n * @returns - Normalized name\r\n */\r\nexport function getNormalName(name) {\r\n  return titleCase(name.replace(/^#/, '').replace('_NAME', '').replace('_', ' ').replace('MOMS ', 'Mom\\'s ').replace('DADS ', 'Dad\\'s '));\r\n}\r\n\r\n/**\r\n * Capitalize first letter of each word\r\n * @param {String} str - Original string\r\n * @returns - Capitalized string\r\n */\r\nexport function titleCase(str) {\r\n  var splitStr = str.toLowerCase().split(' ');\r\n  for (var i = 0; i < splitStr.length; i++) {\r\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n  }\r\n  return splitStr.join(' ');\r\n}","/**\r\n * Contains all streamers with uniqie trinkets\r\n */\r\nexport default [\r\n\r\n  {\r\n    name: \"Neonomi\",\r\n    twitch: \"neonomi\",\r\n    youtube: \"UChDAzHts9B7sZIvq9NqtW7g\",\r\n    trinket: \"Neo glasses\"\r\n  },\r\n\r\n  {\r\n    name: \"Hutts\",\r\n    twitch: \"huttsgaming\",\r\n    youtube: \"UCy3avhfHpBbbgwZpNvuVklg\",\r\n    trinket: \"Hair clap\"\r\n  },\r\n\r\n  {\r\n    name: \"Tijoe\",\r\n    twitch: \"tijoe\",\r\n    youtube: \"UCpcg8-wx6SOW3PfGT83E-BA\",\r\n    trinket: \"Torn fox ear\"\r\n  },\r\n\r\n  {\r\n    name: \"Rekvizit8bit\",\r\n    twitch: \"rekvizit8bit\",\r\n    youtube: \"UCSa-d35XCyltUYHZBDbq5mg\",\r\n    trinket: \"Gribulya's piece\"\r\n  },\r\n\r\n  {\r\n    name: \"Vertox\",\r\n    twitch: \"vertroxmt\",\r\n    youtube: \"UCMJr3O_NEpDSxqb9cYrZvcA\",\r\n    trinket: \"Spacesuit charge indicator\"\r\n  },\r\n\r\n  {\r\n    name: \"Mr. Ost\",\r\n    twitch: null,\r\n    youtube: \"UCyvSgWv830voOV6Nwqjwo4w\",\r\n    trinket: \"Greed coin eye\"\r\n  },\r\n\r\n  {\r\n    name: \"Crystal Channel\",\r\n    twitch: \"crystalous\",\r\n    youtube: \"UCKF1jFt8PUs240B7ccRXDfw\",\r\n    trinket: \"Crystal shard\"\r\n  },\r\n\r\n  {\r\n    name: \"Grizzly Guy\",\r\n    twitch: \"grizzlyguygaming\",\r\n    youtube: null,\r\n    trinket: \"Grizzly claw\"\r\n  },\r\n\r\n  {\r\n    name: \"HellYeah Play\",\r\n    twitch: \"hellyeahplay\",\r\n    youtube: \"UCMpHpyOyoYj_7uei_sF342Q\",\r\n    trinket: \"Inverted Cross\"\r\n  },\r\n\r\n  {\r\n    name: \"Vitec Play\",\r\n    twitch: \"vitecp\",\r\n    youtube: \"UCXHczq_8PytR6mEJeUTTrqw\",\r\n    trinket: \"UC's stem\"\r\n  },\r\n\r\n  {\r\n    name: \"Melharucos\",\r\n    twitch: \"melharucos\",\r\n    youtube: null,\r\n    trinket: \"Spider eye\"\r\n  },\r\n\r\n  {\r\n    name: \"D4N9\",\r\n    twitch: \"d4n9_twitch\",\r\n    youtube: \"UCIo6gZsEszFf66M0V3WHEAA\",\r\n    trinket: \"Broken D4-R4 console\"\r\n  },\r\n\r\n  {\r\n    name: \"bmvanquisher\",\r\n    twitch: \"bmvanquisher\",\r\n    youtube: null,\r\n    trinket: \"Pug tail\"\r\n  }\r\n\r\n]","import Isaac from '../../../Isaac'\r\nimport { TextMessage } from '../../../../libs/streamEvents';\r\n\r\nimport Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\n\r\nimport { randString } from '../../../helperFuncs'\r\n\r\n/**\r\n * Generic class for all polls\r\n * @property {Isaac} Isaac - Main game controller\r\n * @property {Object} text - Poll text storage\r\n * @property {Boolean} ready - If TRUE, poll ready to start\r\n * @property {Boolean} pollEnd - If TRUE, handleMessage stop working\r\n */\r\nexport default class BasicPoll {\r\n\r\n  /**\r\n   * Create new basic poll\r\n   * @param {Isaac} Isaac - Main game controller\r\n   */\r\n  constructor (Isaac) {\r\n\r\n    this.Isaac = Isaac;\r\n    this.ready = true\r\n    this.pollEnd = false;\r\n    this.freezed = false;\r\n\r\n    this.text = {\r\n      firstline: new ITMRText(\r\n        `p_${randString(8)}_f`,\r\n        '',\r\n        Isaac.settings.textpos.l1,\r\n        Colors.yellow\r\n      ),\r\n\r\n      secondline: new ITMRText(\r\n        `p_${randString(8)}_s`,\r\n        '',\r\n        Isaac.settings.textpos.l2,\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Receive current message from chat\r\n   * @param {TextMessage} msg\r\n   *\r\n   */\r\n  handleMessage(msg) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Some polls, like ItemsPoll, needs to get data from the game before starting\r\n   */\r\n  prepare() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Update current poll state\r\n   */\r\n  update() {\r\n    if (this.freezed) {\r\n      this.unfreeze();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Freeze current poll\r\n   */\r\n  freeze() {\r\n    this.freezed = true;\r\n  }\r\n\r\n  /**\r\n   * Unfreeze current poll\r\n   */\r\n  unfreeze() {\r\n    this.freezed = false;\r\n  }\r\n\r\n}","export default [\r\n\r\n  \"#THE_POLAROID_NAME\",\r\n  \"#THE_NEGATIVE_NAME\",\r\n  \"#KEY_PIECE_1_NAME\",\r\n  \"#KEY_PIECE_2_NAME\",\r\n  \"#BROKEN_SHOVEL_NAME\",\r\n  \"#BROKEN_SHOVEL2_NAME\",\r\n  \"#MOMS_SHOVEL_NAME\",\r\n  \"#KNIFE_PIECE_1_NAME\",\r\n  \"#KNIFE_PIECE_2_NAME\",\r\n  \"#DADS_NOTE_NAME\",\r\n  \"#DOGMA_NAME\",\r\n\r\n  // Powerful items and tainted player items\r\n  \"#DEATH_CERTIFICATE_NAME\",\r\n  \"#BAG_OF_CRAFTING_NAME\",\r\n  \"#FLIP_NAME\",\r\n  \"#RECALL_NAME\",\r\n  \"#HOLD_NAME\"\r\n\r\n]","import Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\nimport Isaac from '../../../Isaac'\r\n\r\nimport t from '../../../../plugins/locale/translateFunction';\r\nimport { TextMessage } from '../../../../libs/streamEvents';\r\nimport BasicPoll from '../Base/BasicPoll';\r\n\r\nimport { randString } from '../../../helperFuncs'\r\nimport ITMRVector from '../../../models/ITMRVector';\r\n\r\n/**\r\n * Poll with images in variants\r\n */\r\nexport default class GraphicPoll extends BasicPoll {\r\n  /**\r\n   * Create new poll with 3 variants\r\n   * @param {Isaac} Isaac - Main game controller\r\n   * @param {Number} pollTime - Time for current poll\r\n   * @param {Number} delayTime - Time for delay after poll result\r\n   */\r\n  constructor(Isaac, pollTime, delayTime) {\r\n    super(Isaac);\r\n\r\n    /** Contains votes per variant @type {Array<Number>} */\r\n    this.votes = [0, 0, 0];\r\n\r\n    /** Contains all votes @type {Number} */\r\n    this.allVotesCount = 0;\r\n\r\n    /** Contains voted users @type {Array<Number|String>} */\r\n    this.users = {};\r\n\r\n    /** Contains variants for poll @type {Array<Object>} */\r\n    this.variants = [];\r\n\r\n    /** Time for polling @type {Number} */\r\n    this.pollTime = pollTime;\r\n\r\n    /** Time for delay fter polling ends @type {Number} */\r\n    this.delayTime = delayTime;\r\n\r\n    /** Need for sending pollframes @type {Boolean} */\r\n    this.isFirstUpdate = true;\r\n\r\n    /** Split second line on 3 parts @override @type {Array<ITMRText>} */\r\n    this.text.secondline = [\r\n      new ITMRText(\r\n        `p_${randString(8)}_s1`,\r\n        '',\r\n        Isaac.settings.textpos.l2,\r\n      ),\r\n\r\n      new ITMRText(\r\n        `p_${randString(8)}_s2`,\r\n        '',\r\n        { X: Isaac.settings.textpos.l2.X + 90, Y: Isaac.settings.textpos.l2.Y }\r\n      ),\r\n\r\n      new ITMRText(\r\n        `p_${randString(8)}_s3`,\r\n        '',\r\n        { X: Isaac.settings.textpos.l2.X + 180, Y: Isaac.settings.textpos.l2.Y }\r\n      ),\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Update current poll state\r\n   */\r\n  update() {\r\n    super.update();\r\n\r\n    // Send pollframes data\r\n    if (this.isFirstUpdate) {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addPollframes',\r\n        d: {\r\n          f1: this.variants[0]?.gfx,\r\n          f2: this.variants[1]?.gfx,\r\n          f3: this.variants[2]?.gfx,\r\n        }\r\n      });\r\n\r\n      this.isFirstUpdate = false;\r\n    }\r\n\r\n    if (!this.pollEnd) {\r\n\r\n      if (this.pollTime > 0) {\r\n\r\n        if (!this.Isaac.isPaused)\r\n        this.pollTime--;\r\n\r\n        this.text.firstline.setPostfix?.(` (${this.pollTime}${t('s', this.Isaac.lang)})`);\r\n\r\n        let pollTexts = this.getPollText();\r\n        for (let i = 0; i < pollTexts.length; i ++) {\r\n          this.text.secondline[i].setText?.(pollTexts[i]);\r\n        }\r\n      }\r\n      else {\r\n        this.pollEnd = true;\r\n        this.endPoll();\r\n        this.Isaac.prepareNextAction();\r\n      }\r\n\r\n    }\r\n    else {\r\n      if (this.delayTime > 0) {\r\n        if (!this.Isaac.isPaused)\r\n          this.delayTime--;\r\n\r\n        this.text.firstline.setPostfix?.(` (${this.delayTime}${t('s', this.Isaac.lang)})`)\r\n      }\r\n      else {\r\n\r\n        this.Isaac.services.itmr.sendToGame({\r\n          m: 'removeText',\r\n          d: [ this.text.firstline.name ]\r\n        })\r\n\r\n        this.text.firstline = null;\r\n        this.text.secondline = null;\r\n\r\n        this.Isaac.runNextAction();\r\n      }\r\n    }\r\n\r\n    let texts = []\r\n\r\n    if (this.text.firstline && this.text.firstline.prepare) {\r\n      this.text.firstline?.setPos(this.Isaac.settings.textpos.l1);\r\n      texts.push(this.text.firstline.prepare());\r\n    }\r\n\r\n    if (this.text.secondline) {\r\n      this.text.secondline[0].setPos?.(this.Isaac.settings.textpos.l2);\r\n      this.text.secondline[1].setPos?.({ X: this.Isaac.settings.textpos.l2.X + 90, Y: this.Isaac.settings.textpos.l2.Y });\r\n      this.text.secondline[2].setPos?.({ X: this.Isaac.settings.textpos.l2.X + 180, Y: this.Isaac.settings.textpos.l2.Y });\r\n\r\n      this.text.secondline.forEach?.(text => {\r\n        texts.push(text.prepare())\r\n      });\r\n    }\r\n\r\n    if (texts.length > 0) {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addText',\r\n        d: texts\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when poll end\r\n   */\r\n  endPoll() {\r\n\r\n    // Requires custom implementation for every child class\r\n    this.text.firstline.setBlink(Colors.white);\r\n\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'removePollframes'\r\n    });\r\n\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'removeText',\r\n      d: [\r\n        this.text.secondline[0].name,\r\n        this.text.secondline[1].name,\r\n        this.text.secondline[2].name\r\n      ]\r\n    })\r\n\r\n    this.text.secondline = null;\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {TextMessage} msg - Message from the chat\r\n   * @returns {Boolean} Show this message in chat\r\n   */\r\n  handleMessaage(msg) {\r\n\r\n    // Check if this is vote for #1\r\n    if (\r\n      msg.text == \"#1\" ||\r\n      msg.text == \"1\" ||\r\n      msg.text.toUpperCase() == this.variants[0].name.toUpperCase()\r\n    ) {\r\n      this.voteFor(0, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    // Or for #2\r\n    else if (\r\n      msg.text == \"#2\" ||\r\n      msg.text == \"2\" ||\r\n      msg.text.toUpperCase() == this.variants[1].name.toUpperCase()\r\n    ) {\r\n      this.voteFor(1, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    // Maybe, for #3?\r\n    else if (\r\n      msg.text == \"#3\" ||\r\n      msg.text == \"3\" ||\r\n      msg.text.toUpperCase() == this.variants[2].name.toUpperCase()\r\n    ) {\r\n      this.voteFor(2, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Add vote for selected variant\r\n   * @param {Number} num - Variant number\r\n   * @param {Number|String} user - Unique user id\r\n   */\r\n  voteFor(num, user) {\r\n    if (this.pollEnd) return;\r\n\r\n    // If \"Russian hackers\" event is active\r\n    if (this.Isaac.specialTriggers.triggers.russianHackers.enabled) {\r\n      num = this.Isaac.specialTriggers.triggers.russianHackers.shuffle[num];\r\n    }\r\n\r\n    // If user already voted\r\n    if (typeof this.users[user] !== 'undefined' && num != this.users[user]) {\r\n\r\n      // Remove previous user vote\r\n      this.votes[this.users[user]]--;\r\n\r\n      // Add new vote\r\n      this.votes[num]++;\r\n\r\n      // Write new vote\r\n      this.users[user] = num;\r\n\r\n    }\r\n\r\n    else if (typeof this.users[user] === 'undefined') {\r\n      this.votes[num]++;\r\n      this.users[user] = num;\r\n      this.allVotesCount++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return winner from current poll\r\n   * @returns {Object} Winner\r\n   */\r\n  getWinner() {\r\n    if ((this.votes[0] == this.votes[1] && this.votes[1] == this.votes[2]) || this.allVotesCount == 0) {\r\n      return this.variants[Math.floor(Math.random() * this.variants.length)];\r\n    }\r\n\r\n    else if (this.votes[0] == this.votes[1] && this.votes[2] < this.votes[0]) {\r\n      return Math.random() > .5 ? this.variants[1] : this.variants[0]\r\n    }\r\n\r\n    else if (this.votes[1] == this.votes[2] && this.votes[0] < this.votes[1]) {\r\n      return Math.random() > .5 ? this.variants[2] : this.variants[1]\r\n    }\r\n\r\n    else if (this.votes[0] == this.votes[2] && this.votes[1] < this.votes[0]) {\r\n      return Math.random() > .5 ? this.variants[2] : this.variants[0]\r\n    }\r\n\r\n    return this.variants[this.votes.indexOf(Math.max(...this.votes))];\r\n  }\r\n\r\n  /**\r\n   * Returns the percentage for the selected poll option\r\n   * @param {Number} variant - Selected variant\r\n   * @returns {Number} Percents on selected variant\r\n   */\r\n  getPercents(variant) {\r\n    if (this.Isaac.settings.hideVotes) {\r\n      return '-'\r\n    }\r\n\r\n    return this.allVotesCount == 0 ? 0 : Math.round(this.votes[variant] / this.allVotesCount * 100);\r\n  }\r\n\r\n  /**\r\n   * Return poll text\r\n   * @returns {Array<String>} Poll text\r\n   */\r\n  getPollText() {\r\n\r\n    return [\r\n      `#1            ${this.getPercents(0)}%`,\r\n      `#2            ${this.getPercents(1)}%`,\r\n      `#3            ${this.getPercents(2)}%`\r\n    ]\r\n\r\n  }\r\n\r\n  freeze () {\r\n\r\n    super.freeze();\r\n    if (!this.pollEnd) {\r\n\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'removePollframes'\r\n      });\r\n\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'removeText',\r\n        d: [\r\n          this.text.firstline.name,\r\n          this.text.secondline[0].name,\r\n          this.text.secondline[1].name,\r\n          this.text.secondline[2].name\r\n        ]\r\n      })\r\n\r\n    }\r\n    else {\r\n\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'removeText',\r\n        d: [this.text.firstline.name]\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  unfreeze () {\r\n    super.unfreeze();\r\n\r\n    if (!this.pollEnd) {\r\n\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addPollframes',\r\n        d: {\r\n          f1: this.variants[0]?.gfx,\r\n          f2: this.variants[1]?.gfx,\r\n          f3: this.variants[2]?.gfx,\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n}","import Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\nimport Isaac from '../../../Isaac'\r\nimport ignorableItems from '../../../data/ignorableItems'\r\nimport { getNormalName } from '../../../helperFuncs';\r\n\r\nimport t from '../../../../plugins/locale/translateFunction';\r\nimport { getRandomElementsFromArr } from '../../../helperFuncs'\r\nimport GraphicPoll from '../Base/GraphicPoll';\r\n\r\nexport default class ItemsPoll extends GraphicPoll {\r\n  /**\r\n   * Create new poll for items\r\n   * @param {Isaac} Isaac - Main game controller\r\n   */\r\n  constructor (Isaac, pollTime, delayTime) {\r\n\r\n    super(Isaac, pollTime, delayTime);\r\n\r\n    /** Contains all items in game @type {Array<Object>} */\r\n    this.items = this.Isaac.lists.items;\r\n\r\n    /** Contains poll type - give item or remove it @type {String} */\r\n    this.action = '';\r\n\r\n    // This poll needs to get data before launching\r\n    this.ready = false;\r\n\r\n  }\r\n\r\n  prepare () {\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'getPlayerItems'\r\n    })\r\n    .then(res => this.setReady(res.out));\r\n  }\r\n\r\n  setReady (playerItems) {\r\n\r\n    try {\r\n      if (this.Isaac.gamemode != 2) {\r\n        playerItems = playerItems.filter(\r\n          playerItem => !ignorableItems.some(ignItem => playerItem == this.items.find(item => item.name == ignItem)?.id)\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.log('Error in ignorableItems.js');\r\n    }\r\n\r\n\r\n    // Remove item with setting chance and only if player have more than 3 items\r\n    if (Math.random() < this.Isaac.settings.chances.removeItems/10 && playerItems.length > 3) {\r\n\r\n      // Set poll state\r\n      this.action = \"removeItem\";\r\n\r\n      // Set firstline text\r\n      this.text.firstline.setText(t('selectItemForRemove', this.Isaac.lang));\r\n\r\n      // Select three items for removing and getting names\r\n      let itemsToRemove = getRandomElementsFromArr(playerItems, 3)\r\n        .map(itemId => {\r\n          return this.items.find(item => item.id == itemId);\r\n        });\r\n\r\n      // Set poll variants\r\n      this.variants = itemsToRemove;\r\n\r\n    }\r\n\r\n    // Give item\r\n    else {\r\n\r\n      // Set poll state\r\n      this.action = \"giveItem\";\r\n\r\n      // Set firstline text\r\n      this.text.firstline.setText(t('selectItem', this.Isaac.lang));\r\n\r\n      // Remove collected and special items from variants\r\n      let currentItemPool = [];\r\n\r\n      if (this.Isaac.gamemode != 2) {\r\n        currentItemPool = this.items.filter(item => {\r\n          return !(playerItems.some(playerItem => playerItem == item?.id) || item.special || ignorableItems.some(ignItem => ignItem == item.name))\r\n        });\r\n      }\r\n      else {\r\n        currentItemPool = this.items.filter(item => {\r\n          return !playerItems.some(playerItem => playerItem == item.id)\r\n        });\r\n      }\r\n\r\n      // Set poll variants\r\n      this.variants = getRandomElementsFromArr(currentItemPool, 3)\r\n\r\n    }\r\n\r\n    this.ready = true;\r\n\r\n  }\r\n\r\n  endPoll() {\r\n    super.endPoll();\r\n\r\n    let winner = this.getWinner();\r\n\r\n    switch (this.action) {\r\n\r\n      case \"giveItem\":\r\n        this.text.firstline.setText(`${t('pollGiveResult', this.Isaac.lang)} ${getNormalName(winner.name)}`);\r\n        this.Isaac.services.itmr.sendToGame({\r\n          m: 'itemAction',\r\n          d: {\r\n            remove: false,\r\n            item: winner.id\r\n          }\r\n        }, true);\r\n        break;\r\n\r\n      case \"removeItem\":\r\n        this.text.firstline.setText(`${t('pollRemoveResult', this.Isaac.lang)} ${getNormalName(winner.name)}`);\r\n        this.Isaac.services.itmr.sendToGame({\r\n          m: 'itemAction',\r\n          d: {\r\n            remove: true,\r\n            item: winner.id\r\n          }\r\n        }, true);\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}","import Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\nimport Isaac from '../../../Isaac'\r\n\r\nimport t from '../../../../plugins/locale/translateFunction';\r\nimport { TextMessage } from '../../../../libs/streamEvents';\r\nimport BasicPoll from '../Base/BasicPoll';\r\n\r\n/**\r\n * Default poll with 3 variants\r\n */\r\nexport default class DefaultPoll extends BasicPoll {\r\n  /**\r\n   * Create new poll with 3 variants\r\n   * @param {Isaac} Isaac - Main game controller\r\n   * @param {Number} pollTime - Time for current poll\r\n   * @param {Number} delayTime - Time for delay after poll result\r\n   */\r\n  constructor (Isaac, pollTime, delayTime) {\r\n    super(Isaac);\r\n\r\n    /** Contains votes per variant @type {Array<Number>} */\r\n    this.votes = [0,0,0];\r\n\r\n    /** Contains all votes @type {Number} */\r\n    this.allVotesCount = 0;\r\n\r\n    /** Contains voted users @type {Array<Number|String>} */\r\n    this.users = {};\r\n\r\n    /** Contains variants for poll @type {Array<Object>} */\r\n    this.variants = [];\r\n\r\n    /** Time for polling @type {Number} */\r\n    this.pollTime = pollTime;\r\n\r\n    /** Time for delay fter polling ends @type {Number} */\r\n    this.delayTime = delayTime;\r\n  }\r\n\r\n  /**\r\n   * Update current poll state\r\n   */\r\n  update () {\r\n    super.update();\r\n\r\n    if (!this.pollEnd) {\r\n\r\n      if (this.pollTime > 0) {\r\n        this.text.firstline.setPostfix?.(` (${this.pollTime}${t('s', this.Isaac.lang)})`);\r\n        this.text.secondline.setText?.(this.getPollText());\r\n\r\n        if (!this.Isaac.isPaused)\r\n          this.pollTime--;\r\n      }\r\n      else {\r\n        this.pollEnd = true;\r\n        this.endPoll();\r\n        this.Isaac.prepareNextAction();\r\n      }\r\n\r\n    }\r\n    else {\r\n      if (this.delayTime > 0) {\r\n        if (!this.Isaac.isPaused)\r\n          this.delayTime--;\r\n\r\n        this.text.firstline.setPostfix?.(` (${this.delayTime}${t('s', this.Isaac.lang)})`)\r\n      }\r\n      else {\r\n\r\n        this.Isaac.services.itmr.sendToGame({\r\n          m: 'removeText',\r\n          d: [\r\n            this.text.firstline.name,\r\n            this.text.secondline.name\r\n          ]\r\n        })\r\n\r\n        this.text.firstline = null;\r\n        this.text.secondline = null;\r\n\r\n        this.Isaac.runNextAction();\r\n      }\r\n    }\r\n\r\n    let texts = []\r\n\r\n    if (this.text.firstline && this.text.firstline.prepare) {\r\n      texts.push(this.text.firstline.prepare())\r\n    }\r\n\r\n    if (this.text.secondline && this.text.secondline.prepare) {\r\n      texts.push(this.text.secondline.prepare())\r\n    }\r\n\r\n    if (texts.length > 0) {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addText',\r\n        d: texts\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when poll end\r\n   */\r\n  endPoll () {\r\n\r\n    // Requires custom implementation for every child class\r\n    this.text.firstline.setBlink(Colors.white);\r\n    this.text.firstline.setPostfix?.(` (${this.delayTime}${t('s', this.Isaac.lang)})`)\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {TextMessage} msg - Message from the chat\r\n   * @returns {Boolean} Show this message in chat\r\n   */\r\n  handleMessaage (msg) {\r\n    if (this.pollEnd) return;\r\n\r\n    // Check if this is vote for #1\r\n    if (\r\n      msg.text == \"#1\" ||\r\n      msg.text == \"1\" ||\r\n      msg.text.toUpperCase() == this.variants[0].name.toUpperCase()\r\n    ) {\r\n      this.voteFor(0, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    // Or for #2\r\n    else if (\r\n      msg.text == \"#2\" ||\r\n      msg.text == \"2\" ||\r\n      msg.text.toUpperCase() == this.variants[1].name.toUpperCase()\r\n    ) {\r\n      this.voteFor(1, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    // Maybe, for #3?\r\n    else if (\r\n      msg.text == \"#3\" ||\r\n      msg.text == \"3\" ||\r\n      msg.text.toUpperCase() == this.variants[2].name.toUpperCase()\r\n    ) {\r\n      this.voteFor(2, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Add vote for selected variant\r\n   * @param {Number} num - Variant number\r\n   * @param {Number|String} user - Unique user id\r\n   */\r\n  voteFor (num, user) {\r\n    if (this.pollEnd) return;\r\n\r\n    // If \"Russian hackers\" event is active\r\n    if (this.Isaac.specialTriggers.triggers.russianHackers.enabled) {\r\n      num = this.Isaac.specialTriggers.triggers.russianHackers.shuffle[num];\r\n    }\r\n\r\n    // If user already voted\r\n    if (typeof this.users[user] !== 'undefined' && num != this.users[user]) {\r\n\r\n      // Remove previous user vote\r\n      this.votes[this.users[user]] --;\r\n\r\n      // Add new vote\r\n      this.votes[num] ++;\r\n\r\n      // Write new vote\r\n      this.users[user] = num;\r\n\r\n    }\r\n\r\n    else if (typeof this.users[user] === 'undefined') {\r\n      this.votes[num] ++;\r\n      this.users[user] = num;\r\n      this.allVotesCount ++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return winner from current poll\r\n   * @returns {Object} Winner\r\n   */\r\n  getWinner () {\r\n\r\n    if ((this.votes[0] == this.votes[1] && this.votes[1]  == this.votes[2]) || this.allVotesCount == 0) {\r\n      return this.variants[Math.floor(Math.random() * this.variants.length)];\r\n    }\r\n\r\n    else if (this.votes[0] == this.votes[1] && this.votes[2] < this.votes[0]) {\r\n      return Math.random() > .5 ? this.variants[1] : this.variants[0]\r\n    }\r\n\r\n    else if (this.votes[1] == this.votes[2] && this.votes[0] < this.votes[1]) {\r\n      return Math.random() > .5 ? this.variants[2] : this.variants[1]\r\n    }\r\n\r\n    else if (this.votes[0] == this.votes[2] && this.votes[1] < this.votes[0]) {\r\n      return Math.random() > .5 ? this.variants[2] : this.variants[0]\r\n    }\r\n\r\n    return this.variants[this.votes.indexOf(Math.max(...this.votes))];\r\n  }\r\n\r\n  /**\r\n   * Returns the percentage for the selected poll option\r\n   * @param {Number} variant - Selected variant\r\n   * @returns {Number} Percents on selected variant\r\n   */\r\n  getPercents (variant) {\r\n    if (this.Isaac.settings.hideVotes) {\r\n      return '-'\r\n    }\r\n\r\n    return this.allVotesCount == 0 ? 0 : Math.round(this.votes[variant]/this.allVotesCount*100);\r\n  }\r\n\r\n  /**\r\n   * Return poll text\r\n   * @returns {String} Poll text\r\n   */\r\n  getPollText () {\r\n\r\n    let text = `#1 ${this.variants[0].name} - ${this.getPercents(0)}%  `;\r\n    text += `#2 ${this.variants[1].name} - ${this.getPercents(1)}%  `;\r\n    text += `#3 ${this.variants[2].name} - ${this.getPercents(2)}%`;\r\n\r\n    return text;\r\n\r\n  }\r\n\r\n  freeze() {\r\n    super.freeze();\r\n  }\r\n\r\n  unfreeze() {\r\n    super.unfreeze();\r\n  }\r\n\r\n\r\n}","import Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\nimport Isaac from '../../../Isaac'\r\n\r\nimport t from '../../../../plugins/locale/translateFunction';\r\nimport { getRandomElementsFromArr, weightedRandom } from '../../../helperFuncs'\r\nimport DefaultPoll from '../Base/DefaultPoll';\r\n\r\nexport default class EventsPoll extends DefaultPoll {\r\n  /**\r\n   * Create new poll for items\r\n   * @param {Isaac} Isaac - Main game controller\r\n   */\r\n  constructor (Isaac, pollTime, delayTime) {\r\n\r\n    super(Isaac, pollTime, delayTime);\r\n\r\n    // Create events list based on gamemode\r\n    let preparedEvents = this.Isaac.lists.events.map(event => {\r\n      return {\r\n        id: event.id,\r\n        name: event.name,\r\n        weight: event.weights[Isaac.gamemode],\r\n        desc: event.desc,\r\n        specialTrigger: event.specialTrigger,\r\n        msgTrigger: event.msgTrigger\r\n      }\r\n    });\r\n\r\n    // Select 3 random events\r\n    for(let i = 0; i < 3; i++) {\r\n      preparedEvents = preparedEvents.filter(event => !this.variants.some(selectedEvent => selectedEvent.id == event.id))\r\n      this.variants.push(weightedRandom(preparedEvents));\r\n    }\r\n\r\n    this.text.firstline.setText(t('selectEvent', this.Isaac.lang));\r\n    this.text.secondline.setText(this.getPollText());\r\n\r\n  }\r\n\r\n  update() {\r\n\r\n    super.update();\r\n\r\n    // Activate event special trigger\r\n    if (this.delayTime == 0) {\r\n      let winner = this.getWinner();\r\n      if (winner.specialTrigger) {\r\n        this.Isaac.specialTriggers.activate(winner.specialTrigger);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  endPoll() {\r\n    super.endPoll();\r\n    let winner = this.getWinner();\r\n\r\n    this.text.firstline.setText(`${t('selectedEvent', this.Isaac.lang)} ${winner.name}`);\r\n    this.text.secondline.setText(winner.desc);\r\n    this.text.secondline.setColor(Colors.lightGray);\r\n\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'eventAction',\r\n      d: {\r\n        id: winner.id\r\n      }\r\n    }, true);\r\n\r\n  }\r\n\r\n  freeze() {\r\n\r\n    super.freeze();\r\n\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'removeText',\r\n      d: [\r\n        this.text.firstline.name,\r\n        this.text.secondline.name\r\n      ]\r\n    })\r\n\r\n  }\r\n\r\n  unfreeze() {\r\n    super.unfreeze();\r\n  }\r\n\r\n\r\n}","import Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\nimport Isaac from '../../../Isaac'\r\nimport { getNormalName } from '../../../helperFuncs';\r\n\r\nimport t from '../../../../plugins/locale/translateFunction';\r\nimport { getRandomElementsFromArr } from '../../../helperFuncs'\r\nimport GraphicPoll from '../Base/GraphicPoll';\r\n\r\nexport default class TrinketsPoll extends GraphicPoll {\r\n  /**\r\n   * Create new poll for trinkets\r\n   * @param {Isaac} Isaac - Main game controller\r\n   */\r\n  constructor (Isaac, pollTime, delayTime) {\r\n\r\n    super(Isaac, pollTime, delayTime);\r\n\r\n    /** Contains all trinkets in game @type {Array<Object>} */\r\n    this.trinkets = Isaac.lists.trinkets;\r\n\r\n    // Set firstline text\r\n    this.text.firstline.setText(t('selectTrinket', this.Isaac.lang));\r\n\r\n    // Select three trinkets\r\n    this.variants = getRandomElementsFromArr(this.trinkets, 3);\r\n\r\n  }\r\n\r\n  endPoll() {\r\n    super.endPoll();\r\n\r\n    let winner = this.getWinner();\r\n\r\n    this.text.firstline.setText(`${t('pollGiveResult', this.Isaac.lang)} ${getNormalName(winner.name)}`);\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'trinketAction',\r\n      d: {\r\n        trinket: winner.id\r\n      }\r\n    }, true);\r\n\r\n  }\r\n\r\n\r\n}","import Colors from '../../../enums/Colors';\r\nimport ITMRText from '../../../models/ITMRText'\r\nimport Isaac from '../../../Isaac'\r\n\r\nimport t from '../../../../plugins/locale/translateFunction';\r\nimport { TextMessage } from '../../../../libs/streamEvents';\r\nimport BasicPoll from '../Base/BasicPoll';\r\n\r\n/**\r\n * Poll with progress bar\r\n */\r\nexport default class PocketsPoll extends BasicPoll {\r\n  /**\r\n   * Create new progress bar poll\r\n   * @param {Isaac} Isaac - Main game controller\r\n   * @param {Number} pollTime - Time for current poll\r\n   * @param {Number} delayTime - Time for delay after poll result\r\n   */\r\n  constructor(Isaac, pollTime, delayTime) {\r\n    super(Isaac);\r\n\r\n    /** Contains positive votes count @type {Number} */\r\n    this.positiveVotes = 1;\r\n\r\n    /** Contains all votes @type {Number} */\r\n    this.allVotesCount = 2;\r\n\r\n    /** Contains current poll type @type {Object} */\r\n    this.pollType = null;\r\n\r\n    /** Contains voted users @type {Object} */\r\n    this.users = {};\r\n\r\n    /** Time for polling @type {Number} */\r\n    this.pollTime = pollTime;\r\n\r\n    /** Time for delay fter polling ends @type {Number} */\r\n    this.delayTime = delayTime;\r\n\r\n    /** Need for sending progressbar @type {Boolean} */\r\n    this.isFirstUpdate = true;\r\n\r\n    /** This poll needs request player type */\r\n    this.ready = false;\r\n\r\n    /** Remove filler votes @type {Boolean} */\r\n    this.fillerVotes = true;\r\n\r\n    // This poll do not have lines until the end\r\n    this.text.secondline = null;\r\n  }\r\n\r\n  prepare() {\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'getPlayerType'\r\n    })\r\n    .then(res => this.setReady(res.out));\r\n  }\r\n\r\n  setReady(playerType) {\r\n\r\n    // Prepare array with all progress bar types\r\n    let types = [\r\n      {\r\n        name: \"Pockets\",\r\n        title: t('selectPockets', this.Isaac.lang),\r\n        sectors: ['none', 'pill', 'card', 'redcard', 'momcard', 'humanitycard', 'rune', 'blackrune', 'holycard', 'diceshard', 'creditcard']\r\n      },\r\n      {\r\n        name: \"Keys\",\r\n        title: t('selectKeys', this.Isaac.lang),\r\n        sectors: ['half', -2, -1, 0, 1, 2, 3, 'gold']\r\n      },\r\n      {\r\n        name: \"Bombs\",\r\n        title: t('selectBombs', this.Isaac.lang),\r\n        sectors: ['half', -2, -1, 0, 1, 2, 3, 'gold']\r\n      },\r\n\r\n      {\r\n        name: \"Coins\",\r\n        title: t('selectCoins', this.Isaac.lang),\r\n        sectors: ['half', -2, -1, 0, 1, 2, 5, 10]\r\n      }\r\n    ];\r\n\r\n    // If player is not Lost or Keeper, add hearts polling\r\n    if (playerType != 10 && playerType != 14) {\r\n      types.push({\r\n        name: \"Hearts\",\r\n        title: t('selectHearts', this.Isaac.lang),\r\n        sectors: ['none', 'halfred', 'halfsoul', 'red', 'soul', 'gold', 'black', 'twitch', 'bone', 'container', 'rainbow']\r\n      });\r\n    }\r\n\r\n    // Select poll type\r\n    this.pollType = types[Math.floor(Math.random() * types.length)];\r\n\r\n    this.ready = true;\r\n\r\n  }\r\n\r\n  /**\r\n   * Update current poll state\r\n   */\r\n  update() {\r\n\r\n    super.update();\r\n\r\n    // Show progress bar\r\n    if (this.isFirstUpdate) {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addProgressBar',\r\n        d: {\r\n          barType: this.pollType.name,\r\n          title: `${this.Isaac.specialTriggers.getFirstlineModifier()} ${this.pollType.title} (${this.pollTime}${t('s', this.Isaac.lang)})`,\r\n          min: 0,\r\n          value: 1,\r\n          max: 2,\r\n          sectors: this.pollType.sectors.length\r\n        }\r\n      })\r\n\r\n      this.isFirstUpdate = false;\r\n    }\r\n\r\n    if (!this.pollEnd) {\r\n\r\n      if (this.pollTime > 0) {\r\n        this.Isaac.services.itmr.sendToGame({\r\n          m: 'setProgressBar',\r\n          d: {\r\n            title: `${this.Isaac.specialTriggers.getFirstlineModifier()} ${this.pollType.title} (${this.pollTime}${t('s', this.Isaac.lang)})`,\r\n            min: 0,\r\n            value: this.positiveVotes,\r\n            max: this.allVotesCount\r\n          }\r\n        })\r\n\r\n        if (!this.Isaac.isPaused)\r\n          this.pollTime--;\r\n      }\r\n      else {\r\n        this.endPoll();\r\n        this.Isaac.prepareNextAction();\r\n      }\r\n\r\n    }\r\n    else {\r\n      if (this.delayTime > 0) {\r\n        if (!this.Isaac.isPaused)\r\n          this.delayTime--;\r\n\r\n        this.text.firstline.setPostfix?.(` (${this.delayTime}${t('s', this.Isaac.lang)})`)\r\n      }\r\n      else {\r\n\r\n        this.Isaac.services.itmr.sendToGame({\r\n          m: 'removeText',\r\n          d: [\r\n            this.text.firstline.name\r\n          ]\r\n        })\r\n\r\n        this.text.firstline = null;\r\n\r\n        this.Isaac.runNextAction();\r\n      }\r\n    }\r\n\r\n    let texts = []\r\n\r\n    if (this.text.firstline && this.text.firstline.prepare && this.pollEnd) {\r\n      texts.push(this.text.firstline.prepare())\r\n    }\r\n\r\n    if (texts.length > 0) {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addText',\r\n        d: texts\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when poll end\r\n   */\r\n  endPoll() {\r\n\r\n    this.pollEnd = true;\r\n    this.Isaac.services.itmr.sendToGame({ m: 'removeProgressBar' });\r\n\r\n    this.text.firstline.setBlink(Colors.white);\r\n    this.text.firstline.setPostfix?.(` (${this.delayTime}${t('s', this.Isaac.lang)})`);\r\n\r\n    let winner = this.getWinner();\r\n\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'pocketsAction',\r\n      d: {\r\n        pickupType: this.pollType.name,\r\n        value: winner\r\n      }\r\n    })\r\n\r\n    // Create messages for Pockets and Hearts pollType\r\n    if (this.pollType.name == \"Pockets\" || this.pollType.name == \"Hearts\") {\r\n\r\n      // If winner is none, send basic message\r\n      if (winner == 'none') {\r\n        this.text.firstline.setText?.(t('pollNoneResult', this.Isaac.lang));\r\n      }\r\n      else {\r\n\r\n        // Set text for Hearts and Pockets poll\r\n        this.text.firstline.setText?.(\r\n          `${t('pollGiveResult', this.Isaac.lang)}: ${t(winner, this.Isaac.lang)} ${\r\n\r\n            // If this is heaerts poll, add \"heart\" word at the end\r\n            this.pollType.name == \"Hearts\" ?\r\n            t('heart', this.Isaac.lang)\r\n            : ''\r\n          }`\r\n        );\r\n\r\n      }\r\n    }\r\n\r\n    // Create message for all other pollType's\r\n    else {\r\n      // If winner is 0, send basic message\r\n      if (winner == 0) {\r\n        this.text.firstline.setText?.(t('pollNoneResult', this.Isaac.lang));\r\n      }\r\n      else {\r\n\r\n        // If winner is equal 'gold', set special message\r\n        if (winner == 'gold') {\r\n          if (this.pollType.name == \"Keys\")\r\n            this.text.firstline.setText?.(`${t('pollGiveResult', this.Isaac.lang)}: ${t('goldenkey', this.Isaac.lang)}`);\r\n          else\r\n            this.text.firstline.setText?.(`${t('pollGiveResult', this.Isaac.lang)}: ${t('goldenbomb', this.Isaac.lang)}`);\r\n        }\r\n\r\n        // If winner is equal 'half', set special message\r\n        else if (winner == 'half') {\r\n          if (this.pollType.name == \"Keys\")\r\n            this.text.firstline.setText?.(`${t('pollRemoveResult', this.Isaac.lang)}: ${t('halfkeys', this.Isaac.lang)}`);\r\n          else if (this.pollType.name == \"Bombs\")\r\n            this.text.firstline.setText?.(`${t('pollRemoveResult', this.Isaac.lang)}: ${t('halfbombs', this.Isaac.lang)}`);\r\n          else if (this.pollType.name == \"Coins\")\r\n            this.text.firstline.setText?.(`${t('pollRemoveResult', this.Isaac.lang)}: ${t('halfcoins', this.Isaac.lang)}`);\r\n        }\r\n\r\n        // If winner more than zero, set message from \"pollGiveResult\" string\r\n        else if (winner > 0) {\r\n          this.text.firstline.setText?.(\r\n            `${t('pollGiveResult', this.Isaac.lang)}: ${winner} ${\r\n              t(\r\n                winner == 1 || winner == -1 ? this.pollType.name.toLowerCase().substr(0, this.pollType.name.length - 1) : this.pollType.name.toLowerCase(),\r\n                this.Isaac.lang\r\n              )\r\n            }`\r\n          )\r\n        }\r\n        // If winner smaller than zero, set message from \"pollRemoveResult\" string\r\n        else {\r\n          this.text.firstline.setText?.(\r\n            `${t('pollRemoveResult', this.Isaac.lang)}: ${-1 * winner} ${t(this.pollType.name.toLowerCase(), this.Isaac.lang)}`\r\n          )\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  handleMessaage(msg) {\r\n\r\n    // Check if this is positive\r\n    if (\r\n      msg.text.toUpperCase() == \"MORE\" ||\r\n      msg.text.toUpperCase() == \"БОЛЬШЕ\"\r\n    ) {\r\n      this.voteFor(true, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    // Or negative\r\n    else if (\r\n      msg.text.toUpperCase() == \"LESS\" ||\r\n      msg.text.toUpperCase() == \"МЕНЬШЕ\"\r\n    ) {\r\n      this.voteFor(false, `${msg.source}${msg.userId}`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Add vote for selected variant\r\n   * @param {Boolen} positive - Variant number\r\n   * @param {Number|String} user - Unique user id\r\n   */\r\n  voteFor(positive, user) {\r\n    if (this.pollEnd) return;\r\n\r\n    // If \"Russian hackers\" event is active, swap votes\r\n    if (this.Isaac.specialTriggers.triggers.russianHackers.enabled) {\r\n      positive = !positive;\r\n    }\r\n\r\n    // If user already voted\r\n    if (typeof this.users[user] !== 'undefined' && positive != this.users[user]) {\r\n\r\n      if (positive) {\r\n        this.positiveVotes ++;\r\n      }\r\n      else {\r\n        this.positiveVotes --;\r\n      }\r\n\r\n      // Write new vote\r\n      this.users[user] = positive;\r\n\r\n    }\r\n\r\n    else if (typeof this.users[user] === 'undefined') {\r\n      if (positive) {\r\n        this.positiveVotes ++;\r\n      }\r\n\r\n      this.users[user] = positive;\r\n      this.allVotesCount++;\r\n    }\r\n\r\n    if (this.fillerVotes) {\r\n      this.positiveVotes--;\r\n      this.allVotesCount -= 2;\r\n      this.fillerVotes = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return winner from current poll\r\n   * @returns {String|Number} Winner\r\n   */\r\n  getWinner() {\r\n    if (this.positiveVotes == 0) {\r\n      return this.pollType.sectors[0];\r\n    }\r\n    else {\r\n      return this.pollType.sectors[Math.ceil(this.positiveVotes / this.allVotesCount * this.pollType.sectors.length) - 1];\r\n    }\r\n  }\r\n\r\n  freeze() {\r\n    super.freeze();\r\n\r\n    if (!this.pollEnd) {\r\n      this.Isaac.services.itmr.sendToGame({ m: 'removeProgressBar' });\r\n    }\r\n    else {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'removeText',\r\n        d: [\r\n          this.text.firstline.name\r\n        ]\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  unfreeze() {\r\n    super.unfreeze();\r\n\r\n    if (!this.pollEnd) {\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addProgressBar',\r\n        d: {\r\n          barType: this.pollType.name,\r\n          title: `${this.Isaac.specialTriggers.getFirstlineModifier()} ${this.pollType.title} (${this.pollTime}${t('s', this.Isaac.lang)})`,\r\n          min: 0,\r\n          value: 1,\r\n          max: 2,\r\n          sectors: this.pollType.sectors.length\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n}","import Isaac from '../Isaac'\r\nimport ITMRText from '../models/ITMRText';\r\n\r\nimport t from '../../plugins/locale/translateFunction';\r\n\r\nexport default class Message {\r\n\r\n  /**\r\n   * Create new Message for Isaac Twitch Mod\r\n   * @param {Isaac} Isaac - Main game controller\r\n   * @param {ITMRText} firstline - First text line\r\n   * @param {ITMRText} secondline - Second text line\r\n   * @param {Number} time - Time for message\r\n   */\r\n  constructor (Isaac, firstline, secondline, time) {\r\n\r\n    this.Isaac = Isaac;\r\n    this.firstline = firstline;\r\n    this.secondline = secondline;\r\n    this.time = time;\r\n\r\n    // Instantly prepare next action, because Message duration is short\r\n    this.Isaac.prepareNextAction()\r\n\r\n  }\r\n\r\n  /**\r\n   * Update current message state\r\n   */\r\n  update() {\r\n    this.firstline.setPostfix(` (${this.time}${t('s', this.Isaac.lang)})`);\r\n\r\n    if (this.time > 0) {\r\n      let texts = [];\r\n\r\n      if (this.firstline)\r\n        texts.push(this.firstline.prepare());\r\n\r\n      if (this.secondline)\r\n        texts.push(this.secondline.prepare());\r\n\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'addText',\r\n        d: texts\r\n      });\r\n\r\n      if (!this.Isaac.isPaused)\r\n        this.time--;\r\n    }\r\n    else {\r\n\r\n      let textsForRemove = []\r\n\r\n      if (this.firstline) {\r\n        textsForRemove.push(this.firstline.name)\r\n      }\r\n\r\n      if (this.secondline) {\r\n        textsForRemove.push(this.secondline.name)\r\n      }\r\n\r\n      this.Isaac.services.itmr.sendToGame({\r\n        m: 'removeText',\r\n        d: textsForRemove\r\n      });\r\n\r\n      this.Isaac.runNextAction();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Freeze current message\r\n   */\r\n  freeze () {\r\n    let textsForRemove = []\r\n\r\n    if (this.firstline) {\r\n      textsForRemove.push(this.firstline.name)\r\n    }\r\n\r\n    if (this.secondline) {\r\n      textsForRemove.push(this.secondline.name)\r\n    }\r\n\r\n    this.Isaac.services.itmr.sendToGame({\r\n      m: 'removeText',\r\n      d: textsForRemove\r\n    });\r\n  }\r\n\r\n}","import { getRandomElementsFromArr } from '../helperFuncs'\r\n\r\nexport default class SpecialTriggers {\r\n\r\n  constructor () {\r\n\r\n    this.triggers = {\r\n\r\n      russianHackers: {\r\n        enabled: false,\r\n        shuffle: [],\r\n        modifier: '[H4CK3D] '\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  activate(name) {\r\n\r\n    this.triggers[name].enabled = true;\r\n\r\n    switch (name) {\r\n\r\n      case 'russianHackers':\r\n        this.triggers.russianHackers.shuffle = getRandomElementsFromArr([0,1,2], 3);\r\n        break;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  stopAll() {\r\n    for (const [key, value] of Object.entries(this.triggers)) {\r\n      value.enabled = false;\r\n    }\r\n  }\r\n\r\n  getFirstlineModifier() {\r\n    let modifier = '';\r\n    for (const [key, value] of Object.entries(this.triggers)) {\r\n      modifier += value.enabled ? value.modifier : ''\r\n    }\r\n\r\n    return modifier;\r\n  }\r\n\r\n}","import TextMessage from '../../libs/streamEvents'\r\nimport Isaac from '../Isaac';\r\n\r\nexport default class SpecialMessageHandler {\r\n\r\n  /**\r\n   *\r\n   * @param {Isaac} Isaac - Main game controller\r\n   */\r\n  constructor (Isaac) {\r\n\r\n    this.Isaac = Isaac;\r\n\r\n    this.state = {\r\n      movePlayer: false,\r\n      viewersAttack: false,\r\n      heavyRain: false,\r\n    }\r\n\r\n    this.sended = 0;\r\n\r\n  }\r\n\r\n  /**\r\n   * Handle current message and check special handlers\r\n   * @param {TextMessage} message - Chat message\r\n   * @returns {Boolean} Show Message in chat or not\r\n   */\r\n  handleMessage (message) {\r\n\r\n    let showInChat = true;\r\n\r\n    if (this.state.movePlayer) {\r\n      let res = this.movePlayer(message);\r\n      if (!res) {\r\n        showInChat = false\r\n      }\r\n    }\r\n\r\n    if (this.state.viewersAttack) {\r\n      let res = this.viewersAttack(message);\r\n      if (!res) {\r\n        showInChat = false\r\n      }\r\n    }\r\n\r\n    if (this.state.heavyRain) {\r\n      let res = this.heavyRain(message);\r\n      if (!res) {\r\n        showInChat = false\r\n      }\r\n    }\r\n\r\n    return showInChat;\r\n\r\n  }\r\n\r\n  resetSended () {\r\n    this.sended = 0;\r\n  }\r\n\r\n  disableAll () {\r\n    this.state.movePlayer = false;\r\n    this.state.viewersAttack = false;\r\n    this.state.heavyRain = false;\r\n  }\r\n\r\n  /**\r\n   * Handle viewersAttack\r\n   * @param {TextMessage} message - Chat message\r\n   * @returns {Boolean} Show Message in chat or not\r\n   */\r\n  viewersAttack(message) {\r\n\r\n    let text = message.text.toUpperCase();\r\n\r\n    if (text == 'PLAYER' || text == 'ИГРОК') {\r\n      this.sendToGame({ m: 'viewersAttack', d: 'p' })\r\n      return false;\r\n    }\r\n    else if (text == 'ENEMY' || text == 'ВРАГ') {\r\n      this.sendToGame({ m: 'viewersAttack', d: 'e' })\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  /**\r\n   * Handle movePlayer\r\n   * @param {TextMessage} message - Chat message\r\n   * @returns {Boolean} Show Message in chat or not\r\n   */\r\n  movePlayer(message) {\r\n\r\n    let text = message.text.toUpperCase();\r\n\r\n    if (text == 'LEFT' || text == 'ВЛЕВО') {\r\n      this.sendToGame({ m: 'movePlayer', d: 'l' })\r\n      return false;\r\n    }\r\n    else if (text == 'RIGHT' || text == 'ВПРАВО') {\r\n      this.sendToGame({ m: 'movePlayer', d: 'r' })\r\n      return false;\r\n    }\r\n    else if (text == 'UP' || text == 'ВВЕРХ') {\r\n      this.sendToGame({ m: 'movePlayer', d: 'u' })\r\n      return false;\r\n    }\r\n    else if (text == 'DOWN' || text == 'ВНИЗ') {\r\n      this.sendToGame({ m: 'movePlayer', d: 'd' })\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  heavyRain(message) {\r\n    let text = message.text.toUpperCase();\r\n\r\n    if (text == 'X' || text == 'Х') {\r\n      this.sendToGame({ m: 'jason'})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  sendToGame (object) {\r\n\r\n    // Restrict to 30 messages per second\r\n    if (this.sended > 30)\r\n      return;\r\n\r\n    this.Isaac.services.itmr.sendToGame(object, false, 10)\r\n\r\n  }\r\n\r\n\r\n}","import t from '../plugins/locale/translateFunction';\r\nimport Colors from './enums/Colors'\r\nimport {ITMR_GAMEMODES} from './enums/Gamemodes'\r\n\r\nimport ITMRText from './models/ITMRText'\r\n\r\nimport {getRandomElementsFromArr, weightedRandom, randString} from './helperFuncs'\r\n\r\nimport streamers from './data/streamers'\r\n\r\nimport TwitchConnect from '../libs/twitchConnect'\r\nimport YoutubeConnect from '../libs/youtubeConnect'\r\nimport IsaacConnect from './isaacConnect'\r\n\r\nimport BasicPoll from './classes/Polls/Base/BasicPoll'\r\nimport ItemsPoll from './classes/Polls/Graphic/ItemsPoll'\r\nimport EventsPoll from './classes/Polls/Text/EventsPoll';\r\nimport TrinketsPoll from './classes/Polls/Graphic/TrinketsPoll';\r\nimport PocketsPoll from './classes/Polls/Bar/PocketsPoll';\r\n\r\nimport Message from './classes/Message'\r\nimport SpecialTriggers from './classes/SpecialTriggers';\r\n\r\nimport { DonateMessage, Subscriber, TextMessage } from '../libs/streamEvents';\r\nimport SpecialMessageHandler from './classes/SpecialMessageHandler';\r\n\r\n/**\r\n * Main game controller\r\n **/\r\nexport default class Isaac {\r\n\r\n  /**\r\n   * Create new Isaac controller\r\n   * @param {Object} services - Twitch, Youtube and ITMR services\r\n   * @param {TwitchConnect} services.twitch - Twitch service\r\n   * @param {YoutubeConnect} services.youtube - Youtube service\r\n   * @param {IsaacConnect} services.itmr - Isaac service\r\n   * @param {Object} settings - Mod settings\r\n   * @param {String} lang - Language code\r\n   * @param {Number} gamemode - Selected gamemode\r\n   */\r\n  constructor (services, settings, lang = 'en', gamemode = ITMR_GAMEMODES.NORMAL) {\r\n\r\n    this.services = services;       // Twitch, Youtube and Isaac connectors\r\n    this.settings = settings;       // Current settings\r\n    this.lang = lang;               // Current language\r\n    this.gamemode = gamemode;       // Current gamemode\r\n\r\n    this.lists = {};                // All items, trinkets, events, etc.\r\n    this.activeUsers = {};          // All user from chat, using for bossnames\r\n    this.ticksCount = 0;            // Contains count of ticks\r\n\r\n    /** Contains chat window @type {Window} */\r\n    this.chatWindow = null;\r\n\r\n    /** Main setInterval id @type {Number} */\r\n    this.timer = null;\r\n\r\n    // ------------ Actions seciotn ------------ //\r\n\r\n    /** Active poll or text object @type {BasicPoll|Message} */\r\n    this.currentAction = null;\r\n\r\n    /** Next poll or text object @type {BasicPoll|Message} */\r\n    this.nextAction = null;\r\n\r\n    /** Interrupted poll or text object @type {Array<BasicPoll|Message>} */\r\n    this.freezedActions = [];\r\n\r\n    /** Contains special handlers for polling modification @type {SepcialTriggers} */\r\n    this.specialTriggers = new SpecialTriggers();\r\n\r\n    /** Contains special handlers for message events @type {SepcialTriggers} */\r\n    this.specialMessageHandler = new SpecialMessageHandler(this);\r\n\r\n    /** Game state @type {Boolean} */\r\n    this.isPaused = false;\r\n\r\n    // Bind events for Twitch\r\n    if (this.services.twitch) {\r\n      this.services.twitch.events.onMessage = this.onMessage.bind(this);\r\n      this.services.twitch.events.onSub = this.onSubscriber.bind(this);\r\n      this.services.twitch.events.onBits = this.onDonate.bind(this);\r\n    }\r\n\r\n    // Bind events for Youtube\r\n    if (this.services.youtube) {\r\n      this.services.youtube.events.onMessage = this.onMessage.bind(this);\r\n      this.services.youtube.events.onSub = this.onSubscriber.bind(this);\r\n      this.services.youtube.events.onSuperchat = this.onDonate.bind(this);\r\n    }\r\n\r\n    // Send settings on reconnect and restore additional graphics for polls\r\n    this.services.itmr.events.onReconnect = () => {\r\n      this.sendSettings();\r\n      console.log(this.currentAction?.isFirstUpdate === false);\r\n      if (this.currentAction && this.currentAction?.isFirstUpdate === false) {\r\n        this.currentAction.isFirstUpdate = true;\r\n      }\r\n    }\r\n\r\n    // Add output handlers\r\n    this.services.itmr.addHandler('changeGameState', ({paused}) => {\r\n      this.isPaused = paused;\r\n    });\r\n\r\n    this.services.itmr.addHandler('acceptPoll', () => {\r\n      this.acceptPoll();\r\n    });\r\n\r\n    this.services.itmr.addHandler('skipPoll', () => {\r\n      this.skipPoll();\r\n    });\r\n\r\n    this.services.itmr.addHandler('newRun', () => {\r\n      this.start();\r\n    });\r\n\r\n    this.services.itmr.addHandler('toggleSpecialHandler', ({name, enable}) => {\r\n      this.services.itmr._log(`Handler ${name} set to ${enable}`)\r\n      this.specialMessageHandler.state[name] = enable;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Launch Isaac on Twitch\r\n   */\r\n  start () {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.freezedActions = [];\r\n      this.currentAction = null;\r\n      this.nextAction = null;\r\n      this.specialTriggers.stopAll();\r\n      this.specialMessageHandler.disableAll();\r\n    }\r\n\r\n    // Clear all UI elements\r\n    this.services.itmr.clearAll();\r\n\r\n    this.timer = setInterval(() => this.tick(), 1000);\r\n\r\n    // Exchange startup data\r\n    this.sendSettings()\r\n    .then (() => {\r\n      this.loadData()\r\n      .then(() => {\r\n\r\n        // Create message about starting poll\r\n        this.currentAction = new Message(\r\n          this,\r\n          new ITMRText(\r\n            'msg_firstline',\r\n            `${t('gameSetupDone', this.lang)}`,\r\n            this.settings.textpos.l1,\r\n            Colors.yellow\r\n          ), null, 5\r\n        )\r\n\r\n        console.log(this);\r\n      });\r\n\r\n    });\r\n\r\n    // Give personal trinket\r\n    streamers.forEach(streamer => {\r\n\r\n      if (\r\n        streamer.twitch === this.services?.twitch?.channel.toLowerCase()\r\n        || streamer.youtube === this.services?.youtube?.channel\r\n      ) {\r\n        this.services.itmr.sendToGame({\r\n          m: 'gift',\r\n          d: {\r\n            trinket: streamer.trinket\r\n          }\r\n        }, true);\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * Timer loop, call every second\r\n   */\r\n  tick () {\r\n    this.ticksCount ++;\r\n    this.services.itmr.checkOutput();\r\n\r\n    // Update user nicknames\r\n    if (this.ticksCount % 10 == 0) {\r\n\r\n      let users = Object.keys(this.activeUsers)\r\n\r\n      this.services.itmr.sendToGame({\r\n        m: 'randomNames',\r\n        d: users.length > 20 ?\r\n          getRandomElementsFromArr(users, 20)\r\n          : users\r\n      })\r\n    }\r\n\r\n    if (!this.services.itmr.isConnected) return;\r\n\r\n    this.currentAction.update?.();\r\n  }\r\n\r\n  /**\r\n   * Change poll position in game\r\n   * @param {String} pos - Position direction\r\n   */\r\n  changeTextPos(pos) {\r\n\r\n    console.log(this.settings.textpos)\r\n\r\n    switch (pos) {\r\n      case 'up':\r\n        this.settings.textpos.l1.Y -= 5;\r\n        this.settings.textpos.l2.Y -= 5;\r\n        break;\r\n\r\n      case 'down':\r\n        this.settings.textpos.l1.Y += 5;\r\n        this.settings.textpos.l2.Y += 5;\r\n        break;\r\n\r\n      case 'left':\r\n        this.settings.textpos.l1.X -= 5;\r\n        this.settings.textpos.l2.X -= 5;\r\n        break;\r\n\r\n      case 'right':\r\n        this.settings.textpos.l1.X += 5;\r\n        this.settings.textpos.l2.X += 5;\r\n        break;\r\n\r\n      case 'reset':\r\n        this.settings.textpos = {\r\n          l1: { X: 16, Y: 190 },\r\n          l2: { X: 16, Y: 215 }\r\n        }\r\n        break;\r\n    }\r\n\r\n    this.services.itmr.sendToGame({\r\n      m: 'textpos',\r\n      d: this.settings.textpos\r\n    }, true);\r\n\r\n    console.log(this.settings.textpos)\r\n\r\n    return this.settings.textpos;\r\n\r\n  }\r\n\r\n  /**\r\n   * Call on new message in chat\r\n   * @param {TextMessage} msg - Message from chat\r\n   */\r\n  onMessage (msg) {\r\n\r\n    let showInChat = true;\r\n    if (!this.activeUsers[msg.userName]) {\r\n      this.activeUsers[msg.userName] = true\r\n    }\r\n\r\n    // Check poll in message\r\n    if (this.currentAction?.handleMessaage) {\r\n      let res = this.currentAction?.handleMessaage?.(msg);\r\n      if (res === false) {\r\n        showInChat = false;\r\n      }\r\n    }\r\n\r\n    // Check special actions in message\r\n    let res = this.specialMessageHandler.handleMessage(msg);\r\n    if (res === false) {\r\n      showInChat = false\r\n    }\r\n\r\n\r\n    // Send message data to chat\r\n    if (this.chatWindow && !this.chatWindow.closed && showInChat) {\r\n      console.log('Send message');\r\n      this.chatWindow.postMessage?.({\r\n        chatMessage: {\r\n          type: 'basic',\r\n          user: msg.userName,\r\n          text: msg.text,\r\n          source: msg.source\r\n        }\r\n      }, '*');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call on new subscriber\r\n   * @param {Subscriber} subscriber - Subscriber object\r\n   */\r\n  onSubscriber (subscriber) {\r\n\r\n    if (!this.settings.subsAndBits.subs)\r\n      return;\r\n\r\n    this.immediateAction(new Message(this, new ITMRText(\r\n      `sub_${randString(8)}`,\r\n      `${t('newSub', this.lang)} - ${subscriber.userName}`,\r\n      this.settings.textpos.l1,\r\n      Colors.white,\r\n      Colors.yellow\r\n    ), null, 3));\r\n\r\n    this.services.itmr.sendToGame({\r\n      m: 'subscriberAction',\r\n      d: {name: subscriber.userName, time: this.settings.subtime}\r\n    });\r\n\r\n\r\n    // Send subscribe data to chat\r\n    if (this.chatWindow && !this.chatWindow.closed) {\r\n      this.chatWindow.postMessage?.({\r\n        chatMessage: {\r\n          type: 'subscribe',\r\n          user: subscriber.userName,\r\n          source: subscriber.source\r\n        }\r\n      }, '*');\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Call on new bits or superchat\r\n   * @param {DonateMessage} donate - Subscriber object\r\n   */\r\n  onDonate(donate) {\r\n\r\n    if (!this.settings.subsAndBits.bits && donate.source == 'tw')\r\n      return;\r\n    else if (!this.settings.subsAndBits.superchat && donate.source == 'yt')\r\n      return;\r\n\r\n    this.immediateAction(new Message(this, new ITMRText(\r\n      `sub_${randString(8)}`,\r\n      donate.source == 'tw' ? t('newBits', this.lang) : t('newSuperchat', this.lang),\r\n      this.settings.textpos.l1,\r\n      Colors.white,\r\n      Colors.yellow\r\n    ), null, 3));\r\n\r\n    this.services.itmr.sendToGame({\r\n      m: 'bitsAction',\r\n      d: { amount: donate.amount, type: donate.type }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Launch action immediately, freeze preview action\r\n   * @param {BasicPoll|Message} action - Action for calling immediately\r\n   */\r\n  immediateAction(action) {\r\n    // Freeze current action\r\n    this.currentAction.freeze?.();\r\n\r\n    if(!(this.currentAction instanceof Message)) {\r\n      this.freezedActions.push(this.currentAction);\r\n    }\r\n\r\n    this.currentAction = action;\r\n\r\n  }\r\n\r\n  /**\r\n   * Prepare next action\r\n   */\r\n  prepareNextAction() {\r\n\r\n    if (this.freezedActions.length > 0) {\r\n      return;\r\n    }\r\n\r\n    this.specialTriggers.stopAll();\r\n\r\n    // Select poll based on weights\r\n    let selectedPoll = weightedRandom([\r\n      { name: 'event', weight: this.settings.chances.events },\r\n      { name: 'item', weight: this.settings.chances.items },\r\n      { name: 'trinket', weight: this.settings.chances.trinkets },\r\n      { name: 'other', weight: this.settings.chances.other },\r\n    ]);\r\n\r\n\r\n    switch (selectedPoll.name) {\r\n      case 'event':\r\n        this.nextAction = new EventsPoll(this, this.settings.timings.vote, this.settings.timings.delay);\r\n        break;\r\n\r\n      case 'item':\r\n        this.nextAction = new ItemsPoll(this, this.settings.timings.vote, this.settings.timings.delay);\r\n        break;\r\n\r\n      case 'trinket':\r\n        this.nextAction = new TrinketsPoll(this, this.settings.timings.vote, this.settings.timings.delay);\r\n        break;\r\n\r\n      case 'other':\r\n        this.nextAction = new PocketsPoll(this, this.settings.timings.vote, this.settings.timings.delay);\r\n        break;\r\n    }\r\n\r\n    this.nextAction.prepare?.();\r\n\r\n  }\r\n\r\n  runNextAction() {\r\n\r\n    // If contains freezed action, launch it\r\n    if (this.freezedActions.length > 0) {\r\n      this.currentAction = this.freezedActions.pop();\r\n      return;\r\n    }\r\n\r\n    this.currentAction = this.nextAction;\r\n    this.nextAction = null;\r\n    this.currentAction?.text?.firstline?.setPrefix?.(this.specialTriggers.getFirstlineModifier());\r\n  }\r\n\r\n  // Give gift for available streamers\r\n  giveGift () {\r\n\r\n  }\r\n\r\n  // Skip current poll\r\n  skipPoll () {\r\n\r\n    this.currentAction?.freeze?.();\r\n    this.currentAction = new Message(this, new ITMRText(\r\n      'skipvote',\r\n      t('skipCurrentPoll', this.lang),\r\n      this.settings.textpos.l1,\r\n      Colors.red,\r\n      Colors.yellow\r\n    ));\r\n\r\n  }\r\n\r\n  // Accept current poll\r\n  acceptPoll() {\r\n\r\n    if (this.currentAction && this.currentAction.pollTime)\r\n      this.currentAction.pollTime = 0;\r\n\r\n  }\r\n\r\n  // Send settings to game\r\n  sendSettings () {\r\n\r\n    return this.services.itmr.sendToGame({\r\n      m: 'settings',\r\n      d: {\r\n        textpos: this.settings.textpos,\r\n        subtime: this.settings.subtime,\r\n        lang: this.lang\r\n      }\r\n    }, true);\r\n\r\n  }\r\n\r\n  // Load all items, trinkets and events from game\r\n  loadData () {\r\n\r\n    this.lists = {                  // List of all polling types\r\n      items: [],\r\n      trinkets: [],\r\n      events: [],\r\n    }\r\n\r\n    // Load items from mod\r\n    return this.services.itmr.sendToGame({\r\n      m: 'getItems'\r\n    }, true)\r\n    .then (res => {\r\n\r\n      this.lists.items.push(...res.out.active);\r\n      this.lists.items.push(...res.out.passive);\r\n      this.lists.items.push(...res.out.familiars);\r\n      this.lists.trinkets.push(...res.out.trinkets);\r\n      this.lists.events.push(...res.out.events);\r\n\r\n      console.log(res.out);\r\n\r\n    });\r\n  }\r\n\r\n}","<template>\r\n  <div class=\"gamemodeScreen\">\r\n    <h1>{{\"gamemode\" | t($store.state.locale)}}</h1>\r\n\r\n    <div class=\"panel-container\">\r\n      <div class=\"panel hoverable\" @click=\"start(0)\">\r\n        <h2>{{\"easy\" | t($store.state.locale)}}</h2>\r\n        <p>{{\"easyDesc\" | t($store.state.locale)}}</p>\r\n        <img :src=\"getImgUrl('easyImg')\"/>\r\n      </div>\r\n\r\n      <div class=\"panel hoverable\" @click=\"start(1)\">\r\n        <h2>{{\"default\" | t($store.state.locale)}}</h2>\r\n        <p>{{\"defaultDesc\" | t($store.state.locale)}}</p>\r\n        <img :src=\"getImgUrl('defaultImg')\"/>\r\n      </div>\r\n\r\n      <div class=\"panel hoverable\" @click=\"start(2)\">\r\n        <h2>{{\"crazy\" | t($store.state.locale)}}</h2>\r\n        <p>{{\"crazyDesc\" | t($store.state.locale)}}</p>\r\n        <img :src=\"getImgUrl('crazyImg')\"/>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BigButton from '../components/BigButton.vue';\r\nimport Isaac from '../isaac/Isaac'\r\n\r\nexport default {\r\n  name: 'gamemodeScreen',\r\n  components: {\r\n    BigButton\r\n  },\r\n\r\n  mounted () {\r\n\r\n    if (!this.$services.itmr) {\r\n      this.$router.push('/');\r\n      return;\r\n    }\r\n\r\n  },\r\n\r\n  methods: {\r\n    start (gamemode) {\r\n      this.$root.isaac = new Isaac(this.$services, this.$store.state.settings, this.$store.state.locale, gamemode);\r\n      this.$root.isaac.start();\r\n      this.$router.push('/game');\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.simple-input {\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 3px solid #343434;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  color: #343434;\r\n  text-align: center;\r\n  max-width: 90px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gamemode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gamemode.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Gamemode.vue?vue&type=template&id=792c237c&\"\nimport script from \"./Gamemode.vue?vue&type=script&lang=js&\"\nexport * from \"./Gamemode.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Gamemode.vue?vue&type=style&index=0&id=792c237c&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","/**\r\n * Basic text message from Twitch or Youtube chat\r\n */\r\nexport class TextMessage {\r\n\r\n  /**\r\n   *\r\n   * @param {Number|String} userId - Unique user id\r\n   * @param {String} userName - Displayed user name\r\n   * @param {String} text - Message text\r\n   * @param {String} source - Source of message, \"yt\" for YouTube, \"tw\" fro Twitch\r\n   */\r\n  constructor(userId, userName, text, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.text = text.trim();\r\n    this.source = source;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Bits message for Twitch\r\n * Superchat message for Youtube\r\n */\r\nexport class DonateMessage {\r\n\r\n  /**\r\n   *\r\n   * @param {Number|String} userId - Unique user id\r\n   * @param {String} userName - Displayed user name\r\n   * @param {Number} amount - Amount of bits\r\n   * @param {Number} type - Type of bits\r\n   * @param {String} source - Source of message, \"yt\" for YouTube, \"tw\" fro Twitch\r\n   */\r\n  constructor (userId, userName, amount, type, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.amount = amount;\r\n    this.type = type;\r\n    this.source = source;\r\n  }\r\n}\r\n\r\n/**\r\n * New subscriber on Twitch\r\n * New sponsor on YouTube\r\n */\r\nexport class Subscriber {\r\n\r\n  /**\r\n   *\r\n   * @param {Number|String} userId - Unique user id\r\n   * @param {String} userName - Displayed user name\r\n   * @param {String} source - Source of message, \"yt\" for YouTube, \"tw\" fro Twitch\r\n   */\r\n  constructor (userId, userName, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.source = source;\r\n  }\r\n}\r\n\r\n/**\r\n * New followers\r\n * Currently not using\r\n */\r\nexport class Follower {\r\n  constructor (userId, userName, source) {\r\n    this.userId = userId;\r\n    this.userName = userName;\r\n    this.source = source;\r\n  }\r\n}","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","import ITMRColor from \"./ITMRColor\";\r\nimport ITMRVector from \"./ITMRVector\";\r\n\r\nexport default class ITMRText {\r\n\r\n  /**\r\n   * Create new Text for Isaac On Twitch Mod\r\n   * @param {String} name - Text id\r\n   * @param {String} value - Text value\r\n   * @param {ITMRVector} pos - Text position\r\n   * @param {ITMRColor} color - Text color\r\n   * @param {ITMRColor} blink - Text blink color\r\n   * @param {Number} size - Text size\r\n   * @param {Boolean} isCenter - Set text to center\r\n   * @param {String} postfix - Text postfix, added to the end of text\r\n   */\r\n  constructor (name, value, pos = null, color = null, blink = null, size = null, isCenter = null, postfix = null, prefix = null) {\r\n\r\n    this.name = name;\r\n    this.value = value;\r\n    this.pos = pos;\r\n    this.color = color;\r\n    this.blink = blink;\r\n    this.size = size;\r\n    this.isCenter = isCenter;\r\n    this.postfix = postfix;\r\n    this.prefix = prefix;\r\n\r\n  }\r\n\r\n  /**\r\n   * Change text position\r\n   * @param {ITMRVector} vector - Vector with new position\r\n   */\r\n  setPos (vector) {\r\n    this.pos = vector\r\n  }\r\n\r\n  /**\r\n   * Change text value\r\n   * @param {String} text - New text value\r\n   */\r\n  setText (text) {\r\n    this.value = text;\r\n  }\r\n\r\n  /**\r\n   * Change text postfix\r\n   * @param {String} postfix - New text postfix\r\n   */\r\n  setPostfix (postfix) {\r\n    this.postfix = postfix;\r\n  }\r\n\r\n  /**\r\n   * Change text prefix\r\n   * @param {String} prefix - New text prefix\r\n   */\r\n  setPrefix(prefix) {\r\n    this.prefix = prefix;\r\n  }\r\n\r\n  /**\r\n   * Change text color\r\n   * @param {ITMRColor|null} color - Text color\r\n   */\r\n  setColor (color) {\r\n    this.color = color\r\n  }\r\n\r\n  /**\r\n   * Change text blink color\r\n   * @param {ITMRColor|null} color - Blink color\r\n   */\r\n  setBlink (color) {\r\n    this.blink = color\r\n  }\r\n\r\n  /**\r\n   * Remove text blinking\r\n   */\r\n  removeBlink () {\r\n    this.blink = null;\r\n  }\r\n\r\n  /**\r\n   * Change text size\r\n   * @param {Number} size - New text size\r\n   */\r\n  setSize (size) {\r\n    this.size = size;\r\n  }\r\n\r\n  /**\r\n   * Change text centering\r\n   * @param {Boolean} center - Set text to center\r\n   */\r\n  setCenter (center) {\r\n    this.isCenter = center;\r\n  }\r\n\r\n  /**\r\n   * Return only not null fields for decreasing data size\r\n   * @returns {Object}\r\n   */\r\n  prepare () {\r\n\r\n    let obj = {};\r\n    obj['name'] = this.name;\r\n    obj['value'] = this.postfix ? `${this.value} ${this.postfix}` : this.value;\r\n    obj['value'] = this.prefix ? `${this.prefix} ${obj['value']}` : obj['value'];\r\n    if (this.pos) obj['pos'] = this.pos;\r\n    if (this.color) obj['color'] = this.color;\r\n    if (this.blink) obj['blink'] = this.blink;\r\n    if (this.size) obj['size'] = this.size;\r\n    if (this.isCenter) obj['isCenter'] = this.isCenter;\r\n\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Check if two texts is equals\r\n   * @param {ITMRText} text - Text for checking\r\n   * @returns {Boolean}\r\n   */\r\n  equals (text) {\r\n\r\n    if (text == null) return false;\r\n    let curText = this.prepare();\r\n\r\n    return curText?.name == text?.name &&\r\n      curText?.value == text?.value &&\r\n      curText?.pos == text?.pos &&\r\n      curText?.color == text?.color &&\r\n      curText?.blink == text?.blink &&\r\n      curText?.size == text?.size &&\r\n      curText?.postfix == text?.postfix &&\r\n      curText?.prefix == text?.prefix &&\r\n      curText?.isCenter == text?.isCenter;\r\n\r\n  }\r\n\r\n}","var isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\n// `InstallErrorCause` abstract operation\n// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\nmodule.exports = function (O, options) {\n  if (isObject(options) && 'cause' in options) {\n    createNonEnumerableProperty(O, 'cause', options.cause);\n  }\n};\n","var defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (Target, Source, key) {\n  key in Target || defineProperty(Target, key, {\n    configurable: true,\n    get: function () { return Source[key]; },\n    set: function (it) { Source[key] = it; }\n  });\n};\n","var fails = require('../internals/fails');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = !fails(function () {\n  var error = Error('a');\n  if (!('stack' in error)) return true;\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));\n  return error.stack !== 7;\n});\n","import {TextMessage, DonateMessage, Subscriber} from './streamEvents';\r\n\r\nexport default class YoutubeConnect {\r\n\r\n  /**\r\n   * Create new chat object for Youtube\r\n   * @param {String} streamURLString - URL for YouTube stream\r\n   */\r\n  constructor (streamURLString) {\r\n    this.apikey = \"wgnn-wBx-_VT5Nu996o8ylc-t786swbRBySazIA\".split('').reverse().join('');\r\n    this.streamURL = new URL(streamURLString);\r\n    this.lastMessagesId = [];\r\n    this.vuewersCount = 0;\r\n    this.channel = null;\r\n    this.nextPageToken = null;\r\n\r\n    this.consoleStyle = 'background-color: #FF0000; color: #FFFFFF; border-radius: 100px;padding: 1px 4px;';\r\n\r\n    if (this.streamURL.hostname == \"www.youtube.com\" || this.streamURL.hostname == \"youtube.com\") {\r\n      this.streamId = this.streamURL.searchParams.get('v');\r\n    }\r\n    else {\r\n      this.streamId = this.streamURL.pathname.substr(1);\r\n    }\r\n\r\n    this.events = {\r\n      onMessage: () => {},\r\n      onSub: () => {},\r\n      onFollower: () => {},\r\n      onSuperchat: () => {},\r\n\r\n      onConnect: () => {},\r\n      onDisconnect: () => {},\r\n      onError:  () => {}\r\n    }\r\n  }\r\n\r\n  connect () {\r\n    fetch(\r\n      \"http://localhost:22137/init?ytId=\" + this.streamId \r\n    )\r\n    .then(res => {\r\n      this._updateChat();\r\n      this.updTimer = setInterval(this._updateChat.bind(this), 5000);\r\n    })\r\n    .catch (err => {\r\n      this._signal('onError', err);\r\n    })\r\n  }\r\n\r\n  disconnect () {\r\n\r\n    clearInterval(this.updTimer);\r\n    this._signal('onDisconnect', null);\r\n\r\n  }\r\n\r\n  updateViewers() {\r\n\r\n    /*return fetch(\r\n      `https://www.googleapis.com/youtube/v3/videos?part=liveStreamingDetails&id=${this.streamId}&fields=items%2FliveStreamingDetails&key=${this.apikey}`\r\n      )\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.items?.length > 0) {\r\n          this.viewersCount = res.items[0].liveStreamingDetails.concurrentViewers\r\n        }\r\n      })*/\r\n\r\n  }\r\n\r\n  _updateChat () {\r\n    fetch(\r\n      \"http://localhost:22137/pop?ytId=\" + this.streamId\r\n    )\r\n    .then (res => {\r\n      return res.json();\r\n    })\r\n    .then (res => {\r\n      res.items.forEach(msg => {\r\n       \r\n        /*\r\n         { channelId: i.authorExternalChannelId || i.authorName.simpleText, authorName: i.authorName.simpleText, msgContent: '$$SYS_MEMBER$$' }\r\n        */\r\n\r\n        // Check if this is a basic message\r\n        if (!msg.isSponsor) {\r\n\r\n          this._signal('onMessage', new TextMessage(\r\n            msg.channelId,\r\n            msg.authorName,\r\n            msg.msgContent,\r\n            'yt'\r\n          ));\r\n          return;\r\n        }\r\n\r\n        // Check if message have superchat data (like bits for Twitch)\r\n       /* if (msg.snippet.type == 'superChatEvent') {\r\n          this._signal('onSuperchat', new DonateMessage(\r\n            msg.snippet.authorChannelId,\r\n            msg.authorDetails.displayName,\r\n            msg.snippet.superChatDetails.tier > 5 ? 5 : msg.snippet.superChatDetails.tier,\r\n            1,\r\n            'yt'\r\n          ));\r\n\r\n          this._log(\"Get donate from \" + msg.authorDetails.displayName + \" - \" + msg.snippet.superChatDetails.amountMicros);\r\n          return;\r\n        }\r\n\r\n        else if (msg.snippet.type == 'superStickerEvent') {\r\n          this._signal('onSuperchat', new DonateMessage(\r\n            msg.snippet.authorChannelId,\r\n            msg.authorDetails.displayName,\r\n            msg.snippet.superStickerDetails.tier > 5 ? 5 : msg.snippet.superStickerDetails.tier,\r\n            1,\r\n            'yt'\r\n          ));\r\n\r\n          this._log(\"Get donate from \" + msg.authorDetails.displayName + \" - \" + msg.snippet.superChatDetails.amountMicros);\r\n          return;\r\n        }*/\r\n\r\n        // Check if this is new subscriber\r\n        if (msg.isSponsor) {\r\n          this._signal('onSub', new Subscriber(\r\n            msg.channelId,\r\n            msg.authorName,\r\n            'yt'\r\n          ));\r\n\r\n          this._log(\"New subscriber \" + msg.authorDetails.displayName);\r\n          return;\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  _log (msg) {\r\n    console.log('%cYoutube%c ' + msg, this.consoleStyle, '');\r\n  }\r\n\r\n  _signal (name, data) {\r\n\r\n    this.events[name](data);\r\n\r\n  }\r\n}","import ITMRText from './models/ITMRText'\r\nimport t from '../plugins/locale/translateFunction'\r\n\r\nexport default class IsaacConnect {\r\n\r\n  constructor (port = 8666, lang = \"en\") {\r\n    // Requests count\r\n    this.stats = {\r\n      success: 0, // Success requests (including successful attempts)\r\n      errors: 0   // Failed requests\r\n    };\r\n\r\n    this.isConnected = false;\r\n\r\n    // Event handlers\r\n    this.events = {\r\n      onConnect: () => {},\r\n      onReconnect: () => {}\r\n    };\r\n\r\n    this.port = port; // Game port\r\n    this.lang = lang; // Localization\r\n\r\n    // Game to site handlers\r\n    this.handlers = {};\r\n\r\n    // Timers\r\n    this.checkOutputTimer = null;\r\n    this.searchServerTimer = setInterval(this.search.bind(this), 1000);\r\n\r\n    this.consoleStyle = 'background-color: #EFD8CD; color: #473A3C; border-radius: 100px;padding: 1px 4px;';\r\n\r\n    this._log('Search game server...')\r\n  }\r\n\r\n  /**\r\n   * Search active game server\r\n   */\r\n  search () {\r\n    fetch(`http://localhost:${this.port}`, {\r\n      method: 'POST',\r\n      body: `||{\"m\":\"ping\"}||\\n`\r\n    })\r\n    .then (res => res.json())\r\n    .then (res => {\r\n      if (res.out == \"pong\") {\r\n        this._log('Game server found')\r\n        clearInterval(this.searchServerTimer);\r\n        this.connect()\r\n      }\r\n    })\r\n    .catch (err => {})\r\n  }\r\n\r\n  /**\r\n   * Stop current game server searching\r\n   */\r\n  stopSearch() {\r\n    clearInterval(this.searchServerTimer);\r\n  }\r\n\r\n  /**\r\n   * Test requests\r\n   */\r\n  testConnect () {\r\n    setInterval(() => {\r\n      fetch(`http://localhost:${this.port}`, {\r\n        method: 'POST',\r\n        body: `||{\"m\":\"ping\"}||\\n`\r\n      })\r\n      .then (res => res.json())\r\n      .then (res => {\r\n        if (res.out == \"pong\") {\r\n          this.stats.success ++;\r\n        }\r\n      })\r\n      .catch (err => {this.stats.errors ++;})\r\n\r\n      this._log(`${this.stats.success}|${this.stats.errors} / ${Math.round(this.stats.errors/(this.stats.success + this.stats.errors)*100, 2)}%`);\r\n    }, 250)\r\n  }\r\n\r\n  /**\r\n   * Send connect request to game server\r\n   */\r\n  connect () {\r\n    this.sendToGame({\r\n      m: 'connect'\r\n    })\r\n    .then (res => {\r\n      if (res.out == 'success') {\r\n        this._log('Game connected');\r\n\r\n        // Launch checking game output for two-way connection\r\n        //this.checkOutputTimer = setInterval(() => this.checkOutput(), 1000);\r\n\r\n        this.isConnected = true;\r\n\r\n\r\n        this.clearAll().then(() => {\r\n          // Show text for player\r\n          this.sendToGame({\r\n            m: 'addText',\r\n            d: [new ITMRText('gameConnected', t('gameConnected', this.lang)).prepare()]\r\n          })\r\n\r\n          // Call event onConnect\r\n          this._signal('onConnect');\r\n        });\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Clear all UI elements from mod in game\r\n   */\r\n  clearAll() {\r\n\r\n    return Promise.all([\r\n      // Remove pollframes\r\n      this.sendToGame({ m: 'removePollframes' }, true),\r\n\r\n      // Remove progress bar\r\n      this.sendToGame({ m: 'removeProgressBar' }, true),\r\n\r\n      // Clear text\r\n      this.sendToGame({\r\n        m: 'clearText'\r\n      }, true)\r\n    ]);\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Send data to game server\r\n   * @param {Object} data - Data for sending to game\r\n   * @param {Boolean} high - If high = true, resend data more times if request failed\r\n   * @param {Number} repeat - Current attempt number\r\n   */\r\n  sendToGame (data, high = false, repeat = 0) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this._send(data, repeat, high)\r\n      .then (res => res.json())\r\n      .catch(err => {\r\n        console.error(err);\r\n        reject(err);\r\n      })\r\n      .then(\r\n        res => {\r\n          this.isConnected = true;\r\n          resolve(res);\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Request output data from game\r\n   */\r\n  checkOutput () {\r\n    fetch(`http://localhost:${this.port}`, {\r\n      method: 'POST',\r\n      body: `||{\"m\":\"out\"}||\\n`\r\n    })\r\n    .then (res => res.json())\r\n    .then (res => {\r\n      if (!this.isConnected) {\r\n\r\n        console.log(\"send reconnect\");\r\n\r\n        this.sendToGame({\r\n          m: 'removeText',\r\n          d: ['siteMessage']\r\n        })\r\n\r\n        this._signal('onReconnect');\r\n      }\r\n\r\n\r\n      this.isConnected = true;\r\n      res.out.forEach(com => {\r\n        if (this.handlers[com.c]) {\r\n          this.handlers[com.c](com.d);\r\n        }\r\n        else {\r\n          this._log(`Not found handler for ${com.c}`);\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      this.isConnected = false;\r\n      this._log('Connection to Isaac skip request', 'warn');\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add handler for request\r\n   * @param {String} name - Value from field output.c in checkOutput method\r\n   * @param {Function} func - Function that is triggered when a command is received\r\n   */\r\n  addHandler (name, func) {\r\n    this.handlers[name] = func;\r\n  }\r\n\r\n /**\r\n * Remove existing handler\r\n * @param {String} name - Value from field output.c in checkOutput method\r\n */\r\n  removeHandler (name) {\r\n    delete this.handlers[name];\r\n  }\r\n\r\n  /**\r\n   * Using inside this class for calling callbacks for events\r\n   * @param {String} name - Event name\r\n   * @param {Object} data - Data from event\r\n   */\r\n  _signal(name, data = null) {\r\n    if (this.events[name]) {\r\n      this.events[name](data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log to console with style\r\n   * @param {String} msg - Message for console\r\n   * @param {String} type - Log function: log, warning or error\r\n   */\r\n  _log (msg, type = 'log') {\r\n    console[type]('%cITMR%c ' + msg, this.consoleStyle, '');\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} data - Data for sending\r\n   * @param {Number} repeat - Current attempt\r\n   * @param {Boolean} high - TRUE, if data has high priority\r\n   */\r\n  _send (data, repeat = 1, high = false) {\r\n    return fetch(`http://localhost:${this.port}`, {\r\n      method: 'POST',\r\n      body: `||${JSON.stringify(data)}||\\n`\r\n    }).catch(function (error) {\r\n\r\n      this.isConnected = false;\r\n      this._log('Connection to Isaac is broken', 'error');\r\n\r\n      if (repeat > 3 && !high) {\r\n        throw error;\r\n      }\r\n      if (repeat > 6 && high) {\r\n        throw error;\r\n      }\r\n      return this._send(data, repeat + 1, high);\r\n    }.bind(this));\r\n  }\r\n\r\n}","/* eslint-disable no-proto -- safe */\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","/* eslint-disable no-unused-vars -- required for functions `.length` */\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar wrapErrorConstructorWithCause = require('../internals/wrap-error-constructor-with-cause');\n\nvar WEB_ASSEMBLY = 'WebAssembly';\nvar WebAssembly = global[WEB_ASSEMBLY];\n\nvar FORCED = Error('e', { cause: 7 }).cause !== 7;\n\nvar exportGlobalErrorCauseWrapper = function (ERROR_NAME, wrapper) {\n  var O = {};\n  O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);\n  $({ global: true, constructor: true, arity: 1, forced: FORCED }, O);\n};\n\nvar exportWebAssemblyErrorCauseWrapper = function (ERROR_NAME, wrapper) {\n  if (WebAssembly && WebAssembly[ERROR_NAME]) {\n    var O = {};\n    O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED);\n    $({ target: WEB_ASSEMBLY, stat: true, constructor: true, arity: 1, forced: FORCED }, O);\n  }\n};\n\n// https://github.com/tc39/proposal-error-cause\nexportGlobalErrorCauseWrapper('Error', function (init) {\n  return function Error(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('EvalError', function (init) {\n  return function EvalError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('RangeError', function (init) {\n  return function RangeError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('ReferenceError', function (init) {\n  return function ReferenceError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('SyntaxError', function (init) {\n  return function SyntaxError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('TypeError', function (init) {\n  return function TypeError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('URIError', function (init) {\n  return function URIError(message) { return apply(init, this, arguments); };\n});\nexportWebAssemblyErrorCauseWrapper('CompileError', function (init) {\n  return function CompileError(message) { return apply(init, this, arguments); };\n});\nexportWebAssemblyErrorCauseWrapper('LinkError', function (init) {\n  return function LinkError(message) { return apply(init, this, arguments); };\n});\nexportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {\n  return function RuntimeError(message) { return apply(init, this, arguments); };\n});\n","export default class ITMRColor {\r\n\r\n  /**\r\n   * Create new color from RGBA data\r\n   * @param {Number} r - Red from 0 to 255\r\n   * @param {Number} g - Green from 0 to 255\r\n   * @param {Number} b - Blue from 0 to 255\r\n   * @param {Number} a - Alpha from 0 to 1\r\n   */\r\n  constructor(r,g,b,a) {\r\n    this.r = r/255;\r\n    this.g = g/255;\r\n    this.b = b/255;\r\n    this.a = a\r\n  }\r\n\r\n}","import {TextMessage, DonateMessage, Subscriber, Follower} from './streamEvents';\r\n\r\nexport default class TwitchConnect {\r\n\r\n  /**\r\n   * Create new chat object for Twitch\r\n   * @param {String} channel - Streamer nickname\r\n   */\r\n  constructor (channel) {\r\n    this.channel = channel;\r\n    this.userId = null;\r\n    this.viewersCount = 0;\r\n\r\n    this.apikey = \"vtr91vw1dzji7piypq7r13itr6is2i\"; // API Key for Twitch API. Not very secret information\r\n    this.botname = \"justinfan666\";\r\n    this.server = \"irc-ws.chat.twitch.tv\";\r\n\r\n    this.consoleStyle = 'background-color: #6441A4; color: #FFFFFF; border-radius: 100px;padding: 1px 4px;';\r\n\r\n    this.lastFollowers = [];\r\n    this.plannedDisconnect = false;\r\n\r\n    this.events = {\r\n      onMessage: () => {},\r\n      onSub: () => {},\r\n      onFollower: () => {},\r\n      onBits: () => {},\r\n\r\n      onConnect: () => {},\r\n      onDisconnect: () => {},\r\n      onError: () => {}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to Twitch chat using websockets\r\n   */\r\n  connect () {\r\n    if (window.location.protocol.includes('https')) {\r\n      this.webSocket = new WebSocket('wss://' + this.server + ':443/', 'irc');\r\n    }\r\n    else {\r\n      this.webSocket = new WebSocket('ws://' + this.server + ':80/', 'irc');\r\n    }\r\n\r\n\r\n    this.webSocket.onmessage = this.onMessage.bind(this);\r\n    this.webSocket.onerror = this.onError.bind(this);\r\n    this.webSocket.onclose = this.onClose.bind(this);\r\n    this.webSocket.onopen = this.onOpen.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Lauching request for checking new followers.\r\n   * Not working, because requires backend implementation\r\n   */\r\n  startCheckNewFollowers () {\r\n    this.checkFollowersFrom = Date.now();\r\n\r\n    let waitUserId = setInterval((() => {\r\n      if (this.userId) {\r\n        clearInterval(waitUserId);\r\n        this._checkFollowers();\r\n        this.updFollowersTimer = setInterval(this._checkFollowers.bind(this), 3*60*1000);\r\n      }\r\n    }).bind(this), 500);\r\n  }\r\n\r\n  /**\r\n   * Disable followers checking\r\n   */\r\n  stopCheckNewFollowers () {\r\n    clearInterval(this.updFollowersTimer);\r\n  }\r\n\r\n  updateViewers () {\r\n\r\n    return fetch(`https://api.twitch.tv/helix/streams?user_login=${this.channel}`, {\r\n      headers: { 'Client-ID': this.apikey },\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.stream) {\r\n        this.viewersCount = res.stream.viewers\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * Calling whem new message received\r\n   * @param {String} msg - Raw message from Twitch\r\n   */\r\n  onMessage(msg) {\r\n    // Ignore incorrect messages\r\n    if (msg == null) return;\r\n\r\n    // Try to parse message\r\n    let parsed = this._parseMessage(msg.data);\r\n\r\n    //Ignore unparsed messages\r\n    if (parsed == null) return;\r\n\r\n    // Get PING, send PONG\r\n    if (parsed.command === \"PING\") {\r\n      this.webSocket.send(\"PONG :\" + parsed.message);\r\n      return;\r\n    }\r\n\r\n    // Get user id\r\n    if (parsed.command === \"ROOMSTATE\") {\r\n      this.userId = parsed.tags['room-id'];\r\n      return;\r\n    }\r\n\r\n    // Handle subscribers\r\n    if (parsed.command == \"USERNOTICE\" && (parsed.tags[\"msg-id\"].includes('sub') || parsed.tags[\"msg-id\"].includes('gift'))) {\r\n\r\n      // Gifted subs\r\n      if (parsed.tags.hasOwnProperty(\"msg-param-recipient-display-name\")) {\r\n        this._signal('onSub', new Subscriber(\r\n          parsed.tags[\"msg-param-recipient-id\"],\r\n          parsed.tags[\"msg-param-recipient-display-name\"],\r\n          'tw'\r\n        ));\r\n\r\n        this._log(\"New gifted subscriber \" + parsed.tags[\"msg-param-recipient-display-name\"]);\r\n      }\r\n\r\n      // Basic subs\r\n      else {\r\n        this._signal('onSub', new Subscriber(\r\n          parsed.tags[\"user-id\"],\r\n          parsed.tags[\"display-name\"],\r\n          'tw'\r\n        ));\r\n      }\r\n\r\n      this._log(\"New subscriber \" + parsed.tags[\"display-name\"]);\r\n    }\r\n\r\n    // Handle bits\r\n    else if (parsed.command == \"PRIVMSG\" && parsed.tags.hasOwnProperty('bits')) {\r\n\r\n      let bits = parseFloat(parsed.tags[\"bits\"]);\r\n      let bitsType = 1;\r\n      let bitsCount = bits > 10 ? 10 : bits;\r\n\r\n      if (bits < 10) return;\r\n\r\n      if (bits / 100 >= 1) {\r\n        bitsType = 2;\r\n        bitsCount = Math.round(bits / 100);\r\n      }\r\n\r\n      if (bits / 1000 >= 1) {\r\n        bitsType = 3;\r\n        bitsCount = Math.round(bits / 1000);\r\n      }\r\n\r\n      if (bits / 5000 >= 1) {\r\n        bitsType = 4;\r\n        bitsCount = Math.round(bits / 5000);\r\n      }\r\n\r\n      if (bits / 10000 >= 1) {\r\n        bitsType = 5;\r\n        bitsCount = Math.round(bits / 10000);\r\n      }\r\n\r\n      bitsCount = bitsCount > 10 ? 10 : bitsCount;\r\n\r\n      this._signal('onBits', new DonateMessage(\r\n        parsed.tags[\"user-id\"],\r\n        parsed.tags[\"display-name\"],\r\n        bitsCount,\r\n        bitsType,\r\n        'tw'\r\n      ));\r\n\r\n      this._log(\"Get donate from \" + parsed.tags[\"display-name\"] + \" - \" + parsed.tags[\"bits\"]);\r\n    }\r\n\r\n    // Handle default message\r\n    else if (parsed.command == \"PRIVMSG\") {\r\n      this._signal('onMessage', new TextMessage(\r\n        parsed.tags[\"user-id\"],\r\n        parsed.tags[\"display-name\"],\r\n        parsed.message,\r\n        'tw'\r\n      ));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called on error with websocket\r\n   * @param {String} msg\r\n   */\r\n  onError (msg) {\r\n    this._signal('onError', msg);\r\n    this._log(\"Error: \");\r\n    console.log(msg);\r\n  }\r\n\r\n  /**\r\n   * Called on disconnect from websocket\r\n   */\r\n  onClose () {\r\n    if (this.plannedDisconnect) {\r\n      this._signal('onDisconnect');\r\n    }\r\n    else {\r\n      this.connect();\r\n    }\r\n\r\n    this._log(\"Disconnect from websocket\");\r\n  }\r\n\r\n  /**\r\n   * Called when connection with chat established\r\n   */\r\n  onOpen () {\r\n    if (this.webSocket !== null && this.webSocket.readyState === 1) {\r\n      this._log(\"Connected to websocket\");\r\n\r\n      this.webSocket.send('CAP REQ :twitch.tv/tags twitch.tv/commands twitch.tv/membership');\r\n      this.webSocket.send('NICK ' + this.botname);\r\n      this.webSocket.send('JOIN #' + this.channel.toLowerCase());\r\n\r\n      this._signal('onConnect');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close current connection with Twitch chat\r\n   */\r\n  close () {\r\n    this.plannedDisconnect = true;\r\n    if(this.webSocket){\r\n      this.webSocket.close();\r\n    }\r\n  }\r\n\r\n  _signal (name, data) {\r\n    this.events[name](data);\r\n  }\r\n\r\n  _checkFollowers () {\r\n    fetch (\"https://api.twitch.tv/helix/users/follows?first=100&to_id=\" + this.userId, {\r\n      headers: {\r\n        'Client-ID': this.apikey\r\n      }\r\n    })\r\n    .then (res => res.json())\r\n    .then (res => {\r\n      res.data.forEach(follower => {\r\n        // If follower exists, skip it\r\n        if (this.lastFollowers.includes(follower.from_id)) return;\r\n\r\n        // Check array size and clear it if need\r\n        if (this.lastFollowers > 1000)\r\n          this.lastFollowers = this.lastFollowers.splice(100, 900);\r\n\r\n        // Add new follower to readed\r\n        this.lastFollowers.push(follower.from_id);\r\n\r\n        if (new Date(follower.followed_at) < this.checkFollowersFrom) return;\r\n\r\n        this._signal('onFollower', new Follower(\r\n          follower.from_id,\r\n          follower.from_name,\r\n          'tw'\r\n        ));\r\n\r\n        this._log(\"New follower \" + follower.from_name);\r\n      })\r\n    })\r\n  }\r\n\r\n  _log (msg) {\r\n    console.log('%cTwitch%c ' + msg, this.consoleStyle, '');\r\n  }\r\n\r\n  _parseMessage(rawMessage) {\r\n    let parsedMessage = {\r\n        message: null,\r\n        tags: null,\r\n        command: null,\r\n        original: rawMessage,\r\n        channel: null,\r\n        username: null\r\n    };\r\n\r\n    if(rawMessage[0] === '@') {\r\n        let tagIndex = rawMessage.indexOf(' '),\r\n        userIndex = rawMessage.indexOf(' ', tagIndex + 1),\r\n        commandIndex = rawMessage.indexOf(' ', userIndex + 1),\r\n        channelIndex = rawMessage.indexOf(' ', commandIndex + 1),\r\n        messageIndex = rawMessage.indexOf(':', channelIndex + 1);\r\n\r\n        // Parse tags to key-value dictionary\r\n        let tags = rawMessage.slice(0, tagIndex) != null ? rawMessage.slice(0, tagIndex).substr(1).split(\";\") : [];\r\n        let keyedTags = {};\r\n\r\n        tags.forEach(val => {\r\n          let splitted = val.split('=');\r\n          keyedTags[splitted[0]] = splitted[1];\r\n        });\r\n\r\n        parsedMessage.tags = keyedTags;\r\n\r\n        parsedMessage.username = rawMessage.slice(tagIndex + 2, rawMessage.indexOf('!'));\r\n        parsedMessage.command = rawMessage.slice(userIndex + 1, commandIndex);\r\n        parsedMessage.channel = rawMessage.slice(commandIndex + 1, channelIndex);\r\n        parsedMessage.message = rawMessage.slice(messageIndex + 1);\r\n    }\r\n    else if (rawMessage.startsWith(\"PING\")) {\r\n        parsedMessage.command = \"PING\";\r\n        parsedMessage.message = rawMessage.split(\":\")[1];\r\n    }\r\n\r\n    return parsedMessage;\r\n  }\r\n}","var toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar proxyAccessor = require('../internals/proxy-accessor');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar installErrorCause = require('../internals/install-error-cause');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nmodule.exports = function (FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {\n  var STACK_TRACE_LIMIT = 'stackTraceLimit';\n  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;\n  var path = FULL_NAME.split('.');\n  var ERROR_NAME = path[path.length - 1];\n  var OriginalError = getBuiltIn.apply(null, path);\n\n  if (!OriginalError) return;\n\n  var OriginalErrorPrototype = OriginalError.prototype;\n\n  // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006\n  if (!IS_PURE && hasOwn(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;\n\n  if (!FORCED) return OriginalError;\n\n  var BaseError = getBuiltIn('Error');\n\n  var WrappedError = wrapper(function (a, b) {\n    var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, undefined);\n    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();\n    if (message !== undefined) createNonEnumerableProperty(result, 'message', message);\n    if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(result, 'stack', clearErrorStack(result.stack, 2));\n    if (this && isPrototypeOf(OriginalErrorPrototype, this)) inheritIfRequired(result, this, WrappedError);\n    if (arguments.length > OPTIONS_POSITION) installErrorCause(result, arguments[OPTIONS_POSITION]);\n    return result;\n  });\n\n  WrappedError.prototype = OriginalErrorPrototype;\n\n  if (ERROR_NAME !== 'Error') {\n    if (setPrototypeOf) setPrototypeOf(WrappedError, BaseError);\n    else copyConstructorProperties(WrappedError, BaseError, { name: true });\n  } else if (DESCRIPTORS && STACK_TRACE_LIMIT in OriginalError) {\n    proxyAccessor(WrappedError, OriginalError, STACK_TRACE_LIMIT);\n    proxyAccessor(WrappedError, OriginalError, 'prepareStackTrace');\n  }\n\n  copyConstructorProperties(WrappedError, OriginalError);\n\n  if (!IS_PURE) try {\n    // Safari 13- bug: WebAssembly errors does not have a proper `.name`\n    if (OriginalErrorPrototype.name !== ERROR_NAME) {\n      createNonEnumerableProperty(OriginalErrorPrototype, 'name', ERROR_NAME);\n    }\n    OriginalErrorPrototype.constructor = WrappedError;\n  } catch (error) { /* empty */ }\n\n  return WrappedError;\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","import l_En from './locales/en';\r\nimport l_Ru from './locales/ru';\r\n\r\nexport default function t (val, locale) {\r\n  if (locale == \"ru\") {\r\n    if (l_Ru.strings[val])\r\n      return l_Ru.strings[val];\r\n    else\r\n      return `!${val}!`;\r\n  }\r\n  else {\r\n    if (l_En.strings[val])\r\n      return l_En.strings[val];\r\n    else\r\n      return `!${val}!`;\r\n  }\r\n}"],"sourceRoot":""}